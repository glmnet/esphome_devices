{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "definitions": {
    "CONFIG.COMPONENT_SCHEMA": {
      "properties": { "setup_priority": { "type": "number" } },
      "type": ["object", "null"]
    },
    "CONFIG.ENTITY_BASE_SCHEMA": {
      "properties": {
        "name": { "type": "string" },
        "internal": { "type": "boolean" },
        "disabled_by_default": { "type": "boolean", "default": false },
        "icon": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"]
    },
    "CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA": {
      "allOf": [
        {
          "properties": {
            "retain": { "type": "boolean" },
            "discovery": { "type": "boolean" },
            "state_topic": { "type": "string" },
            "availability": {
              "properties": {
                "topic": { "type": "string" },
                "payload_available": { "type": "string", "default": "online" },
                "payload_not_available": {
                  "type": "string",
                  "default": "offline"
                }
              },
              "type": ["object", "null"],
              "required_": ["topic"]
            },
            "command_topic": { "type": "string" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "CONFIG.MQTT_COMPONENT_AVAILABILITY_SCHEMA": {
      "properties": {
        "topic": { "type": "string" },
        "payload_available": { "type": "string", "default": "online" },
        "payload_not_available": { "type": "string", "default": "offline" }
      },
      "type": ["object", "null"],
      "required_": ["topic"]
    },
    "CONFIG.MQTT_COMPONENT_SCHEMA": {
      "properties": {
        "retain": { "type": "boolean" },
        "discovery": { "type": "boolean" },
        "state_topic": { "type": "string" },
        "availability": {
          "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_AVAILABILITY_SCHEMA"
        }
      },
      "type": ["object", "null"]
    },
    "POLLING_COMPONENT": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": {
            "update_interval": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "60s"
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA": {
      "properties": {
        "repeat": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"]
    },
    "REMOTE_BASE.DISH_SCHEMA": {
      "properties": {
        "address": { "type": "number", "default": 1 },
        "command": { "type": "number" }
      },
      "type": ["object", "null"],
      "required_": ["command"]
    },
    "REMOTE_BASE.JVC_SCHEMA": {
      "properties": { "data": { "type": "string" } },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "REMOTE_BASE.LG_SCHEMA": {
      "properties": {
        "data": { "type": "string" },
        "nbits": { "enum": [28, 32] }
      },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "REMOTE_BASE.MIDEA_SCHEMA-code[]": { "type": "number" },
    "REMOTE_BASE.MIDEA_SCHEMA": {
      "properties": {
        "code": {
          "type": "array",
          "items": { "$ref": "#/definitions/REMOTE_BASE.MIDEA_SCHEMA-code[]" }
        }
      },
      "type": ["object", "null"],
      "required_": ["code"]
    },
    "REMOTE_BASE.NEC_SCHEMA": {
      "properties": {
        "address": { "type": "string" },
        "command": { "type": "string" }
      },
      "type": ["object", "null"],
      "required_": ["address", "command"]
    },
    "REMOTE_BASE.PANASONIC_SCHEMA": {
      "properties": {
        "address": { "type": "string" },
        "command": { "type": "string" }
      },
      "type": ["object", "null"],
      "required_": ["address", "command"]
    },
    "REMOTE_BASE.PIONEER_SCHEMA": {
      "properties": {
        "rc_code_1": { "type": "string" },
        "rc_code_2": { "type": "string", "default": "0" }
      },
      "type": ["object", "null"],
      "required_": ["rc_code_1"]
    },
    "REMOTE_BASE.RAW_SCHEMA-code[]": {
      "type": ["object", "null"],
      "properties": {
        "days": { "type": "number" },
        "hours": { "type": "number" },
        "minutes": { "type": "number" },
        "seconds": { "type": "number" },
        "milliseconds": { "type": "number" },
        "microseconds": { "type": "number" }
      }
    },
    "REMOTE_BASE.RAW_SCHEMA": {
      "properties": {
        "code": {
          "type": "array",
          "items": { "$ref": "#/definitions/REMOTE_BASE.RAW_SCHEMA-code[]" }
        }
      },
      "type": ["object", "null"],
      "required_": ["code"]
    },
    "REMOTE_BASE.RC5_SCHEMA": {
      "properties": {
        "address": { "type": "string" },
        "command": { "type": "string" }
      },
      "type": ["object", "null"],
      "required_": ["address", "command"]
    },
    "REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]": { "type": "number" },
    "REMOTE_BASE.RC_SWITCH_RAW_SCHEMA": {
      "properties": {
        "code": { "type": ["null", "object", "string", "array", "number"] },
        "protocol": {
          "type": ["object", "null"],
          "properties": {
            "pulse_length": { "type": "number" },
            "sync": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 31]
            },
            "zero": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 3]
            },
            "one": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [3, 1]
            },
            "inverted": { "type": "boolean", "default": false }
          },
          "required_": ["pulse_length"],
          "default": 1
        }
      },
      "type": ["object", "null"],
      "required_": ["code"]
    },
    "REMOTE_BASE.RC_SWITCH_TRANSMITTER-repeat": {
      "properties": {
        "times": { "type": ["null", "object", "string", "array", "number"] },
        "wait_time": {
          "type": ["null", "object", "string", "array", "number"],
          "default": "0us"
        }
      },
      "type": ["object", "null"],
      "required_": ["times"]
    },
    "REMOTE_BASE.RC_SWITCH_TRANSMITTER": {
      "properties": {
        "repeat": {
          "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TRANSMITTER-repeat"
        }
      },
      "type": ["object", "null"]
    },
    "REMOTE_BASE.RC_SWITCH_TYPE_A_SCHEMA": {
      "properties": {
        "group": { "type": ["null", "object", "string", "array", "number"] },
        "device": { "type": ["null", "object", "string", "array", "number"] },
        "state": { "type": "boolean" },
        "protocol": {
          "type": ["object", "null"],
          "properties": {
            "pulse_length": { "type": "number" },
            "sync": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 31]
            },
            "zero": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 3]
            },
            "one": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [3, 1]
            },
            "inverted": { "type": "boolean", "default": false }
          },
          "required_": ["pulse_length"],
          "default": 1
        }
      },
      "type": ["object", "null"],
      "required_": ["group", "device", "state"]
    },
    "REMOTE_BASE.RC_SWITCH_TYPE_B_SCHEMA": {
      "properties": {
        "address": { "type": "number" },
        "channel": { "type": "number" },
        "state": { "type": "boolean" },
        "protocol": {
          "type": ["object", "null"],
          "properties": {
            "pulse_length": { "type": "number" },
            "sync": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 31]
            },
            "zero": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 3]
            },
            "one": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [3, 1]
            },
            "inverted": { "type": "boolean", "default": false }
          },
          "required_": ["pulse_length"],
          "default": 1
        }
      },
      "type": ["object", "null"],
      "required_": ["address", "channel", "state"]
    },
    "REMOTE_BASE.RC_SWITCH_TYPE_C_SCHEMA": {
      "properties": {
        "family": {
          "enum": [
            "a",
            "b",
            "c",
            "d",
            "e",
            "f",
            "g",
            "h",
            "i",
            "j",
            "k",
            "l",
            "m",
            "n",
            "o",
            "p"
          ]
        },
        "group": { "type": "number" },
        "device": { "type": "number" },
        "state": { "type": "boolean" },
        "protocol": {
          "type": ["object", "null"],
          "properties": {
            "pulse_length": { "type": "number" },
            "sync": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 31]
            },
            "zero": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 3]
            },
            "one": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [3, 1]
            },
            "inverted": { "type": "boolean", "default": false }
          },
          "required_": ["pulse_length"],
          "default": 1
        }
      },
      "type": ["object", "null"],
      "required_": ["family", "group", "device", "state"]
    },
    "REMOTE_BASE.RC_SWITCH_TYPE_D_SCHEMA": {
      "properties": {
        "group": { "enum": ["a", "b", "c", "d"] },
        "device": { "type": "number" },
        "state": { "type": "boolean" },
        "protocol": {
          "type": ["object", "null"],
          "properties": {
            "pulse_length": { "type": "number" },
            "sync": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 31]
            },
            "zero": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [1, 3]
            },
            "one": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
              },
              "default": [3, 1]
            },
            "inverted": { "type": "boolean", "default": false }
          },
          "required_": ["pulse_length"],
          "default": 1
        }
      },
      "type": ["object", "null"],
      "required_": ["group", "device", "state"]
    },
    "REMOTE_BASE.SAMSUNG_SCHEMA": {
      "properties": {
        "data": { "type": "string" },
        "nbits": { "type": "number", "default": 32 }
      },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "REMOTE_BASE.SONY_SCHEMA": {
      "properties": {
        "data": { "type": "string" },
        "nbits": { "enum": [12, 15, 20] }
      },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "REMOTE_BASE.TOSHIBAAC_SCHEMA": {
      "properties": {
        "rc_code_1": { "type": "string" },
        "rc_code_2": { "type": "string", "default": "0" }
      },
      "type": ["object", "null"],
      "required_": ["rc_code_1"]
    },
    "AUTOMATION.AUTOMATION_SCHEMA": {
      "properties": {
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["then"]
    },
    "automation.ACTION_REGISTRY-delay": {
      "type": "object",
      "properties": {
        "delay": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "automation.ACTION_REGISTRY-if": {
      "type": "object",
      "properties": {
        "if": {
          "properties": {
            "condition": { "$ref": "#/definitions/condition_list" },
            "then": {
              "anyOf": [
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                }
              ]
            },
            "else": {
              "anyOf": [
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"],
          "required_": ["condition"]
        }
      }
    },
    "automation.ACTION_REGISTRY-while": {
      "type": "object",
      "properties": {
        "while": {
          "properties": {
            "condition": { "$ref": "#/definitions/condition_list" },
            "then": {
              "anyOf": [
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"],
          "required_": ["condition", "then"]
        }
      }
    },
    "automation.ACTION_REGISTRY-wait_until": {
      "type": "object",
      "properties": {
        "wait_until": {
          "type": ["null", "object", "string", "array", "number"]
        }
      }
    },
    "automation.ACTION_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "automation.ACTION_REGISTRY-component.update": {
      "type": "object",
      "properties": {
        "component.update": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-logger.log": {
      "type": "object",
      "properties": {
        "logger.log": {
          "type": ["null", "object", "string", "array", "number"]
        }
      }
    },
    "automation.ACTION_REGISTRY-mqtt.publish": {
      "type": "object",
      "properties": {
        "mqtt.publish": {
          "properties": {
            "topic": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "payload": { "type": "string" },
            "qos": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 0
            },
            "retain": {
              "type": ["null", "object", "string", "array", "number"],
              "default": false
            }
          },
          "type": ["object", "null"],
          "required_": ["topic", "payload"]
        }
      }
    },
    "automation.ACTION_REGISTRY-mqtt.publish_json": {
      "type": "object",
      "properties": {
        "mqtt.publish_json": {
          "properties": {
            "topic": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "payload": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "qos": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 0
            },
            "retain": {
              "type": ["null", "object", "string", "array", "number"],
              "default": false
            }
          },
          "type": ["object", "null"],
          "required_": ["topic", "payload"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_dish": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_dish": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 1
                },
                "command": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["command"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_jvc": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_jvc": {
          "allOf": [
            {
              "properties": {
                "data": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["data"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_lg": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_lg": {
          "allOf": [
            {
              "properties": {
                "data": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "nbits": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 28
                }
              },
              "type": ["object", "null"],
              "required_": ["data"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_nec": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_nec": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "command": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["address", "command"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_pioneer": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_pioneer": {
          "allOf": [
            {
              "properties": {
                "rc_code_1": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "rc_code_2": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                }
              },
              "type": ["object", "null"],
              "required_": ["rc_code_1"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_sony": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_sony": {
          "allOf": [
            {
              "properties": {
                "data": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "nbits": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 12
                }
              },
              "type": ["object", "null"],
              "required_": ["data"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_raw": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_raw": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "carrier_frequency": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": "0Hz"
                }
              },
              "type": ["object", "null"],
              "required_": ["code"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc5": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc5": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "command": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["address", "command"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_raw": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc_switch_raw": {
          "properties": {
            "code": { "type": ["null", "object", "string", "array", "number"] },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 1
            },
            "repeat": {
              "type": ["null", "object", "string", "array", "number"],
              "default": { "times": 5 }
            }
          },
          "type": ["object", "null"],
          "required_": ["code"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_a": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc_switch_type_a": {
          "properties": {
            "group": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "device": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 1
            },
            "repeat": {
              "type": ["null", "object", "string", "array", "number"],
              "default": { "times": 5 }
            }
          },
          "type": ["object", "null"],
          "required_": ["group", "device", "state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_b": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc_switch_type_b": {
          "properties": {
            "address": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "channel": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 1
            },
            "repeat": {
              "type": ["null", "object", "string", "array", "number"],
              "default": { "times": 5 }
            }
          },
          "type": ["object", "null"],
          "required_": ["address", "channel", "state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_c": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc_switch_type_c": {
          "properties": {
            "family": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "group": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "device": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 1
            },
            "repeat": {
              "type": ["null", "object", "string", "array", "number"],
              "default": { "times": 5 }
            }
          },
          "type": ["object", "null"],
          "required_": ["family", "group", "device", "state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_d": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_rc_switch_type_d": {
          "properties": {
            "group": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "device": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 1
            },
            "repeat": {
              "type": ["null", "object", "string", "array", "number"],
              "default": { "times": 5 }
            }
          },
          "type": ["object", "null"],
          "required_": ["group", "device", "state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_samsung": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_samsung": {
          "allOf": [
            {
              "properties": {
                "data": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "nbits": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 32
                }
              },
              "type": ["object", "null"],
              "required_": ["data"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_samsung36": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_samsung36": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "command": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["address", "command"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_toshiba_ac": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_toshiba_ac": {
          "allOf": [
            {
              "properties": {
                "rc_code_1": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "rc_code_2": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                }
              },
              "type": ["object", "null"],
              "required_": ["rc_code_1"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_panasonic": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_panasonic": {
          "allOf": [
            {
              "properties": {
                "address": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "command": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["address", "command"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-remote_transmitter.transmit_midea": {
      "type": "object",
      "properties": {
        "remote_transmitter.transmit_midea": {
          "allOf": [
            {
              "properties": {
                "code": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"],
              "required_": ["code"]
            },
            {
              "$ref": "#/definitions/REMOTE_BASE.BASE_REMOTE_TRANSMITTER_SCHEMA"
            }
          ]
        }
      }
    },
    "uart.write": {
      "properties": {
        "data": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "automation.ACTION_REGISTRY-uart.write": {
      "type": "object",
      "properties": {
        "uart.write": {
          "anyOf": [
            { "$ref": "#/definitions/uart.write" },
            { "type": "array", "items": { "$ref": "#/definitions/uart.write" } }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.toggle": {
      "type": "object",
      "properties": {
        "light.toggle": {
          "properties": {
            "transition_length": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.control": {
      "type": "object",
      "properties": {
        "light.control": {
          "properties": {
            "color_mode": {
              "enum": [
                "ON_OFF",
                "BRIGHTNESS",
                "WHITE",
                "COLOR_TEMPERATURE",
                "COLD_WARM_WHITE",
                "RGB",
                "RGB_WHITE",
                "RGB_COLOR_TEMPERATURE",
                "RGB_COLD_WARM_WHITE"
              ]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "transition_length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "flash_length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "effect": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color_brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "red": { "type": ["null", "object", "string", "array", "number"] },
            "green": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "blue": { "type": ["null", "object", "string", "array", "number"] },
            "white": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color_temperature": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "cold_white": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "warm_white": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.turn_on": {
      "type": "object",
      "properties": {
        "light.turn_on": {
          "properties": {
            "color_mode": {
              "enum": [
                "ON_OFF",
                "BRIGHTNESS",
                "WHITE",
                "COLOR_TEMPERATURE",
                "COLD_WARM_WHITE",
                "RGB",
                "RGB_WHITE",
                "RGB_COLOR_TEMPERATURE",
                "RGB_COLD_WARM_WHITE"
              ]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "transition_length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "flash_length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "effect": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color_brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "red": { "type": ["null", "object", "string", "array", "number"] },
            "green": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "blue": { "type": ["null", "object", "string", "array", "number"] },
            "white": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color_temperature": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "cold_white": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "warm_white": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.turn_off": {
      "type": "object",
      "properties": {
        "light.turn_off": {
          "properties": {
            "transition_length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "state": {
              "type": ["null", "object", "string", "array", "number"],
              "default": false
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.dim_relative": {
      "type": "object",
      "properties": {
        "light.dim_relative": {
          "properties": {
            "relative_brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "transition_length": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["relative_brightness"]
        }
      }
    },
    "automation.ACTION_REGISTRY-light.addressable_set": {
      "type": "object",
      "properties": {
        "light.addressable_set": {
          "properties": {
            "range_from": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "range_to": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color_brightness": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "red": { "type": ["null", "object", "string", "array", "number"] },
            "green": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "blue": { "type": ["null", "object", "string", "array", "number"] },
            "white": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-display.page.show": {
      "type": "object",
      "properties": {
        "display.page.show": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-display.page.show_next": {
      "type": "object",
      "properties": {
        "display.page.show_next": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-display.page.show_previous": {
      "type": "object",
      "properties": {
        "display.page.show_previous": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "homeassistant.service-data": {
      "properties": {},
      "type": ["object", "null"]
    },
    "homeassistant.service-variables": {
      "properties": {},
      "type": ["object", "null"]
    },
    "automation.ACTION_REGISTRY-homeassistant.service": {
      "type": "object",
      "properties": {
        "homeassistant.service": {
          "properties": {
            "service": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "data": { "$ref": "#/definitions/homeassistant.service-data" },
            "data_template": {
              "$ref": "#/definitions/homeassistant.service-data"
            },
            "variables": {
              "$ref": "#/definitions/homeassistant.service-variables"
            }
          },
          "type": ["object", "null"],
          "required_": ["service"]
        }
      }
    },
    "automation.ACTION_REGISTRY-homeassistant.event": {
      "type": "object",
      "properties": {
        "homeassistant.event": {
          "properties": {
            "event": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "data": { "$ref": "#/definitions/homeassistant.service-data" },
            "data_template": {
              "$ref": "#/definitions/homeassistant.service-data"
            },
            "variables": { "$ref": "#/definitions/homeassistant.service-data" }
          },
          "type": ["object", "null"],
          "required_": ["event"]
        }
      }
    },
    "homeassistant.tag_scanned": {
      "properties": {
        "tag": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["tag"]
    },
    "automation.ACTION_REGISTRY-homeassistant.tag_scanned": {
      "type": "object",
      "properties": {
        "homeassistant.tag_scanned": {
          "anyOf": [
            { "$ref": "#/definitions/homeassistant.tag_scanned" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/homeassistant.tag_scanned" }
            }
          ]
        }
      }
    },
    "canbus.send": {
      "properties": {
        "can_id": { "type": "number" },
        "use_extended_id": { "type": "boolean", "default": false },
        "data": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["data"]
    },
    "automation.ACTION_REGISTRY-canbus.send": {
      "type": "object",
      "properties": {
        "canbus.send": {
          "anyOf": [
            { "$ref": "#/definitions/canbus.send" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/canbus.send" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-climate.control": {
      "type": "object",
      "properties": {
        "climate.control": {
          "$ref": "#/definitions/climate.CLIMATE_CONTROL_ACTION_SCHEMA"
        }
      }
    },
    "automation.ACTION_REGISTRY-cover.open": {
      "type": "object",
      "properties": {
        "cover.open": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-cover.close": {
      "type": "object",
      "properties": {
        "cover.close": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-cover.stop": {
      "type": "object",
      "properties": {
        "cover.stop": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-cover.toggle": {
      "type": "object",
      "properties": {
        "cover.toggle": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-cover.control": {
      "type": "object",
      "properties": {
        "cover.control": {
          "$ref": "#/definitions/cover.COVER_CONTROL_ACTION_SCHEMA"
        }
      }
    },
    "automation.ACTION_REGISTRY-deep_sleep.enter": {
      "type": "object",
      "properties": {
        "deep_sleep.enter": {
          "properties": {
            "sleep_duration": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-deep_sleep.prevent": {
      "type": "object",
      "properties": {
        "deep_sleep.prevent": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-fan.toggle": {
      "type": "object",
      "properties": {
        "fan.toggle": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-fan.turn_off": {
      "type": "object",
      "properties": {
        "fan.turn_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-fan.turn_on": {
      "type": "object",
      "properties": {
        "fan.turn_on": {
          "properties": {
            "oscillating": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "speed": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "direction": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-fan.cycle_speed": {
      "type": "object",
      "properties": {
        "fan.cycle_speed": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-number.set": {
      "type": "object",
      "properties": {
        "number.set": {
          "properties": {
            "value": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["value"]
        }
      }
    },
    "automation.ACTION_REGISTRY-switch.turn_on": {
      "type": "object",
      "properties": {
        "switch.turn_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-switch.turn_off": {
      "type": "object",
      "properties": {
        "switch.turn_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-switch.toggle": {
      "type": "object",
      "properties": {
        "switch.toggle": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.play_next": {
      "type": "object",
      "properties": {
        "dfplayer.play_next": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.play_previous": {
      "type": "object",
      "properties": {
        "dfplayer.play_previous": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "dfplayer.play": {
      "properties": {
        "file": { "type": ["null", "object", "string", "array", "number"] },
        "loop": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["file"]
    },
    "automation.ACTION_REGISTRY-dfplayer.play": {
      "type": "object",
      "properties": {
        "dfplayer.play": {
          "anyOf": [
            { "$ref": "#/definitions/dfplayer.play" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/dfplayer.play" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.play_folder": {
      "type": "object",
      "properties": {
        "dfplayer.play_folder": {
          "properties": {
            "folder": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "file": { "type": ["null", "object", "string", "array", "number"] },
            "loop": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["folder"]
        }
      }
    },
    "dfplayer.set_device": {
      "properties": { "device": { "enum": ["USB", "TF_CARD"] } },
      "type": ["object", "null"],
      "required_": ["device"]
    },
    "automation.ACTION_REGISTRY-dfplayer.set_device": {
      "type": "object",
      "properties": {
        "dfplayer.set_device": {
          "anyOf": [
            { "$ref": "#/definitions/dfplayer.set_device" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/dfplayer.set_device" }
            }
          ]
        }
      }
    },
    "dfplayer.set_volume": {
      "properties": {
        "volume": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["volume"]
    },
    "automation.ACTION_REGISTRY-dfplayer.set_volume": {
      "type": "object",
      "properties": {
        "dfplayer.set_volume": {
          "anyOf": [
            { "$ref": "#/definitions/dfplayer.set_volume" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/dfplayer.set_volume" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.volume_up": {
      "type": "object",
      "properties": {
        "dfplayer.volume_up": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.volume_down": {
      "type": "object",
      "properties": {
        "dfplayer.volume_down": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "dfplayer.set_eq": {
      "properties": {
        "eq_preset": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["eq_preset"]
    },
    "automation.ACTION_REGISTRY-dfplayer.set_eq": {
      "type": "object",
      "properties": {
        "dfplayer.set_eq": {
          "anyOf": [
            { "$ref": "#/definitions/dfplayer.set_eq" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/dfplayer.set_eq" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.sleep": {
      "type": "object",
      "properties": {
        "dfplayer.sleep": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.reset": {
      "type": "object",
      "properties": {
        "dfplayer.reset": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.start": {
      "type": "object",
      "properties": {
        "dfplayer.start": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.pause": {
      "type": "object",
      "properties": {
        "dfplayer.pause": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.stop": {
      "type": "object",
      "properties": {
        "dfplayer.stop": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-dfplayer.random": {
      "type": "object",
      "properties": {
        "dfplayer.random": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-output.turn_on": {
      "type": "object",
      "properties": {
        "output.turn_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-output.turn_off": {
      "type": "object",
      "properties": {
        "output.turn_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-output.set_level": {
      "type": "object",
      "properties": {
        "output.set_level": {
          "properties": {
            "level": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["level"]
        }
      }
    },
    "fingerprint_grow.enroll": {
      "properties": {
        "finger_id": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "num_scans": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["finger_id"]
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.enroll": {
      "type": "object",
      "properties": {
        "fingerprint_grow.enroll": {
          "anyOf": [
            { "$ref": "#/definitions/fingerprint_grow.enroll" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/fingerprint_grow.enroll" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.cancel_enroll": {
      "type": "object",
      "properties": {
        "fingerprint_grow.cancel_enroll": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "fingerprint_grow.delete": {
      "properties": {
        "finger_id": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["finger_id"]
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.delete": {
      "type": "object",
      "properties": {
        "fingerprint_grow.delete": {
          "anyOf": [
            { "$ref": "#/definitions/fingerprint_grow.delete" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/fingerprint_grow.delete" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.delete_all": {
      "type": "object",
      "properties": {
        "fingerprint_grow.delete_all": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "fingerprint_grow.led_control": {
      "properties": {
        "state": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["state"]
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.led_control": {
      "type": "object",
      "properties": {
        "fingerprint_grow.led_control": {
          "anyOf": [
            { "$ref": "#/definitions/fingerprint_grow.led_control" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/fingerprint_grow.led_control" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-fingerprint_grow.aura_led_control": {
      "type": "object",
      "properties": {
        "fingerprint_grow.aura_led_control": {
          "properties": {
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "speed": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "color": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "count": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state", "speed", "color", "count"]
        }
      }
    },
    "automation.ACTION_REGISTRY-globals.set": {
      "type": "object",
      "properties": {
        "globals.set": {
          "properties": {
            "value": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["value"]
        }
      }
    },
    "simple_automation": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        { "$ref": "#/definitions/AUTOMATION.AUTOMATION_SCHEMA" }
      ]
    },
    "automation.ACTION_REGISTRY-http_request.send": {
      "type": "object",
      "properties": {
        "http_request.send": {
          "allOf": [
            {
              "properties": {
                "url": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "headers": { "properties": {}, "type": ["object", "null"] },
                "verify_ssl": { "type": "boolean", "default": true },
                "on_response": { "$ref": "#/definitions/simple_automation" },
                "method": { "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"] },
                "body": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "json": { "properties": {}, "type": ["object", "null"] }
              },
              "type": ["object", "null"],
              "required_": ["url"]
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-http_request.post": {
      "type": "object",
      "properties": {
        "http_request.post": {
          "allOf": [
            {
              "properties": {
                "url": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "headers": { "properties": {}, "type": ["object", "null"] },
                "verify_ssl": { "type": "boolean", "default": true },
                "on_response": { "$ref": "#/definitions/simple_automation" },
                "method": { "enum": ["POST"] },
                "body": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "json": { "properties": {}, "type": ["object", "null"] }
              },
              "type": ["object", "null"],
              "required_": ["url"]
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-http_request.get": {
      "type": "object",
      "properties": {
        "http_request.get": {
          "allOf": [
            {
              "properties": {
                "url": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "headers": { "properties": {}, "type": ["object", "null"] },
                "verify_ssl": { "type": "boolean", "default": true },
                "on_response": { "$ref": "#/definitions/simple_automation" },
                "method": { "enum": ["GET"] }
              },
              "type": ["object", "null"],
              "required_": ["url"]
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.send_code": {
      "type": "object",
      "properties": {
        "rf_bridge.send_code": {
          "properties": {
            "sync": { "type": ["null", "object", "string", "array", "number"] },
            "low": { "type": ["null", "object", "string", "array", "number"] },
            "high": { "type": ["null", "object", "string", "array", "number"] },
            "code": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["sync", "low", "high", "code"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.learn": {
      "type": "object",
      "properties": {
        "rf_bridge.learn": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.start_advanced_sniffing": {
      "type": "object",
      "properties": {
        "rf_bridge.start_advanced_sniffing": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.stop_advanced_sniffing": {
      "type": "object",
      "properties": {
        "rf_bridge.stop_advanced_sniffing": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.start_bucket_sniffing": {
      "type": "object",
      "properties": {
        "rf_bridge.start_bucket_sniffing": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.send_advanced_code": {
      "type": "object",
      "properties": {
        "rf_bridge.send_advanced_code": {
          "properties": {
            "length": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "protocol": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "code": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["length", "protocol", "code"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.send_raw": {
      "type": "object",
      "properties": {
        "rf_bridge.send_raw": {
          "properties": {
            "raw": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["raw"]
        }
      }
    },
    "automation.ACTION_REGISTRY-rf_bridge.beep": {
      "type": "object",
      "properties": {
        "rf_bridge.beep": {
          "properties": {
            "duration": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["duration"]
        }
      }
    },
    "rtttl.play": {
      "properties": {
        "rtttl": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["rtttl"]
    },
    "automation.ACTION_REGISTRY-rtttl.play": {
      "type": "object",
      "properties": {
        "rtttl.play": {
          "anyOf": [
            { "$ref": "#/definitions/rtttl.play" },
            { "type": "array", "items": { "$ref": "#/definitions/rtttl.play" } }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY-rtttl.stop": {
      "type": "object",
      "properties": {
        "rtttl.stop": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-script.execute": {
      "type": "object",
      "properties": {
        "script.execute": {
          "properties": {
            "id": { "type": "string", "id_type": "script::Script" }
          },
          "type": ["object", "null"],
          "required_": ["id"]
        }
      }
    },
    "automation.ACTION_REGISTRY-script.stop": {
      "type": "object",
      "properties": {
        "script.stop": {
          "properties": {
            "id": { "type": "string", "id_type": "script::Script" }
          },
          "type": ["object", "null"],
          "required_": ["id"]
        }
      }
    },
    "automation.ACTION_REGISTRY-script.wait": {
      "type": "object",
      "properties": {
        "script.wait": {
          "properties": {
            "id": { "type": "string", "id_type": "script::Script" }
          },
          "type": ["object", "null"],
          "required_": ["id"]
        }
      }
    },
    "automation.ACTION_REGISTRY-select.set": {
      "type": "object",
      "properties": {
        "select.set": {
          "properties": {
            "option": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["option"]
        }
      }
    },
    "automation.ACTION_REGISTRY-servo.write": {
      "type": "object",
      "properties": {
        "servo.write": {
          "properties": {
            "level": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["level"]
        }
      }
    },
    "automation.ACTION_REGISTRY-servo.detach": {
      "type": "object",
      "properties": {
        "servo.detach": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-sim800l.send_sms": {
      "type": "object",
      "properties": {
        "sim800l.send_sms": {
          "properties": {
            "recipient": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "message": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["recipient", "message"]
        }
      }
    },
    "automation.ACTION_REGISTRY-sim800l.dial": {
      "type": "object",
      "properties": {
        "sim800l.dial": {
          "properties": {
            "recipient": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["recipient"]
        }
      }
    },
    "automation.ACTION_REGISTRY-stepper.set_target": {
      "type": "object",
      "properties": {
        "stepper.set_target": {
          "properties": {
            "target": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["target"]
        }
      }
    },
    "automation.ACTION_REGISTRY-stepper.report_position": {
      "type": "object",
      "properties": {
        "stepper.report_position": {
          "properties": {
            "position": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["position"]
        }
      }
    },
    "automation.ACTION_REGISTRY-stepper.set_speed": {
      "type": "object",
      "properties": {
        "stepper.set_speed": {
          "properties": {
            "speed": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["speed"]
        }
      }
    },
    "automation.ACTION_REGISTRY-stepper.set_acceleration": {
      "type": "object",
      "properties": {
        "stepper.set_acceleration": {
          "properties": {
            "acceleration": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["acceleration"]
        }
      }
    },
    "automation.ACTION_REGISTRY-stepper.set_deceleration": {
      "type": "object",
      "properties": {
        "stepper.set_deceleration": {
          "properties": {
            "deceleration": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["deceleration"]
        }
      }
    },
    "automation.ACTION_REGISTRY-tm1651.turn_on": {
      "type": "object",
      "properties": {
        "tm1651.turn_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-tm1651.turn_off": {
      "type": "object",
      "properties": {
        "tm1651.turn_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "tm1651.set_level_percent": {
      "properties": {
        "level_percent": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"],
      "required_": ["level_percent"]
    },
    "automation.ACTION_REGISTRY-tm1651.set_level_percent": {
      "type": "object",
      "properties": {
        "tm1651.set_level_percent": {
          "anyOf": [
            { "$ref": "#/definitions/tm1651.set_level_percent" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/tm1651.set_level_percent" }
            }
          ]
        }
      }
    },
    "tm1651.set_level": {
      "properties": {
        "level": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["level"]
    },
    "automation.ACTION_REGISTRY-tm1651.set_level": {
      "type": "object",
      "properties": {
        "tm1651.set_level": {
          "anyOf": [
            { "$ref": "#/definitions/tm1651.set_level" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/tm1651.set_level" }
            }
          ]
        }
      }
    },
    "tm1651.set_brightness": {
      "properties": {
        "brightness": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"],
      "required_": ["brightness"]
    },
    "automation.ACTION_REGISTRY-tm1651.set_brightness": {
      "type": "object",
      "properties": {
        "tm1651.set_brightness": {
          "anyOf": [
            { "$ref": "#/definitions/tm1651.set_brightness" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/tm1651.set_brightness" }
            }
          ]
        }
      }
    },
    "automation.ACTION_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-delay" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-if" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-while" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-wait_until" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-lambda" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-component.update" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-logger.log" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-mqtt.publish" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-mqtt.publish_json"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_dish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_jvc"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_lg"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_nec"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_pioneer"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_sony"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_raw"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc5"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_raw"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_a"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_b"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_c"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_rc_switch_type_d"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_samsung"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_samsung36"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_toshiba_ac"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_panasonic"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-remote_transmitter.transmit_midea"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-uart.write" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-light.toggle" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-light.control" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-light.turn_on" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-light.turn_off" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-light.dim_relative"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-light.addressable_set"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-display.page.show"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-display.page.show_next"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-display.page.show_previous"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-homeassistant.service"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-homeassistant.event"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-homeassistant.tag_scanned"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-canbus.send" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-climate.control" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.open" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.close" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.stop" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.toggle" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.control" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-deep_sleep.enter" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-deep_sleep.prevent"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-fan.toggle" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-fan.turn_off" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-fan.turn_on" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-fan.cycle_speed" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-number.set" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-switch.turn_on" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-switch.turn_off" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-switch.toggle" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.play_next"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.play_previous"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.play" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.play_folder"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.set_device"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.set_volume"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.volume_up"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.volume_down"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.set_eq" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.sleep" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.reset" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.start" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.pause" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.stop" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-dfplayer.random" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-output.turn_on" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-output.turn_off" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-output.set_level" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.enroll"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.cancel_enroll"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.delete"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.delete_all"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.led_control"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fingerprint_grow.aura_led_control"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-globals.set" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-http_request.send"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-http_request.post"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-http_request.get" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.send_code"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.learn" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.start_advanced_sniffing"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.stop_advanced_sniffing"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.start_bucket_sniffing"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.send_advanced_code"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.send_raw"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-rf_bridge.beep" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-rtttl.play" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-rtttl.stop" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-script.execute" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-script.stop" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-script.wait" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-select.set" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-servo.write" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-servo.detach" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-sim800l.send_sms" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-sim800l.dial" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-stepper.set_target"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-stepper.report_position"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-stepper.set_speed"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-stepper.set_acceleration"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-stepper.set_deceleration"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-tm1651.turn_on" },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-tm1651.turn_off" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-tm1651.set_level_percent"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-tm1651.set_level" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-tm1651.set_brightness"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-binary_sensor.template.publish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.follow_me"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.display_toggle"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.swing_step"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.beeper_on"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.beeper_off"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.power_on"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-midea_ac.power_off"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-climate.pid.reset_integral_term"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-climate.pid.autotune"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-climate.pid.set_control_parameters"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-cover.template.publish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-fan.hbridge.brake"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-output.esp8266_pwm.set_frequency"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-output.ledc.set_frequency"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-output.pipsolar.set_level"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-cs5460a.restart" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-sensor.integration.reset"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-mhz19.abc_disable"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-mhz19.abc_enable" },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-mhz19.calibrate_zero"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-pulse_meter.set_total_pulses"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-sensor.rotary_encoder.set_value"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-senseair.abc_get_period"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-senseair.abc_disable"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-senseair.abc_enable"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-senseair.background_calibration_result"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-senseair.background_calibration"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-sensor.template.publish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-switch.template.publish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-text_sensor.template.publish"
        },
        {
          "$ref": "#/definitions/automation.ACTION_REGISTRY-ds1307.write_time"
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY-ds1307.read_time" }
      ]
    },
    "automation.CONDITION_REGISTRY-and": {
      "type": "object",
      "properties": {
        "and": {
          "anyOf": [
            { "$ref": "#/definitions/automation.CONDITION_REGISTRY" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.CONDITION_REGISTRY" }
            }
          ]
        }
      }
    },
    "automation.CONDITION_REGISTRY-or": {
      "type": "object",
      "properties": {
        "or": {
          "anyOf": [
            { "$ref": "#/definitions/automation.CONDITION_REGISTRY" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.CONDITION_REGISTRY" }
            }
          ]
        }
      }
    },
    "automation.CONDITION_REGISTRY-not": {
      "type": "object",
      "properties": { "not": { "$ref": "#/definitions/condition_list" } }
    },
    "automation.CONDITION_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "automation.CONDITION_REGISTRY-for": {
      "type": "object",
      "properties": {
        "for": {
          "allOf": [
            {
              "properties": {
                "time": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "condition": { "$ref": "#/definitions/condition_list" }
              },
              "type": ["object", "null"],
              "required_": ["time", "condition"]
            },
            { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
          ]
        }
      }
    },
    "automation.CONDITION_REGISTRY-mqtt.connected": {
      "type": "object",
      "properties": {
        "mqtt.connected": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-binary_sensor.is_on": {
      "type": "object",
      "properties": {
        "binary_sensor.is_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-binary_sensor.is_off": {
      "type": "object",
      "properties": {
        "binary_sensor.is_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-light.is_off": {
      "type": "object",
      "properties": {
        "light.is_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-light.is_on": {
      "type": "object",
      "properties": {
        "light.is_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "display.is_displaying_page": {
      "properties": {},
      "type": ["object", "null"]
    },
    "automation.CONDITION_REGISTRY-display.is_displaying_page": {
      "type": "object",
      "properties": {
        "display.is_displaying_page": {
          "anyOf": [
            { "$ref": "#/definitions/display.is_displaying_page" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/display.is_displaying_page" }
            }
          ]
        }
      }
    },
    "automation.CONDITION_REGISTRY-api.connected": {
      "type": "object",
      "properties": { "api.connected": { "type": "null" } }
    },
    "automation.CONDITION_REGISTRY-sensor.in_range": {
      "type": "object",
      "properties": {
        "sensor.in_range": {
          "properties": {
            "above": { "type": "number" },
            "below": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-fan.is_off": {
      "type": "object",
      "properties": {
        "fan.is_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-fan.is_on": {
      "type": "object",
      "properties": {
        "fan.is_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-number.in_range": {
      "type": "object",
      "properties": {
        "number.in_range": {
          "properties": {
            "above": { "type": "number" },
            "below": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-switch.is_on": {
      "type": "object",
      "properties": {
        "switch.is_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-switch.is_off": {
      "type": "object",
      "properties": {
        "switch.is_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-text_sensor.state": {
      "type": "object",
      "properties": {
        "text_sensor.state": {
          "properties": {
            "state": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-dfplayer.is_playing": {
      "type": "object",
      "properties": {
        "dfplayer.is_playing": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-pn532.is_writing": {
      "type": "object",
      "properties": {
        "pn532.is_writing": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-rtttl.is_playing": {
      "type": "object",
      "properties": {
        "rtttl.is_playing": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-script.is_running": {
      "type": "object",
      "properties": {
        "script.is_running": {
          "properties": {
            "id": { "type": "string", "id_type": "script::Script" }
          },
          "type": ["object", "null"],
          "required_": ["id"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-time.has_time": {
      "type": "object",
      "properties": {
        "time.has_time": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.CONDITION_REGISTRY-sun.is_above_horizon": {
      "type": "object",
      "properties": {
        "sun.is_above_horizon": {
          "properties": {
            "elevation": {
              "type": ["null", "object", "string", "array", "number"],
              "default": -0.83333
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-sun.is_below_horizon": {
      "type": "object",
      "properties": {
        "sun.is_below_horizon": {
          "properties": {
            "elevation": {
              "type": ["null", "object", "string", "array", "number"],
              "default": -0.83333
            }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.CONDITION_REGISTRY-wifi.connected": {
      "type": "object",
      "properties": { "wifi.connected": { "type": "null" } }
    },
    "automation.CONDITION_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-and" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-or" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-not" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-lambda" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-for" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-mqtt.connected"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-binary_sensor.is_on"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-binary_sensor.is_off"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-light.is_off" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-light.is_on" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-display.is_displaying_page"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-api.connected" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-sensor.in_range"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-fan.is_off" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-fan.is_on" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-number.in_range"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-switch.is_on" },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-switch.is_off" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-text_sensor.state"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-dfplayer.is_playing"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-pn532.is_writing"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-rtttl.is_playing"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-script.is_running"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-time.has_time" },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-sun.is_above_horizon"
        },
        {
          "$ref": "#/definitions/automation.CONDITION_REGISTRY-sun.is_below_horizon"
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY-wifi.connected" }
      ]
    },
    "binary_sensor.FILTER_REGISTRY-invert": {
      "type": "object",
      "properties": { "invert": { "type": "null" } }
    },
    "binary_sensor.FILTER_REGISTRY-delayed_on_off": {
      "type": "object",
      "properties": {
        "delayed_on_off": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "binary_sensor.FILTER_REGISTRY-delayed_on": {
      "type": "object",
      "properties": {
        "delayed_on": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "binary_sensor.FILTER_REGISTRY-delayed_off": {
      "type": "object",
      "properties": {
        "delayed_off": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "autorepeat": {
      "properties": {
        "delay": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "1s"
        },
        "time_off": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "100ms"
        },
        "time_on": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "900ms"
        }
      },
      "type": ["object", "null"]
    },
    "binary_sensor.FILTER_REGISTRY-autorepeat": {
      "type": "object",
      "properties": {
        "autorepeat": {
          "anyOf": [
            { "$ref": "#/definitions/autorepeat" },
            { "type": "array", "items": { "$ref": "#/definitions/autorepeat" } }
          ]
        }
      }
    },
    "binary_sensor.FILTER_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "binary_sensor.FILTER_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-invert" },
        {
          "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-delayed_on_off"
        },
        { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-delayed_on" },
        { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-delayed_off" },
        { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-autorepeat" },
        { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY-lambda" }
      ]
    },
    "light.EFFECTS_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": {
          "allOf": [
            {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "update_interval": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": "0ms"
                },
                "name": { "type": "string", "default": "Lambda" }
              },
              "type": ["object", "null"],
              "required_": ["lambda"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-automation": {
      "type": "object",
      "properties": {
        "automation": {
          "allOf": [
            {
              "properties": {
                "sequence": { "$ref": "#/definitions/simple_automation" },
                "name": { "type": "string", "default": "Automation" }
              },
              "type": ["object", "null"],
              "required_": ["sequence"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-pulse": {
      "type": "object",
      "properties": {
        "pulse": {
          "allOf": [
            {
              "properties": {
                "transition_length": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "7.5s"
                },
                "update_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "10s"
                },
                "name": { "type": "string", "default": "Random" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-random": {
      "type": "object",
      "properties": {
        "random": {
          "allOf": [
            {
              "properties": {
                "transition_length": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "7.5s"
                },
                "update_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "10s"
                },
                "name": { "type": "string", "default": "Random" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "strobe-colors": {
      "properties": {
        "state": { "type": "boolean", "default": true },
        "brightness": { "type": "string", "default": "1.0" },
        "color_mode": {
          "enum": [
            "ON_OFF",
            "BRIGHTNESS",
            "WHITE",
            "COLOR_TEMPERATURE",
            "COLD_WARM_WHITE",
            "RGB",
            "RGB_WHITE",
            "RGB_COLOR_TEMPERATURE",
            "RGB_COLD_WARM_WHITE"
          ]
        },
        "color_brightness": { "type": "string", "default": "1.0" },
        "red": { "type": "string", "default": "1.0" },
        "green": { "type": "string", "default": "1.0" },
        "blue": { "type": "string", "default": "1.0" },
        "white": { "type": "string", "default": "1.0" },
        "color_temperature": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "cold_white": { "type": "string", "default": "1.0" },
        "warm_white": { "type": "string", "default": "1.0" },
        "duration": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      },
      "type": ["object", "null"],
      "required_": ["duration"]
    },
    "light.EFFECTS_REGISTRY-strobe": {
      "type": "object",
      "properties": {
        "strobe": {
          "allOf": [
            {
              "properties": {
                "colors": {
                  "anyOf": [
                    { "$ref": "#/definitions/strobe-colors" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/definitions/strobe-colors" }
                    }
                  ]
                },
                "name": { "type": "string", "default": "Strobe" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-flicker": {
      "type": "object",
      "properties": {
        "flicker": {
          "allOf": [
            {
              "properties": {
                "alpha": { "type": "string", "default": "0.95" },
                "intensity": { "type": "string", "default": "0.015" },
                "name": { "type": "string", "default": "Flicker" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_lambda": {
      "type": "object",
      "properties": {
        "addressable_lambda": {
          "allOf": [
            {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "update_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "0ms"
                },
                "name": { "type": "string", "default": "Addressable Lambda" }
              },
              "type": ["object", "null"],
              "required_": ["lambda"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_rainbow": {
      "type": "object",
      "properties": {
        "addressable_rainbow": {
          "allOf": [
            {
              "properties": {
                "speed": { "type": "number", "default": 10 },
                "width": { "type": "number", "default": 50 },
                "name": { "type": "string", "default": "Rainbow" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "addressable_color_wipe-colors": {
      "properties": {
        "red": { "type": "string", "default": "1.0" },
        "green": { "type": "string", "default": "1.0" },
        "blue": { "type": "string", "default": "1.0" },
        "white": { "type": "string", "default": "1.0" },
        "random": { "type": "boolean", "default": false },
        "num_leds": { "type": "number" }
      },
      "type": ["object", "null"],
      "required_": ["num_leds"]
    },
    "light.EFFECTS_REGISTRY-addressable_color_wipe": {
      "type": "object",
      "properties": {
        "addressable_color_wipe": {
          "allOf": [
            {
              "properties": {
                "colors": {
                  "anyOf": [
                    { "$ref": "#/definitions/addressable_color_wipe-colors" },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/addressable_color_wipe-colors"
                      }
                    }
                  ]
                },
                "add_led_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "0.1s"
                },
                "reverse": { "type": "boolean", "default": false },
                "name": { "type": "string", "default": "Color Wipe" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_scan": {
      "type": "object",
      "properties": {
        "addressable_scan": {
          "allOf": [
            {
              "properties": {
                "move_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "0.1s"
                },
                "scan_width": { "type": "number", "default": 1 },
                "name": { "type": "string", "default": "Scan" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_twinkle": {
      "type": "object",
      "properties": {
        "addressable_twinkle": {
          "allOf": [
            {
              "properties": {
                "twinkle_probability": { "type": "string", "default": "5%" },
                "progress_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "32ms"
                },
                "name": { "type": "string", "default": "Random Twinkle" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_random_twinkle": {
      "type": "object",
      "properties": {
        "addressable_random_twinkle": {
          "allOf": [
            {
              "properties": {
                "twinkle_probability": { "type": "string", "default": "5%" },
                "progress_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "32ms"
                },
                "name": { "type": "string", "default": "Random Twinkle" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_fireworks": {
      "type": "object",
      "properties": {
        "addressable_fireworks": {
          "allOf": [
            {
              "properties": {
                "update_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "32ms"
                },
                "spark_probability": { "type": "string", "default": "10%" },
                "use_random_color": { "type": "boolean", "default": false },
                "fade_out_rate": { "type": "number", "default": 120 },
                "name": { "type": "string", "default": "Fireworks" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-addressable_flicker": {
      "type": "object",
      "properties": {
        "addressable_flicker": {
          "allOf": [
            {
              "properties": {
                "update_interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "16ms"
                },
                "intensity": { "type": "string", "default": "5%" },
                "name": { "type": "string", "default": "Addressable Flicker" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-adalight": {
      "type": "object",
      "properties": {
        "adalight": {
          "properties": { "name": { "type": "string", "default": "Adalight" } },
          "type": ["object", "null"]
        }
      }
    },
    "light.EFFECTS_REGISTRY-e131": {
      "type": "object",
      "properties": {
        "e131": {
          "allOf": [
            {
              "properties": {
                "universe": { "type": "number" },
                "channels": { "enum": ["MONO", "RGB", "RGBW"] },
                "name": { "type": "string", "default": "E1.31" }
              },
              "type": ["object", "null"],
              "required_": ["universe"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY-wled": {
      "type": "object",
      "properties": {
        "wled": {
          "allOf": [
            {
              "properties": {
                "port": { "type": "number", "default": 21324 },
                "name": { "type": "string", "default": "WLED" }
              },
              "type": ["object", "null"]
            }
          ]
        }
      }
    },
    "light.EFFECTS_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-lambda" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-automation" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-pulse" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-random" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-strobe" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-flicker" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_lambda" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_rainbow" },
        {
          "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_color_wipe"
        },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_scan" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_twinkle" },
        {
          "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_random_twinkle"
        },
        {
          "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_fireworks"
        },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_flicker" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-adalight" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-e131" },
        { "$ref": "#/definitions/light.EFFECTS_REGISTRY-wled" }
      ]
    },
    "remote_base.BINARY_SENSOR_REGISTRY-dish": {
      "type": "object",
      "properties": {
        "dish": { "$ref": "#/definitions/REMOTE_BASE.DISH_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-jvc": {
      "type": "object",
      "properties": {
        "jvc": { "$ref": "#/definitions/REMOTE_BASE.JVC_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-lg": {
      "type": "object",
      "properties": { "lg": { "$ref": "#/definitions/REMOTE_BASE.LG_SCHEMA" } }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-nec": {
      "type": "object",
      "properties": {
        "nec": { "$ref": "#/definitions/REMOTE_BASE.NEC_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-pioneer": {
      "type": "object",
      "properties": {
        "pioneer": { "$ref": "#/definitions/REMOTE_BASE.PIONEER_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-sony": {
      "type": "object",
      "properties": {
        "sony": { "$ref": "#/definitions/REMOTE_BASE.SONY_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-raw": {
      "type": "object",
      "properties": {
        "raw": { "$ref": "#/definitions/REMOTE_BASE.RAW_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc5": {
      "type": "object",
      "properties": {
        "rc5": { "$ref": "#/definitions/REMOTE_BASE.RC5_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc_switch_raw": {
      "type": "object",
      "properties": {
        "rc_switch_raw": {
          "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA"
        }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_a": {
      "type": "object",
      "properties": {
        "rc_switch_type_a": {
          "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TYPE_A_SCHEMA"
        }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_b": {
      "type": "object",
      "properties": {
        "rc_switch_type_b": {
          "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TYPE_B_SCHEMA"
        }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_c": {
      "type": "object",
      "properties": {
        "rc_switch_type_c": {
          "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TYPE_C_SCHEMA"
        }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_d": {
      "type": "object",
      "properties": {
        "rc_switch_type_d": {
          "allOf": [
            { "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TYPE_D_SCHEMA" },
            { "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_TRANSMITTER" }
          ]
        }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-samsung": {
      "type": "object",
      "properties": {
        "samsung": { "$ref": "#/definitions/REMOTE_BASE.SAMSUNG_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-samsung36": {
      "type": "object",
      "properties": {
        "samsung36": { "$ref": "#/definitions/REMOTE_BASE.PANASONIC_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-toshiba_ac": {
      "type": "object",
      "properties": {
        "toshiba_ac": { "$ref": "#/definitions/REMOTE_BASE.TOSHIBAAC_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-panasonic": {
      "type": "object",
      "properties": {
        "panasonic": { "$ref": "#/definitions/REMOTE_BASE.PANASONIC_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY-midea": {
      "type": "object",
      "properties": {
        "midea": { "$ref": "#/definitions/REMOTE_BASE.MIDEA_SCHEMA" }
      }
    },
    "remote_base.BINARY_SENSOR_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-dish" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-jvc" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-lg" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-nec" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-pioneer" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-sony" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-raw" },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc5" },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc_switch_raw"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_a"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_b"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_c"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-rc_switch_type_d"
        },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-samsung" },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-samsung36"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-toshiba_ac"
        },
        {
          "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-panasonic"
        },
        { "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY-midea" }
      ]
    },
    "remote_base.DUMPER_REGISTRY-dish": {
      "type": "object",
      "properties": { "dish": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-jvc": {
      "type": "object",
      "properties": { "jvc": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-lg": {
      "type": "object",
      "properties": { "lg": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-nec": {
      "type": "object",
      "properties": { "nec": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-pioneer": {
      "type": "object",
      "properties": { "pioneer": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-sony": {
      "type": "object",
      "properties": { "sony": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-raw": {
      "type": "object",
      "properties": { "raw": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-rc5": {
      "type": "object",
      "properties": { "rc5": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-rc_switch": {
      "type": "object",
      "properties": { "rc_switch": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-samsung": {
      "type": "object",
      "properties": { "samsung": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-samsung36": {
      "type": "object",
      "properties": { "samsung36": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-toshiba_ac": {
      "type": "object",
      "properties": { "toshiba_ac": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-panasonic": {
      "type": "object",
      "properties": { "panasonic": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY-midea": {
      "type": "object",
      "properties": { "midea": { "type": "null" } }
    },
    "remote_base.DUMPER_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-dish" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-jvc" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-lg" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-nec" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-pioneer" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-sony" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-raw" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-rc5" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-rc_switch" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-samsung" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-samsung36" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-toshiba_ac" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-panasonic" },
        { "$ref": "#/definitions/remote_base.DUMPER_REGISTRY-midea" }
      ]
    },
    "sensor.FILTER_REGISTRY-offset": {
      "type": "object",
      "properties": { "offset": { "type": "number" } }
    },
    "sensor.FILTER_REGISTRY-multiply": {
      "type": "object",
      "properties": { "multiply": { "type": "number" } }
    },
    "sensor.FILTER_REGISTRY-filter_out": {
      "type": "object",
      "properties": { "filter_out": { "type": "number" } }
    },
    "sensor.FILTER_REGISTRY-median": {
      "type": "object",
      "properties": {
        "median": {
          "properties": {
            "window_size": { "type": "number", "default": 5 },
            "send_every": { "type": "number", "default": 5 },
            "send_first_at": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-min": {
      "type": "object",
      "properties": {
        "min": {
          "properties": {
            "window_size": { "type": "number", "default": 5 },
            "send_every": { "type": "number", "default": 5 },
            "send_first_at": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-max": {
      "type": "object",
      "properties": {
        "max": {
          "properties": {
            "window_size": { "type": "number", "default": 5 },
            "send_every": { "type": "number", "default": 5 },
            "send_first_at": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-sliding_window_moving_average": {
      "type": "object",
      "properties": {
        "sliding_window_moving_average": {
          "properties": {
            "window_size": { "type": "number", "default": 15 },
            "send_every": { "type": "number", "default": 15 },
            "send_first_at": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-exponential_moving_average": {
      "type": "object",
      "properties": {
        "exponential_moving_average": {
          "properties": {
            "alpha": { "type": "number", "default": 0.1 },
            "send_every": { "type": "number", "default": 15 }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-throttle_average": {
      "type": "object",
      "properties": {
        "throttle_average": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "sensor.FILTER_REGISTRY-delta": {
      "type": "object",
      "properties": { "delta": { "type": "number" } }
    },
    "sensor.FILTER_REGISTRY-or": {
      "type": "object",
      "properties": {
        "or": {
          "anyOf": [
            { "$ref": "#/definitions/sensor.FILTER_REGISTRY" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/sensor.FILTER_REGISTRY" }
            }
          ]
        }
      }
    },
    "sensor.FILTER_REGISTRY-throttle": {
      "type": "object",
      "properties": {
        "throttle": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-heartbeat": {
      "type": "object",
      "properties": {
        "heartbeat": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "sensor.FILTER_REGISTRY-debounce": {
      "type": "object",
      "properties": {
        "debounce": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "calibrate_linear": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "sensor.FILTER_REGISTRY-calibrate_linear": {
      "type": "object",
      "properties": {
        "calibrate_linear": {
          "anyOf": [
            { "$ref": "#/definitions/calibrate_linear" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/calibrate_linear" }
            }
          ]
        }
      }
    },
    "sensor.FILTER_REGISTRY-calibrate_polynomial": {
      "type": "object",
      "properties": {
        "calibrate_polynomial": {
          "properties": {
            "datapoints": {
              "anyOf": [
                { "$ref": "#/definitions/calibrate_linear" },
                {
                  "type": "array",
                  "items": { "$ref": "#/definitions/calibrate_linear" }
                }
              ]
            },
            "degree": { "type": "number" }
          },
          "type": ["object", "null"],
          "required_": ["datapoints", "degree"]
        }
      }
    },
    "sensor.FILTER_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-offset" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-multiply" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-filter_out" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-median" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-min" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-max" },
        {
          "$ref": "#/definitions/sensor.FILTER_REGISTRY-sliding_window_moving_average"
        },
        {
          "$ref": "#/definitions/sensor.FILTER_REGISTRY-exponential_moving_average"
        },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-throttle_average" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-lambda" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-delta" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-or" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-throttle" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-heartbeat" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-debounce" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-calibrate_linear" },
        { "$ref": "#/definitions/sensor.FILTER_REGISTRY-calibrate_polynomial" }
      ]
    },
    "text_sensor.FILTER_REGISTRY-lambda": {
      "type": "object",
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      }
    },
    "text_sensor.FILTER_REGISTRY-to_upper": {
      "type": "object",
      "properties": { "to_upper": { "type": "null" } }
    },
    "text_sensor.FILTER_REGISTRY-to_lower": {
      "type": "object",
      "properties": { "to_lower": { "type": "null" } }
    },
    "text_sensor.FILTER_REGISTRY-append": {
      "type": "object",
      "properties": {
        "append": { "$ref": "#/definitions/external_components-components" }
      }
    },
    "text_sensor.FILTER_REGISTRY-prepend": {
      "type": "object",
      "properties": {
        "prepend": { "$ref": "#/definitions/external_components-components" }
      }
    },
    "substitute": { "type": ["null", "object", "string", "array", "number"] },
    "text_sensor.FILTER_REGISTRY-substitute": {
      "type": "object",
      "properties": {
        "substitute": {
          "anyOf": [
            { "$ref": "#/definitions/substitute" },
            { "type": "array", "items": { "$ref": "#/definitions/substitute" } }
          ]
        }
      }
    },
    "text_sensor.FILTER_REGISTRY": {
      "anyOf": [
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-lambda" },
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-to_upper" },
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-to_lower" },
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-append" },
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-prepend" },
        { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY-substitute" }
      ]
    },
    "condition_list": {
      "oneOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.CONDITION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.CONDITION_REGISTRY" }
      ]
    },
    "esphome-platformio_options": { "type": "object" },
    "esphome-on_boot": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "priority": { "type": "number", "default": 600.0 },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "esphome-includes": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "esphome-libraries": { "type": "string" },
    "esphome-project": {
      "properties": {
        "name": { "$ref": "#/definitions/esphome-libraries" },
        "version": { "type": "string" }
      },
      "type": ["object", "null"],
      "required_": ["name", "version"]
    },
    "esphome": {
      "properties": {
        "name": { "type": ["null", "object", "string", "array", "number"] },
        "comment": { "type": "string" },
        "build_path": { "type": "string" },
        "platformio_options": {
          "$ref": "#/definitions/esphome-platformio_options"
        },
        "on_boot": { "$ref": "#/definitions/esphome-on_boot" },
        "on_shutdown": { "$ref": "#/definitions/simple_automation" },
        "on_loop": { "$ref": "#/definitions/simple_automation" },
        "includes": {
          "anyOf": [
            { "$ref": "#/definitions/esphome-includes" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/esphome-includes" }
            }
          ]
        },
        "libraries": {
          "anyOf": [
            { "$ref": "#/definitions/esphome-libraries" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/esphome-libraries" }
            }
          ]
        },
        "name_add_mac_suffix": { "type": "boolean", "default": false },
        "project": { "$ref": "#/definitions/esphome-project" }
      },
      "type": ["object", "null"],
      "required_": ["name", "build_path"]
    },
    "uart_bus": { "properties": {}, "type": ["object", "null"] },
    "spi_bus": {
      "properties": {
        "cs_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
      },
      "type": ["object", "null"]
    },
    "i2c_bus": {
      "properties": { "address": { "type": "string" } },
      "type": ["object", "null"],
      "required_": ["address"]
    },
    "binary_sensor.BINARY_SENSOR_SCHEMA-on_click": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "min_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "50ms"
            },
            "max_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "350ms"
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "binary_sensor.BINARY_SENSOR_SCHEMA-on_double_click": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "min_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "50ms"
            },
            "max_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "350ms"
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "binary_sensor.BINARY_SENSOR_SCHEMA-on_multi_click-timing[]": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "binary_sensor.BINARY_SENSOR_SCHEMA-on_multi_click": {
      "properties": {
        "timing": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA-on_multi_click-timing[]"
          }
        },
        "invalid_cooldown": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "1s"
        },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["timing"]
    },
    "binary_sensor.BINARY_SENSOR_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_SCHEMA" },
        {
          "properties": {
            "device_class": {
              "enum": [
                "",
                "battery",
                "battery_charging",
                "cold",
                "connectivity",
                "door",
                "garage_door",
                "gas",
                "heat",
                "light",
                "lock",
                "moisture",
                "motion",
                "moving",
                "occupancy",
                "opening",
                "plug",
                "power",
                "presence",
                "problem",
                "safety",
                "smoke",
                "sound",
                "update",
                "vibration",
                "window"
              ]
            },
            "filters": {
              "anyOf": [
                { "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/binary_sensor.FILTER_REGISTRY"
                  }
                }
              ]
            },
            "on_press": { "$ref": "#/definitions/simple_automation" },
            "on_release": { "$ref": "#/definitions/simple_automation" },
            "on_click": {
              "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA-on_click"
            },
            "on_double_click": {
              "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA-on_double_click"
            },
            "on_multi_click": {
              "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA-on_multi_click"
            },
            "on_state": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "binary_sensor.MULTI_CLICK_TIMING_SCHEMA": {
      "properties": {
        "state": { "type": "boolean" },
        "min_length": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        },
        "max_length": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        }
      },
      "type": ["object", "null"]
    },
    "canbus.CANBUS_SCHEMA-on_frame-on_frame": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "can_id": { "type": "number" },
            "use_extended_id": { "type": "boolean", "default": false },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "canbus.CANBUS_SCHEMA-on_frame": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "can_id": { "type": "number" },
            "use_extended_id": { "type": "boolean", "default": false },
            "on_frame": {
              "$ref": "#/definitions/canbus.CANBUS_SCHEMA-on_frame-on_frame"
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "canbus.CANBUS_SCHEMA": {
      "allOf": [
        {
          "properties": {
            "can_id": { "type": "number" },
            "bit_rate": {
              "enum": [
                "5KBPS",
                "10KBPS",
                "20KBPS",
                "31K25BPS",
                "33KBPS",
                "40KBPS",
                "50KBPS",
                "80KBPS",
                "83K3BPS",
                "95KBPS",
                "100KBPS",
                "125KBPS",
                "200KBPS",
                "250KBPS",
                "500KBPS",
                "1000KBPS"
              ]
            },
            "use_extended_id": { "type": "boolean", "default": false },
            "on_frame": {
              "$ref": "#/definitions/canbus.CANBUS_SCHEMA-on_frame"
            }
          },
          "type": ["object", "null"],
          "required_": ["can_id"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "climate.CLIMATE_CONTROL_ACTION_SCHEMA": {
      "properties": {
        "mode": { "type": ["null", "object", "string", "array", "number"] },
        "target_temperature": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "target_temperature_low": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "target_temperature_high": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "away": { "type": ["null", "object", "string", "array", "number"] },
        "fan_mode": { "type": ["null", "object", "string", "array", "number"] },
        "custom_fan_mode": { "type": "string" },
        "preset": { "type": ["null", "object", "string", "array", "number"] },
        "custom_preset": { "type": "string" },
        "swing_mode": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"]
    },
    "climate.CLIMATE_SCHEMA-visual": {
      "properties": {
        "min_temperature": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "max_temperature": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "temperature_step": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"]
    },
    "climate.CLIMATE_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "visual": { "$ref": "#/definitions/climate.CLIMATE_SCHEMA-visual" },
            "action_state_topic": { "type": "string" },
            "away_command_topic": { "type": "string" },
            "away_state_topic": { "type": "string" },
            "current_temperature_state_topic": { "type": "string" },
            "fan_mode_command_topic": { "type": "string" },
            "fan_mode_state_topic": { "type": "string" },
            "mode_command_topic": { "type": "string" },
            "mode_state_topic": { "type": "string" },
            "swing_mode_command_topic": { "type": "string" },
            "swing_mode_state_topic": { "type": "string" },
            "target_temperature_command_topic": { "type": "string" },
            "target_temperature_state_topic": { "type": "string" },
            "target_temperature_high_command_topic": { "type": "string" },
            "target_temperature_high_state_topic": { "type": "string" },
            "target_temperature_low_command_topic": { "type": "string" },
            "target_temperature_low_state_topic": { "type": "string" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "cover.COVER_CONTROL_ACTION_SCHEMA": {
      "properties": {
        "stop": { "type": ["null", "object", "string", "array", "number"] },
        "state": { "type": ["null", "object", "string", "array", "number"] },
        "position": { "type": ["null", "object", "string", "array", "number"] },
        "tilt": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"]
    },
    "cover.COVER_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "device_class": {
              "enum": [
                "",
                "awning",
                "blind",
                "curtain",
                "damper",
                "door",
                "garage",
                "gate",
                "shade",
                "shutter",
                "window"
              ]
            },
            "position_command_topic": { "type": "string" },
            "position_state_topic": { "type": "string" },
            "tilt_command_topic": { "type": "string" },
            "tilt_state_topic": { "type": "string" },
            "on_open": { "$ref": "#/definitions/simple_automation" },
            "on_closed": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "display.BASIC_DISPLAY_SCHEMA": {
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"]
    },
    "display.FULL_DISPLAY_SCHEMA-pages": {
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["lambda"]
    },
    "display.FULL_DISPLAY_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
        {
          "properties": {
            "rotation": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "pages": {
              "anyOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA-pages" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA-pages"
                  }
                }
              ]
            },
            "on_page_change": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "fan.FAN_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "oscillation_state_topic": { "type": "string" },
            "oscillation_command_topic": { "type": "string" },
            "speed_level_state_topic": { "type": "string" },
            "speed_level_command_topic": { "type": "string" },
            "speed_state_topic": { "type": "string" },
            "speed_command_topic": { "type": "string" },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" },
            "on_speed_set": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "light.ADDRESSABLE_LIGHT_SCHEMA-color_correct[]": { "type": "string" },
    "light.ADDRESSABLE_LIGHT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "restore_mode": {
              "enum": [
                "RESTORE_DEFAULT_OFF",
                "RESTORE_DEFAULT_ON",
                "ALWAYS_OFF",
                "ALWAYS_ON",
                "RESTORE_INVERTED_DEFAULT_OFF",
                "RESTORE_INVERTED_DEFAULT_ON"
              ]
            },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" },
            "gamma_correct": { "type": "number", "default": 2.8 },
            "default_transition_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "1s"
            },
            "flash_transition_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0s"
            },
            "effects": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-lambda" },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-automation"
                      },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-pulse" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-random" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-strobe" },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-flicker"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_lambda"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_rainbow"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_color_wipe"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_scan"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_twinkle"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_random_twinkle"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_fireworks"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-addressable_flicker"
                      },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-adalight"
                      },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-e131" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-wled" }
                    ]
                  }
                }
              ]
            },
            "color_correct": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA-color_correct[]"
              }
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "light.BINARY_LIGHT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "restore_mode": {
              "enum": [
                "RESTORE_DEFAULT_OFF",
                "RESTORE_DEFAULT_ON",
                "ALWAYS_OFF",
                "ALWAYS_ON",
                "RESTORE_INVERTED_DEFAULT_OFF",
                "RESTORE_INVERTED_DEFAULT_ON"
              ]
            },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" },
            "effects": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-lambda" },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-automation"
                      },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-strobe" }
                    ]
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "light.BRIGHTNESS_ONLY_LIGHT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "restore_mode": {
              "enum": [
                "RESTORE_DEFAULT_OFF",
                "RESTORE_DEFAULT_ON",
                "ALWAYS_OFF",
                "ALWAYS_ON",
                "RESTORE_INVERTED_DEFAULT_OFF",
                "RESTORE_INVERTED_DEFAULT_ON"
              ]
            },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" },
            "gamma_correct": { "type": "number", "default": 2.8 },
            "default_transition_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "1s"
            },
            "flash_transition_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0s"
            },
            "effects": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-lambda" },
                      {
                        "$ref": "#/definitions/light.EFFECTS_REGISTRY-automation"
                      },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-pulse" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-random" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-strobe" },
                      { "$ref": "#/definitions/light.EFFECTS_REGISTRY-flicker" }
                    ]
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "light.LIGHT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "restore_mode": {
              "enum": [
                "RESTORE_DEFAULT_OFF",
                "RESTORE_DEFAULT_ON",
                "ALWAYS_OFF",
                "ALWAYS_ON",
                "RESTORE_INVERTED_DEFAULT_OFF",
                "RESTORE_INVERTED_DEFAULT_ON"
              ]
            },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "number.NUMBER_SCHEMA-on_value_range": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "above": { "type": "number" },
            "below": { "type": "number" },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "number.NUMBER_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_SCHEMA" },
        {
          "properties": {
            "on_value": { "$ref": "#/definitions/simple_automation" },
            "on_value_range": {
              "$ref": "#/definitions/number.NUMBER_SCHEMA-on_value_range"
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output.BINARY_OUTPUT_SCHEMA": {
      "properties": { "inverted": { "type": "boolean" } },
      "type": ["object", "null"]
    },
    "output.FLOAT_OUTPUT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/output.BINARY_OUTPUT_SCHEMA" },
        {
          "properties": {
            "max_power": { "type": "string" },
            "min_power": { "type": "string" },
            "zero_means_zero": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "select.SELECT_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_SCHEMA" },
        {
          "properties": {
            "on_value": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor.SENSOR_SCHEMA-on_value_range": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "above": { "type": "number" },
            "below": { "type": "number" },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor.SENSOR_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_SCHEMA" },
        {
          "properties": {
            "unit_of_measurement": { "type": "string" },
            "accuracy_decimals": { "type": "number" },
            "device_class": {
              "enum": [
                "",
                "aqi",
                "battery",
                "carbon_dioxide",
                "carbon_monoxide",
                "current",
                "energy",
                "gas",
                "humidity",
                "illuminance",
                "monetary",
                "nitrogen_dioxide",
                "nitrogen_monoxide",
                "nitrous_oxide",
                "ozone",
                "pm1",
                "pm10",
                "pm25",
                "power",
                "power_factor",
                "pressure",
                "signal_strength",
                "sulphur_dioxide",
                "temperature",
                "timestamp",
                "volatile_organic_compounds",
                "voltage"
              ]
            },
            "state_class": { "enum": ["", "measurement", "total_increasing"] },
            "force_update": { "type": "boolean", "default": false },
            "expire_after": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"]
            },
            "filters": {
              "anyOf": [
                { "$ref": "#/definitions/sensor.FILTER_REGISTRY" },
                {
                  "type": "array",
                  "items": { "$ref": "#/definitions/sensor.FILTER_REGISTRY" }
                }
              ]
            },
            "on_value": { "$ref": "#/definitions/simple_automation" },
            "on_raw_value": { "$ref": "#/definitions/simple_automation" },
            "on_value_range": {
              "$ref": "#/definitions/sensor.SENSOR_SCHEMA-on_value_range"
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "stepper.STEPPER_SCHEMA": {
      "properties": {
        "max_speed": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "acceleration": {
          "type": ["null", "object", "string", "array", "number"],
          "default": "inf"
        },
        "deceleration": {
          "type": ["null", "object", "string", "array", "number"],
          "default": "inf"
        }
      },
      "type": ["object", "null"],
      "required_": ["max_speed"]
    },
    "switch.SWITCH_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMMAND_COMPONENT_SCHEMA" },
        {
          "properties": {
            "inverted": { "type": "boolean" },
            "on_turn_on": { "$ref": "#/definitions/simple_automation" },
            "on_turn_off": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "text_sensor.TEXT_SENSOR_SCHEMA": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.ENTITY_BASE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.MQTT_COMPONENT_SCHEMA" },
        {
          "properties": {
            "filters": {
              "anyOf": [
                { "$ref": "#/definitions/text_sensor.FILTER_REGISTRY" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/text_sensor.FILTER_REGISTRY"
                  }
                }
              ]
            },
            "on_value": { "$ref": "#/definitions/simple_automation" },
            "on_raw_value": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "time.TIME_SCHEMA-on_time": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "seconds": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "minutes": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "hours": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "days_of_month": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "months": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "days_of_week": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "cron": { "type": ["null", "object", "string", "array", "number"] },
            "at": { "type": ["null", "object", "string", "array", "number"] },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "time.TIME_SCHEMA": {
      "allOf": [
        {
          "properties": {
            "timezone": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "on_time": { "$ref": "#/definitions/time.TIME_SCHEMA-on_time" },
            "on_time_sync": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "ads1115": {
      "allOf": [
        {
          "properties": {
            "continuous_mode": { "type": "boolean", "default": false },
            "address": { "type": "string" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "animation": {
      "properties": {
        "file": { "type": ["null", "object", "string", "array", "number"] },
        "resize": { "type": ["null", "object", "string", "array", "number"] },
        "type": { "enum": ["BINARY", "GRAYSCALE", "RGB24"] }
      },
      "type": ["object", "null"],
      "required_": ["file"]
    },
    "apds9960": {
      "allOf": [
        { "$ref": "#/definitions/POLLING_COMPONENT" },
        {
          "properties": { "address": { "type": "string", "default": "57" } },
          "type": ["object", "null"]
        }
      ]
    },
    "api-services-variables": { "properties": {}, "type": ["object", "null"] },
    "api-services": {
      "properties": {
        "service": { "type": "string" },
        "variables": { "$ref": "#/definitions/api-services-variables" },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["service"]
    },
    "api-encryption": {
      "properties": {
        "key": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["key"]
    },
    "ble_client": {
      "allOf": [
        {
          "properties": {
            "mac_address": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "name": { "type": "string" },
            "on_connect": { "$ref": "#/definitions/simple_automation" },
            "on_disconnect": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"],
          "required_": ["mac_address"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "climate-bang_bang-away_config": {
      "properties": {
        "default_target_temperature_low": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "default_target_temperature_high": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"],
      "required_": [
        "default_target_temperature_low",
        "default_target_temperature_high"
      ]
    },
    "climate-midea-supported_modes": {
      "properties": {},
      "type": ["object", "null"]
    },
    "climate-midea-supported_swing_modes": {
      "properties": {},
      "type": ["object", "null"]
    },
    "climate-midea-supported_presets": {
      "properties": {},
      "type": ["object", "null"]
    },
    "climate-midea-custom_presets": {
      "properties": {},
      "type": ["object", "null"]
    },
    "climate-midea-custom_fan_modes": {
      "properties": {},
      "type": ["object", "null"]
    },
    "climate-pid-control_parameters": {
      "properties": {
        "kp": { "type": "number" },
        "ki": { "type": "number", "default": 0.0 },
        "kd": { "type": "number", "default": 0.0 },
        "min_integral": { "type": "number", "default": -1 },
        "max_integral": { "type": "number", "default": 1 }
      },
      "type": ["object", "null"],
      "required_": ["kp"]
    },
    "climate-thermostat-away_config": {
      "properties": {
        "default_target_temperature_high": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "default_target_temperature_low": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"]
    },
    "color": {
      "allOf": [
        {
          "properties": {
            "red": { "type": "string" },
            "red_int": { "type": "number" },
            "green": { "type": "string" },
            "green_int": { "type": "number" },
            "blue": { "type": "string" },
            "blue_int": { "type": "number" },
            "white": { "type": "string" },
            "white_int": { "type": "number" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "custom_component": {
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] },
        "components": {
          "anyOf": [
            { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["lambda"]
    },
    "dallas": {
      "allOf": [
        {
          "properties": {
            "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
          },
          "type": ["object", "null"],
          "required_": ["pin"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "demo-binary_sensors[]": {
      "allOf": [
        { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "demo-climates[]": {
      "allOf": [
        { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "type": { "enum": [1, 2, 3] } },
          "type": ["object", "null"],
          "required_": ["type"]
        }
      ]
    },
    "demo-covers[]": {
      "allOf": [
        { "$ref": "#/definitions/cover.COVER_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "type": { "enum": [1, 2, 3, 4] } },
          "type": ["object", "null"],
          "required_": ["type"]
        }
      ]
    },
    "demo-fans[]": {
      "allOf": [
        { "$ref": "#/definitions/fan.FAN_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "type": { "enum": [1, 2, 3, 4] } },
          "type": ["object", "null"],
          "required_": ["type"]
        }
      ]
    },
    "demo-lights[]": {
      "allOf": [
        { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "type": { "enum": [1, 2, 3, 4, 5, 6, 7] } },
          "type": ["object", "null"],
          "required_": ["type"]
        }
      ]
    },
    "demo-numbers[]": {
      "allOf": [
        { "$ref": "#/definitions/number.NUMBER_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": {
            "type": { "enum": [1, 2, 3] },
            "min_value": { "type": "number" },
            "max_value": { "type": "number" },
            "step": { "type": "number" }
          },
          "type": ["object", "null"],
          "required_": ["type", "min_value", "max_value", "step"]
        }
      ]
    },
    "demo-sensors[]": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "demo-switches[]": {
      "allOf": [
        { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "demo-text_sensors[]": {
      "allOf": [
        { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "dfplayer": {
      "properties": {
        "on_finished_playback": { "$ref": "#/definitions/simple_automation" }
      },
      "type": ["object", "null"]
    },
    "esp32-framework-esp-idf-advanced": {
      "properties": {
        "ignore_efuse_mac_crc": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"]
    },
    "esp32-framework-esp-idf": {
      "properties": {
        "version": { "type": "string", "default": "recommended" },
        "source": { "type": "string" },
        "platform_version": { "type": "string" },
        "sdkconfig_options": { "what": "is_this" },
        "advanced": { "$ref": "#/definitions/esp32-framework-esp-idf-advanced" }
      },
      "type": ["object", "null"]
    },
    "esp32-framework-arduino": {
      "properties": {
        "version": { "type": "string", "default": "recommended" },
        "source": { "type": "string" },
        "platform_version": { "type": "string" }
      },
      "type": ["object", "null"]
    },
    "esp32_ble_tracker-on_ble_advertise": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "mac_address": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "esp32_ble_tracker-on_ble_service_data_advertise": {
      "properties": {
        "mac_address": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "service_uuid": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["service_uuid"]
    },
    "esp32_ble_tracker-on_ble_manufacturer_data_advertise": {
      "properties": {
        "mac_address": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "manufacturer_id": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["manufacturer_id"]
    },
    "esp32_camera-data_pins[]": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "esp32_camera-external_clock": {
      "properties": {
        "pin": { "type": ["null", "object", "string", "array", "number"] },
        "frequency": {
          "type": ["null", "object", "string", "array", "number"],
          "default": "20MHz"
        }
      },
      "type": ["object", "null"],
      "required_": ["pin"]
    },
    "esp32_camera-i2c_pins": {
      "properties": {
        "sda": { "type": ["null", "object", "string", "array", "number"] },
        "scl": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["sda", "scl"]
    },
    "ethernet-manual_ip": {
      "allOf": [
        {
          "properties": {
            "static_ip": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "gateway": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "subnet": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "dns1": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "0.0.0.0"
            },
            "dns2": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "0.0.0.0"
            }
          },
          "type": ["object", "null"],
          "required_": ["static_ip", "gateway", "subnet"]
        }
      ]
    },
    "external_components-source-git": {
      "properties": {
        "url": { "type": ["null", "object", "string", "array", "number"] },
        "ref": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["url"]
    },
    "external_components-source-local": {
      "properties": {
        "path": { "type": ["null", "object", "string", "array", "number"] }
      },
      "type": ["object", "null"],
      "required_": ["path"]
    },
    "external_components-components": { "type": "string" },
    "external_components": {
      "properties": {
        "source": {
          "allOf": [
            {
              "type": "object",
              "properties": { "type": { "type": "string" } }
            },
            {
              "if": { "properties": { "type": { "const": "git" } } },
              "then": { "$ref": "#/definitions/external_components-source-git" }
            },
            {
              "if": { "properties": { "type": { "const": "local" } } },
              "then": {
                "$ref": "#/definitions/external_components-source-local"
              }
            }
          ]
        },
        "refresh": { "type": "string", "default": "1d" },
        "components": {
          "anyOf": [
            { "$ref": "#/definitions/external_components-components" },
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/external_components-components"
              }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["source"]
    },
    "fingerprint_grow": {
      "allOf": [
        {
          "properties": {
            "sensing_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "password": { "type": "number" },
            "new_password": { "type": "number" },
            "on_finger_scan_matched": {
              "$ref": "#/definitions/simple_automation"
            },
            "on_finger_scan_unmatched": {
              "$ref": "#/definitions/simple_automation"
            },
            "on_enrollment_scan": { "$ref": "#/definitions/simple_automation" },
            "on_enrollment_done": { "$ref": "#/definitions/simple_automation" },
            "on_enrollment_failed": {
              "$ref": "#/definitions/simple_automation"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "font": {
      "properties": {
        "file": { "type": ["null", "object", "string", "array", "number"] },
        "glyphs": {
          "type": ["null", "object", "string", "array", "number"],
          "default": " !\"%()+=,-.:/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\u00b0"
        },
        "size": { "type": "number", "default": 20 }
      },
      "type": ["object", "null"],
      "required_": ["file"]
    },
    "globals": {
      "allOf": [
        {
          "properties": {
            "type": { "type": "string" },
            "initial_value": { "type": "string" },
            "restore_value": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "required_": ["type"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "gps": {
      "allOf": [
        {
          "properties": {
            "latitude": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
            "longitude": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
            "speed": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
            "course": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
            "altitude": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
            "satellites": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "graph-traces": {
      "properties": {
        "name": { "type": "string" },
        "line_thickness": { "type": "number" },
        "line_type": { "enum": ["SOLID", "DOTTED", "DASHED"] }
      },
      "type": ["object", "null"]
    },
    "graph-legend": {
      "properties": {
        "width": { "type": "number" },
        "height": { "type": "number" },
        "border": { "type": "boolean" },
        "show_lines": { "type": "boolean" },
        "show_values": { "enum": ["NONE", "AUTO", "BESIDE", "BELOW"] },
        "show_units": { "type": "boolean" },
        "direction": { "enum": ["AUTO", "HORIZONTAL", "VERTICAL"] }
      },
      "type": ["object", "null"]
    },
    "graph": {
      "properties": {
        "duration": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        },
        "width": { "type": "number" },
        "height": { "type": "number" },
        "x_grid": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"]
        },
        "y_grid": { "type": "number" },
        "border": { "type": "boolean" },
        "line_thickness": { "type": "number" },
        "line_type": { "enum": ["SOLID", "DOTTED", "DASHED"] },
        "min_value": { "type": "number" },
        "max_value": { "type": "number" },
        "min_range": { "type": "number" },
        "max_range": { "type": "number" },
        "traces": {
          "anyOf": [
            { "$ref": "#/definitions/graph-traces" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/graph-traces" }
            }
          ]
        },
        "legend": {
          "anyOf": [
            { "$ref": "#/definitions/graph-legend" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/graph-legend" }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["duration", "width", "height"]
    },
    "i2c": {
      "allOf": [
        {
          "properties": {
            "id": { "type": ["null", "object", "string", "array", "number"] },
            "sda": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "SDA"
            },
            "sda_pullup_enabled": { "type": "boolean" },
            "scl": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "SCL"
            },
            "scl_pullup_enabled": { "type": "boolean" },
            "frequency": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "50kHz"
            },
            "scan": { "type": "boolean", "default": true }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "image": {
      "properties": {
        "file": { "type": ["null", "object", "string", "array", "number"] },
        "resize": { "type": ["null", "object", "string", "array", "number"] },
        "type": { "enum": ["BINARY", "GRAYSCALE", "RGB24"] },
        "dither": { "enum": ["NONE", "FLOYDSTEINBERG"] }
      },
      "type": ["object", "null"],
      "required_": ["file"]
    },
    "interval": {
      "allOf": [
        {
          "properties": {
            "interval": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"]
            }
          },
          "type": ["object", "null"],
          "required_": ["interval"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        { "$ref": "#/definitions/AUTOMATION.AUTOMATION_SCHEMA" }
      ]
    },
    "logger-logs": {
      "properties": {
        "app": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "component": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "esphal": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "helpers": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "preferences": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "scheduler": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        },
        "api.service": {
          "enum": [
            "NONE",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "VERBOSE",
            "VERY_VERBOSE"
          ]
        }
      },
      "type": ["object", "null"]
    },
    "logger-on_message": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "level": {
              "enum": [
                "NONE",
                "ERROR",
                "WARN",
                "INFO",
                "DEBUG",
                "VERBOSE",
                "VERY_VERBOSE"
              ]
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "mcp23008": {
      "allOf": [
        {
          "properties": {
            "open_drain_interrupt": { "type": "boolean", "default": false },
            "address": { "type": "string", "default": "32" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "mcp23016": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "address": { "type": "string", "default": "32" } },
          "type": ["object", "null"]
        }
      ]
    },
    "mcp23017": {
      "allOf": [
        {
          "properties": {
            "open_drain_interrupt": { "type": "boolean", "default": false },
            "address": { "type": "string", "default": "32" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "mcp23s08": {
      "allOf": [
        {
          "properties": {
            "open_drain_interrupt": { "type": "boolean", "default": false },
            "deviceaddress": { "type": "number", "default": 0 }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "mcp23s17": {
      "allOf": [
        {
          "properties": {
            "open_drain_interrupt": { "type": "boolean", "default": false },
            "deviceaddress": { "type": "number", "default": 0 }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "modbus": {
      "allOf": [
        {
          "properties": {
            "flow_control_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "send_wait_time": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "250ms"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "modbus_controller": {
      "allOf": [
        {
          "properties": {
            "command_throttle": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0ms"
            },
            "address": { "type": "string", "default": "1" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "mpr121": {
      "allOf": [
        {
          "properties": {
            "release_debounce": { "type": "number", "default": 0 },
            "touch_debounce": { "type": "number", "default": 0 },
            "touch_threshold": { "type": "number", "default": 11 },
            "release_threshold": { "type": "number", "default": 6 },
            "address": { "type": "string", "default": "90" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "mqtt-ssl_fingerprints": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "mqtt-on_message": {
      "properties": {
        "topic": { "type": "string" },
        "qos": {
          "type": ["null", "object", "string", "array", "number"],
          "default": 0
        },
        "payload": { "type": "string" },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["topic"]
    },
    "mqtt-on_json_message": {
      "properties": {
        "topic": { "type": "string" },
        "qos": {
          "type": ["null", "object", "string", "array", "number"],
          "default": 0
        },
        "then": {
          "anyOf": [
            {
              "type": "array",
              "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
            },
            { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["topic"]
    },
    "my9231": {
      "allOf": [
        {
          "properties": {
            "data_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "clock_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "num_channels": { "type": "number", "default": 6 },
            "num_chips": { "type": "number", "default": 2 },
            "bit_depth": { "enum": [8, 12, 14, 16] }
          },
          "type": ["object", "null"],
          "required_": ["data_pin", "clock_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "output-custom-binary": {
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] },
        "outputs": {
          "anyOf": [
            { "$ref": "#/definitions/output.BINARY_OUTPUT_SCHEMA" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/output.BINARY_OUTPUT_SCHEMA" }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["lambda", "outputs"]
    },
    "output-custom-float": {
      "properties": {
        "lambda": { "type": ["null", "object", "string", "array", "number"] },
        "outputs": {
          "anyOf": [
            { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["lambda", "outputs"]
    },
    "output-pipsolar-battery_recharge_voltage-possible_values": {
      "type": "number"
    },
    "output-pipsolar-battery_recharge_voltage": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-battery_under_voltage": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-battery_float_voltage": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-battery_type": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-current_max_ac_charging_current": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-current_max_charging_current": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-output_source_priority": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-charger_source_priority": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-pipsolar-battery_redischarge_voltage": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "possible_values": {
              "anyOf": [
                {
                  "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage-possible_values"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "output-template-binary": {
      "allOf": [
        { "$ref": "#/definitions/output.BINARY_OUTPUT_SCHEMA" },
        {
          "properties": {
            "write_action": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"],
          "required_": ["write_action"]
        }
      ]
    },
    "output-template-float": {
      "allOf": [
        { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
        {
          "properties": {
            "write_action": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"],
          "required_": ["write_action"]
        }
      ]
    },
    "packages-<class 'str'>-files": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "pca9685": {
      "allOf": [
        {
          "properties": {
            "frequency": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "address": { "type": "string", "default": "64" }
          },
          "type": ["object", "null"],
          "required_": ["frequency"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "pcf8574": {
      "allOf": [
        {
          "properties": {
            "pcf8575": { "type": "boolean", "default": false },
            "address": { "type": "string", "default": "33" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "pn532": { "type": ["null", "object", "string", "array", "number"] },
    "pn532_spi": {
      "allOf": [
        {
          "properties": {
            "on_tag": { "$ref": "#/definitions/simple_automation" },
            "on_finished_write": { "$ref": "#/definitions/simple_automation" },
            "on_tag_removed": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "power_supply": {
      "allOf": [
        {
          "properties": {
            "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "enable_time": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "20ms"
            },
            "keep_on_time": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "10s"
            }
          },
          "type": ["object", "null"],
          "required_": ["pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "rc522_i2c": {
      "allOf": [
        {
          "properties": {
            "reset_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "on_tag": { "$ref": "#/definitions/simple_automation" },
            "address": { "type": "string", "default": "44" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "rc522_spi": {
      "allOf": [
        {
          "properties": {
            "reset_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "on_tag": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "remote_receiver": {
      "allOf": [
        {
          "properties": {
            "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "dump": { "type": "array", "default": [] },
            "tolerance": { "type": "string", "default": "25" },
            "buffer_size": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "filter": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "50us"
            },
            "idle": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "10ms"
            },
            "memory_blocks": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 3
            },
            "on_dish": { "$ref": "#/definitions/simple_automation" },
            "on_jvc": { "$ref": "#/definitions/simple_automation" },
            "on_lg": { "$ref": "#/definitions/simple_automation" },
            "on_nec": { "$ref": "#/definitions/simple_automation" },
            "on_pioneer": { "$ref": "#/definitions/simple_automation" },
            "on_sony": { "$ref": "#/definitions/simple_automation" },
            "on_raw": { "$ref": "#/definitions/simple_automation" },
            "on_rc5": { "$ref": "#/definitions/simple_automation" },
            "on_rc_switch": { "$ref": "#/definitions/simple_automation" },
            "on_samsung": { "$ref": "#/definitions/simple_automation" },
            "on_samsung36": { "$ref": "#/definitions/simple_automation" },
            "on_toshiba_ac": { "$ref": "#/definitions/simple_automation" },
            "on_panasonic": { "$ref": "#/definitions/simple_automation" },
            "on_midea": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"],
          "required_": ["pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "remote_transmitter": {
      "allOf": [
        {
          "properties": {
            "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "carrier_duty_percent": { "type": "string" }
          },
          "type": ["object", "null"],
          "required_": ["pin", "carrier_duty_percent"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "rtttl": {
      "allOf": [
        {
          "properties": {
            "on_finished_playback": {
              "$ref": "#/definitions/simple_automation"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "script": {
      "allOf": [
        { "$ref": "#/definitions/AUTOMATION.AUTOMATION_SCHEMA" },
        {
          "properties": {
            "id": { "type": "string" },
            "mode": { "enum": ["single", "restart", "queued", "parallel"] },
            "max_runs": { "type": "number" }
          },
          "type": ["object", "null"],
          "required_": ["id"]
        }
      ]
    },
    "sensor-atm90e32-phase_a": {
      "properties": {
        "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "reactive_power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "power_factor": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "forward_active_energy": {
          "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
        },
        "reverse_active_energy": {
          "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
        },
        "gain_voltage": { "type": "number", "default": 7305 },
        "gain_ct": { "type": "number", "default": 27961 }
      },
      "type": ["object", "null"]
    },
    "sensor-binary_sensor_map-group-channels": {
      "properties": { "value": { "type": "number" } },
      "type": ["object", "null"],
      "required_": ["value"]
    },
    "sensor-binary_sensor_map-group": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "channels": {
              "anyOf": [
                {
                  "$ref": "#/definitions/sensor-binary_sensor_map-group-channels"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/sensor-binary_sensor_map-group-channels"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"],
          "required_": ["channels"]
        }
      ]
    },
    "sensor-bme280-temperature": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme280-pressure": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme280-humidity": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680-temperature": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680-pressure": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680-humidity": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680_bsec-temperature": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": { "sample_rate": { "enum": ["LP", "ULP"] } },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680_bsec-pressure": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": { "sample_rate": { "enum": ["LP", "ULP"] } },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bme680_bsec-humidity": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": { "sample_rate": { "enum": ["LP", "ULP"] } },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bmp280-temperature": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-bmp280-pressure": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": {
            "oversampling": { "enum": ["NONE", "1X", "2X", "4X", "8X", "16X"] }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sensor-havells_solar-phase_a": {
      "properties": {
        "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
      },
      "type": ["object", "null"]
    },
    "sensor-havells_solar-pv1": {
      "properties": {
        "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "active_power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "voltage_sampled_by_secondary_cpu": {
          "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
        },
        "insulation_of_p_to_ground": {
          "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
        }
      },
      "type": ["object", "null"]
    },
    "sensor-hm3301-aqi": {
      "allOf": [
        { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        {
          "properties": { "calculation_type": { "enum": ["CAQI", "AQI"] } },
          "type": ["object", "null"],
          "required_": ["calculation_type"]
        }
      ]
    },
    "sensor-ina3221-channel_1": {
      "properties": {
        "bus_voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "shunt_voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "shunt_resistance": {
          "type": ["null", "object", "string", "array", "number"],
          "default": 0.1
        }
      },
      "type": ["object", "null"]
    },
    "sensor-sdm_meter-phase_a": {
      "properties": {
        "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "active_power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "apparent_power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "reactive_power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "power_factor": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
        "phase_angle": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
      },
      "type": ["object", "null"]
    },
    "sensor-sgp30-baseline": {
      "properties": {
        "eco2_baseline": { "type": "string" },
        "tvoc_baseline": { "type": "string" }
      },
      "type": ["object", "null"],
      "required_": ["eco2_baseline", "tvoc_baseline"]
    },
    "sensor-sgp30-compensation": {
      "properties": {},
      "type": ["object", "null"]
    },
    "servo": {
      "allOf": [
        {
          "properties": {
            "min_level": { "type": "string", "default": "3%" },
            "idle_level": { "type": "string", "default": "7.5%" },
            "max_level": { "type": "string", "default": "12%" },
            "restore": { "type": "boolean", "default": false },
            "auto_detach_time": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0s"
            },
            "transition_length": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0s"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "sim800l": {
      "allOf": [
        {
          "properties": {
            "on_sms_received": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "sm16716": {
      "allOf": [
        {
          "properties": {
            "data_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "clock_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "num_channels": { "type": "number", "default": 3 },
            "num_chips": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"],
          "required_": ["data_pin", "clock_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "sm2135": {
      "allOf": [
        {
          "properties": {
            "data_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "clock_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
          },
          "type": ["object", "null"],
          "required_": ["data_pin", "clock_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "sn74hc595": {
      "allOf": [
        {
          "properties": {
            "data_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "clock_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "latch_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "oe_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "sr_count": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"],
          "required_": ["data_pin", "clock_pin", "latch_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "spi": {
      "properties": {
        "clk_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
        "miso_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
        "mosi_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
      },
      "type": ["object", "null"],
      "required_": ["clk_pin"]
    },
    "sun-on_sunrise": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "elevation": {
              "type": ["null", "object", "string", "array", "number"],
              "default": -0.83333
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "sun-on_sunset": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
        },
        { "$ref": "#/definitions/automation.ACTION_REGISTRY" },
        {
          "properties": {
            "elevation": {
              "type": ["null", "object", "string", "array", "number"],
              "default": -0.83333
            },
            "then": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/automation.ACTION_REGISTRY"
                  }
                },
                { "$ref": "#/definitions/automation.ACTION_REGISTRY" }
              ]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "switch-gpio-interlock": null,
    "switch-pipsolar-output_source_priority_utility": {
      "allOf": [
        { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "sx1509-keypad": {
      "properties": {
        "key_rows": { "type": "number" },
        "key_columns": { "type": "number" },
        "sleep_time": { "type": "number" },
        "scan_time": { "type": "number" },
        "debounce_time": { "type": "number" }
      },
      "type": ["object", "null"],
      "required_": ["key_rows", "key_columns"]
    },
    "sx1509": {
      "allOf": [
        {
          "properties": {
            "keypad": { "$ref": "#/definitions/sx1509-keypad" },
            "address": { "type": "string", "default": "62" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "tca9548a-channels": {
      "properties": { "channel": { "type": "number" } },
      "type": ["object", "null"],
      "required_": ["channel"]
    },
    "tca9548a": {
      "allOf": [
        {
          "properties": {
            "channels": {
              "anyOf": [
                { "$ref": "#/definitions/tca9548a-channels" },
                {
                  "type": "array",
                  "items": { "$ref": "#/definitions/tca9548a-channels" }
                }
              ]
            },
            "address": { "type": "string", "default": "112" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "text_sensor-wifi_info-scan_results": {
      "allOf": [
        { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "time-sntp-servers": {
      "type": ["null", "object", "string", "array", "number"]
    },
    "tlc59208f": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "address": { "type": "string", "default": "32" } },
          "type": ["object", "null"]
        }
      ]
    },
    "tlc5947": {
      "allOf": [
        {
          "properties": {
            "data_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "clock_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "lat_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "oe_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "num_chips": { "type": "number", "default": 1 }
          },
          "type": ["object", "null"],
          "required_": ["data_pin", "clock_pin", "lat_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "ttp229_bsf": {
      "allOf": [
        {
          "properties": {
            "sdo_pin": {
              "$ref": "#/definitions/PIN.GPIO_FULL_INPUT_PIN_SCHEMA"
            },
            "scl_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
          },
          "type": ["object", "null"],
          "required_": ["sdo_pin", "scl_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "ttp229_lsf": {
      "allOf": [
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        {
          "properties": { "address": { "type": "string", "default": "87" } },
          "type": ["object", "null"]
        }
      ]
    },
    "uart": {
      "allOf": [
        {
          "properties": {
            "id": { "type": ["null", "object", "string", "array", "number"] },
            "baud_rate": { "type": "number" },
            "tx_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "rx_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "rx_buffer_size": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 256
            },
            "stop_bits": { "enum": [1, 2] },
            "data_bits": { "type": "number", "default": 8 },
            "parity": { "enum": ["NONE", "EVEN", "ODD"] }
          },
          "type": ["object", "null"],
          "required_": ["baud_rate"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "web_server-auth": {
      "properties": {
        "username": { "$ref": "#/definitions/esphome-libraries" },
        "password": { "$ref": "#/definitions/esphome-libraries" }
      },
      "type": ["object", "null"],
      "required_": ["username", "password"]
    },
    "wifi-networks": {
      "allOf": [
        {
          "properties": {
            "ssid": { "type": "string" },
            "password": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "channel": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "manual_ip": { "$ref": "#/definitions/ethernet-manual_ip" },
            "bssid": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "hidden": { "type": "boolean" },
            "priority": { "type": "number", "default": 0.0 },
            "eap": {
              "properties": {
                "identity": { "type": "string" },
                "username": { "type": "string" },
                "password": { "type": "string" },
                "certificate_authority": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "certificate": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "key": {
                  "type": ["null", "object", "string", "array", "number"]
                }
              },
              "type": ["object", "null"]
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "wifi-ap": {
      "allOf": [
        {
          "properties": {
            "ssid": { "type": "string" },
            "password": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "channel": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "manual_ip": { "$ref": "#/definitions/ethernet-manual_ip" },
            "ap_timeout": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "1min"
            }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "xpt2046": {
      "allOf": [
        {
          "properties": {
            "irq_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "calibration_x_min": { "type": "number", "default": 0 },
            "calibration_x_max": { "type": "number", "default": 4095 },
            "calibration_y_min": { "type": "number", "default": 0 },
            "calibration_y_max": { "type": "number", "default": 4095 },
            "dimension_x": { "type": "number", "default": 100 },
            "dimension_y": { "type": "number", "default": 100 },
            "threshold": { "type": "number", "default": 400 },
            "report_interval": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "never"
            },
            "swap_x_y": { "type": "boolean", "default": false },
            "on_state": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "automation.ACTION_REGISTRY-binary_sensor.template.publish": {
      "type": "object",
      "properties": {
        "binary_sensor.template.publish": {
          "properties": {
            "state": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.follow_me": {
      "type": "object",
      "properties": {
        "midea_ac.follow_me": {
          "properties": {
            "temperature": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "beeper": {
              "type": ["null", "object", "string", "array", "number"],
              "default": false
            }
          },
          "type": ["object", "null"],
          "required_": ["temperature"]
        }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.display_toggle": {
      "type": "object",
      "properties": {
        "midea_ac.display_toggle": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.swing_step": {
      "type": "object",
      "properties": {
        "midea_ac.swing_step": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.beeper_on": {
      "type": "object",
      "properties": {
        "midea_ac.beeper_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.beeper_off": {
      "type": "object",
      "properties": {
        "midea_ac.beeper_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.power_on": {
      "type": "object",
      "properties": {
        "midea_ac.power_on": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-midea_ac.power_off": {
      "type": "object",
      "properties": {
        "midea_ac.power_off": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-climate.pid.reset_integral_term": {
      "type": "object",
      "properties": {
        "climate.pid.reset_integral_term": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-climate.pid.autotune": {
      "type": "object",
      "properties": {
        "climate.pid.autotune": {
          "properties": {
            "noiseband": { "type": "number", "default": 0.25 },
            "positive_output": { "type": "string", "default": "1.0" },
            "negative_output": { "type": "string", "default": "-1.0" }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-climate.pid.set_control_parameters": {
      "type": "object",
      "properties": {
        "climate.pid.set_control_parameters": {
          "properties": {
            "kp": { "type": ["null", "object", "string", "array", "number"] },
            "ki": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 0.0
            },
            "kd": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 0.0
            }
          },
          "type": ["object", "null"],
          "required_": ["kp"]
        }
      }
    },
    "automation.ACTION_REGISTRY-cover.template.publish": {
      "type": "object",
      "properties": {
        "cover.template.publish": {
          "properties": {
            "state": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "position": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "current_operation": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "tilt": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-fan.hbridge.brake": {
      "type": "object",
      "properties": {
        "fan.hbridge.brake": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-output.esp8266_pwm.set_frequency": {
      "type": "object",
      "properties": {
        "output.esp8266_pwm.set_frequency": {
          "properties": {
            "frequency": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["frequency"]
        }
      }
    },
    "automation.ACTION_REGISTRY-output.ledc.set_frequency": {
      "type": "object",
      "properties": {
        "output.ledc.set_frequency": {
          "properties": {
            "frequency": {
              "type": ["null", "object", "string", "array", "number"]
            }
          },
          "type": ["object", "null"],
          "required_": ["frequency"]
        }
      }
    },
    "automation.ACTION_REGISTRY-output.pipsolar.set_level": {
      "type": "object",
      "properties": {
        "output.pipsolar.set_level": {
          "properties": {
            "id": { "type": ["null", "object", "string", "array", "number"] },
            "value": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["id", "value"]
        }
      }
    },
    "automation.ACTION_REGISTRY-cs5460a.restart": {
      "type": "object",
      "properties": {
        "cs5460a.restart": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-sensor.integration.reset": {
      "type": "object",
      "properties": {
        "sensor.integration.reset": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-mhz19.abc_disable": {
      "type": "object",
      "properties": {
        "mhz19.abc_disable": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-mhz19.abc_enable": {
      "type": "object",
      "properties": {
        "mhz19.abc_enable": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-mhz19.calibrate_zero": {
      "type": "object",
      "properties": {
        "mhz19.calibrate_zero": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-pulse_meter.set_total_pulses": {
      "type": "object",
      "properties": {
        "pulse_meter.set_total_pulses": {
          "properties": {
            "value": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["value"]
        }
      }
    },
    "automation.ACTION_REGISTRY-sensor.rotary_encoder.set_value": {
      "type": "object",
      "properties": {
        "sensor.rotary_encoder.set_value": {
          "properties": {
            "value": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["value"]
        }
      }
    },
    "automation.ACTION_REGISTRY-senseair.abc_get_period": {
      "type": "object",
      "properties": {
        "senseair.abc_get_period": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-senseair.abc_disable": {
      "type": "object",
      "properties": {
        "senseair.abc_disable": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-senseair.abc_enable": {
      "type": "object",
      "properties": {
        "senseair.abc_enable": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-senseair.background_calibration_result": {
      "type": "object",
      "properties": {
        "senseair.background_calibration_result": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-senseair.background_calibration": {
      "type": "object",
      "properties": {
        "senseair.background_calibration": {
          "properties": {},
          "type": ["object", "null"]
        }
      }
    },
    "automation.ACTION_REGISTRY-sensor.template.publish": {
      "type": "object",
      "properties": {
        "sensor.template.publish": {
          "properties": {
            "state": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-switch.template.publish": {
      "type": "object",
      "properties": {
        "switch.template.publish": {
          "properties": {
            "state": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-text_sensor.template.publish": {
      "type": "object",
      "properties": {
        "text_sensor.template.publish": {
          "properties": {
            "state": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"],
          "required_": ["state"]
        }
      }
    },
    "automation.ACTION_REGISTRY-ds1307.write_time": {
      "type": "object",
      "properties": {
        "ds1307.write_time": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "automation.ACTION_REGISTRY-ds1307.read_time": {
      "type": "object",
      "properties": {
        "ds1307.read_time": { "properties": {}, "type": ["object", "null"] }
      }
    },
    "PIN.GPIO_FULL_PIN_SCHEMA": {
      "oneOf": [
        { "$ref": "#/definitions/PIN.INTERNAL", "required": ["number"] },
        { "$ref": "#/definitions/PIN_esp32", "required": ["esp32"] },
        { "$ref": "#/definitions/PIN_esp8266", "required": ["esp8266"] },
        { "$ref": "#/definitions/PIN_mcp23xxx", "required": ["mcp23xxx"] },
        { "$ref": "#/definitions/PIN_mcp23016", "required": ["mcp23016"] },
        { "$ref": "#/definitions/PIN_pcf8574", "required": ["pcf8574"] },
        { "$ref": "#/definitions/PIN_sn74hc595", "required": ["sn74hc595"] },
        { "$ref": "#/definitions/PIN_sx1509", "required": ["sx1509"] }
      ],
      "type": ["string", "object"]
    },
    "PIN.INTERNAL": {
      "properties": { "number": { "type": ["number", "string"] } },
      "additionalItems": false
    },
    "PIN_esp32-mode": {
      "properties": {
        "input": { "type": "boolean", "default": false },
        "output": { "type": "boolean", "default": false },
        "open_drain": { "type": "boolean", "default": false },
        "pullup": { "type": "boolean", "default": false },
        "pulldown": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"]
    },
    "PIN_esp32": {
      "properties": {
        "id": { "type": ["null", "object", "string", "array", "number"] },
        "number": { "type": ["null", "object", "string", "array", "number"] },
        "mode": { "$ref": "#/definitions/PIN_esp32-mode" },
        "inverted": { "type": "boolean", "default": false },
        "drive_strength": { "properties": {}, "type": ["object", "null"] }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_esp8266-mode": {
      "properties": {
        "analog": { "type": "boolean", "default": false },
        "input": { "type": "boolean", "default": false },
        "output": { "type": "boolean", "default": false },
        "open_drain": { "type": "boolean", "default": false },
        "pullup": { "type": "boolean", "default": false },
        "pulldown": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"]
    },
    "PIN_esp8266": {
      "properties": {
        "number": { "type": ["null", "object", "string", "array", "number"] },
        "mode": { "$ref": "#/definitions/PIN_esp8266-mode" },
        "inverted": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_mcp23xxx": {
      "properties": {
        "number": { "type": "number" },
        "mode": {
          "properties": {
            "input": { "type": "boolean", "default": false },
            "pullup": { "type": "boolean", "default": false },
            "output": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "default": {}
        },
        "inverted": { "type": "boolean", "default": false },
        "interrupt": { "enum": ["NO_INTERRUPT", "CHANGE", "RISING", "FALLING"] }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_mcp23008": null,
    "PIN_mcp23s08": null,
    "PIN_mcp23017": null,
    "PIN_mcp23s17": null,
    "PIN_mcp23016": {
      "properties": {
        "number": { "type": "number" },
        "mode": {
          "properties": {
            "input": { "type": "boolean", "default": false },
            "output": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "default": {}
        },
        "inverted": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_pcf8574": {
      "properties": {
        "number": { "type": "number" },
        "mode": {
          "properties": {
            "input": { "type": "boolean", "default": false },
            "output": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "default": {}
        },
        "inverted": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_sn74hc595": {
      "properties": {
        "number": { "type": "number" },
        "mode": {
          "properties": { "output": { "type": "boolean", "default": true } },
          "type": ["object", "null"],
          "default": {}
        },
        "inverted": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    },
    "PIN_sx1509": {
      "properties": {
        "number": { "type": "number" },
        "mode": {
          "properties": {
            "input": { "type": "boolean", "default": false },
            "pullup": { "type": "boolean", "default": false },
            "output": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "default": {}
        },
        "inverted": { "type": "boolean", "default": false }
      },
      "type": ["object", "null"],
      "required_": ["number"]
    }
  },
  "properties": {
    "esphome": { "$ref": "#/definitions/esphome" },
    "binary_sensor": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "apds9960" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "direction": { "enum": ["UP", "DOWN", "LEFT", "RIGHT"] },
                    "device_class": {
                      "enum": [
                        "",
                        "battery",
                        "battery_charging",
                        "cold",
                        "connectivity",
                        "door",
                        "garage_door",
                        "gas",
                        "heat",
                        "light",
                        "lock",
                        "moisture",
                        "motion",
                        "moving",
                        "occupancy",
                        "opening",
                        "plug",
                        "power",
                        "presence",
                        "problem",
                        "safety",
                        "smoke",
                        "sound",
                        "update",
                        "vibration",
                        "window"
                      ]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["direction"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "as3935" } } },
            "then": {
              "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ble_presence" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "service_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "ibeacon_major": { "type": "number" },
                    "ibeacon_minor": { "type": "number" },
                    "ibeacon_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "binary_sensors": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                      }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "binary_sensors"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "daly_bms" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "charging_mos_enabled": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "discharging_mos_enabled": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "esp32_touch" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "threshold": { "type": "number" },
                    "wakeup_threshold": { "type": "number", "default": 0 }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin", "threshold"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "fingerprint_grow" } }
            },
            "then": {
              "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
            }
          },
          {
            "if": { "properties": { "platform": { "const": "gpio" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "homeassistant" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "entity_id": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "attribute": { "type": "string" }
                  },
                  "type": ["object", "null"],
                  "required_": ["entity_id"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "number" },
                    "register_type": {
                      "enum": ["coil", "discrete_input", "holding", "read"]
                    },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "bitmask": { "type": "string", "default": "1" },
                    "skip_updates": { "type": "number", "default": 0 },
                    "force_new_range": { "type": "boolean", "default": false },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["address", "register_type"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mpr121" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "channel": { "type": "number" },
                    "touch_threshold": { "type": "number" },
                    "release_threshold": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "nextion" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "page_id": { "type": "number" },
                    "component_id": { "type": "number" },
                    "background_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "foreground_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "visible": { "type": "boolean", "default": true },
                    "component_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "variable_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pipsolar" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "add_sbu_priority_version": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "configuration_status": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "scc_firmware_version": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "load_status": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "battery_voltage_to_steady_while_charging": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "charging_status": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "scc_charging_status": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "ac_charging_status": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "charging_to_floating_mode": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "switch_on": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "dustproof_installed": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "silence_buzzer_open_buzzer": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "overload_bypass_function": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "lcd_escape_to_default": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "overload_restart_function": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "over_temperature_restart_function": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "backlight_on": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "alarm_on_when_primary_source_interrupt": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_code_record": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "power_saving": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warnings_present": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "faults_present": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_power_loss": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_inverter_fault": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_bus_over": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_bus_under": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_bus_soft_fail": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_line_fail": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_opvshort": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_inverter_voltage_too_low": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_inverter_voltage_too_high": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_over_temperature": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_fan_lock": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_voltage_high": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_low_alarm": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_under_shutdown": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_derating": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_over_load": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_eeprom_failed": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_inverter_over_current": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_inverter_soft_failed": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_self_test_failed": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_op_dc_voltage_over": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_battery_open": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_current_sensor_failed": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_battery_short": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_power_limit": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_pv_voltage_high": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_mppt_overload": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_mppt_overload": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_too_low_to_charge": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_dc_dc_over_current": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "fault_code": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warnung_low_pv_energy": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_high_ac_input_during_bus_soft_start": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    },
                    "warning_battery_equalization": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pn532" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "uid": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["uid"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rc522" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "uid": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["uid"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rc522_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "uid": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["uid"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rdm6300" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": { "uid": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["uid"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "remote_receiver" } }
            },
            "then": {
              "$ref": "#/definitions/remote_base.BINARY_SENSOR_REGISTRY"
            }
          },
          {
            "if": { "properties": { "platform": { "const": "status" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sx1509" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "row": { "type": "number" },
                    "col": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["row", "col"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ttp229_bsf" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ttp229_lsf" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": { "sensor_datapoint": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["sensor_datapoint"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "xiaomi_cgpr1" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "device_class": {
                      "enum": [
                        "",
                        "battery",
                        "battery_charging",
                        "cold",
                        "connectivity",
                        "door",
                        "garage_door",
                        "gas",
                        "heat",
                        "light",
                        "lock",
                        "moisture",
                        "motion",
                        "moving",
                        "occupancy",
                        "opening",
                        "plug",
                        "power",
                        "presence",
                        "problem",
                        "safety",
                        "smoke",
                        "sound",
                        "update",
                        "vibration",
                        "window"
                      ]
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "idle_time": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["bindkey", "mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_mjyd02yla" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "device_class": {
                      "enum": [
                        "",
                        "battery",
                        "battery_charging",
                        "cold",
                        "connectivity",
                        "door",
                        "garage_door",
                        "gas",
                        "heat",
                        "light",
                        "lock",
                        "moisture",
                        "motion",
                        "moving",
                        "occupancy",
                        "opening",
                        "plug",
                        "power",
                        "presence",
                        "problem",
                        "safety",
                        "smoke",
                        "sound",
                        "update",
                        "vibration",
                        "window"
                      ]
                    },
                    "idle_time": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "light": {
                      "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address", "bindkey"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_mue4094rt" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "device_class": {
                      "enum": [
                        "",
                        "battery",
                        "battery_charging",
                        "cold",
                        "connectivity",
                        "door",
                        "garage_door",
                        "gas",
                        "heat",
                        "light",
                        "lock",
                        "moisture",
                        "motion",
                        "moving",
                        "occupancy",
                        "opening",
                        "plug",
                        "power",
                        "presence",
                        "problem",
                        "safety",
                        "smoke",
                        "sound",
                        "update",
                        "vibration",
                        "window"
                      ]
                    },
                    "timeout": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "5s"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_wx08zm" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "tablet": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "xpt2046" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/binary_sensor.BINARY_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "x_min": { "type": "number" },
                    "x_max": { "type": "number" },
                    "y_min": { "type": "number" },
                    "y_max": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["x_min", "x_max", "y_min", "y_max"]
                }
              ]
            }
          }
        ]
      }
    },
    "canbus": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/canbus.CANBUS_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "mcp2515" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/canbus.CANBUS_SCHEMA" },
                {
                  "properties": {
                    "clock": { "enum": ["8MHZ", "16MHZ", "20MHZ"] },
                    "mode": { "enum": ["NORMAL", "LOOPBACK", "LISTENONLY"] }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          }
        ]
      }
    },
    "climate": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "anova" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "unit_of_measurement": { "enum": ["f", "c"] }
                  },
                  "type": ["object", "null"],
                  "required_": ["unit_of_measurement"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ballu" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bang_bang" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "default_target_temperature_low": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "default_target_temperature_high": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "idle_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "cool_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "heat_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "away_config": {
                      "$ref": "#/definitions/climate-bang_bang-away_config"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "default_target_temperature_low",
                    "default_target_temperature_high",
                    "idle_action"
                  ]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "climate_ir_lg" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true },
                    "header_high": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "8000us"
                    },
                    "header_low": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "4000us"
                    },
                    "bit_high": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "600us"
                    },
                    "bit_one_low": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "1600us"
                    },
                    "bit_zero_low": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "550us"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "coolix" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "climates": {
                  "anyOf": [
                    { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/climate.CLIMATE_SCHEMA"
                      }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "climates"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "daikin" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "fujitsu_general" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "heatpumpir" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true },
                    "protocol": {
                      "enum": [
                        "aux",
                        "ballu",
                        "carrier_mca",
                        "carrier_nqv",
                        "daikin_arc417",
                        "daikin_arc480",
                        "daikin",
                        "fuego",
                        "fujitsu_awyz",
                        "gree",
                        "greeya",
                        "greeyan",
                        "hisense_aud",
                        "hitachi",
                        "hyundai",
                        "ivt",
                        "midea",
                        "mitsubishi_fa",
                        "mitsubishi_fd",
                        "mitsubishi_fe",
                        "mitsubishi_heavy_fdtc",
                        "mitsubishi_heavy_zj",
                        "mitsubishi_heavy_zm",
                        "mitsubishi_heavy_zmp",
                        "mitsubishi_heavy_kj",
                        "mitsubishi_msc",
                        "mitsubishi_msy",
                        "mitsubishi_sez",
                        "panasonic_ckp",
                        "panasonic_dke",
                        "panasonic_jke",
                        "panasonic_lke",
                        "panasonic_nke",
                        "samsung_aqv",
                        "samsung_fjm",
                        "sharp",
                        "toshiba_daiseikai",
                        "toshiba"
                      ]
                    },
                    "horizontal_default": {
                      "enum": [
                        "auto",
                        "middle",
                        "left",
                        "mleft",
                        "mright",
                        "right"
                      ]
                    },
                    "vertical_default": {
                      "enum": ["auto", "up", "mup", "middle", "mdown", "down"]
                    },
                    "min_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "max_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "hitachi_ac344" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "hitachi_ac424" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "midea" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "period": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "1s"
                    },
                    "timeout": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "2s"
                    },
                    "num_attempts": { "type": "number", "default": 3 },
                    "beeper": { "type": "boolean", "default": false },
                    "autoconf": { "type": "boolean", "default": true },
                    "supported_modes": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/climate-midea-supported_modes"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/climate-midea-supported_modes"
                          }
                        }
                      ]
                    },
                    "supported_swing_modes": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/climate-midea-supported_swing_modes"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/climate-midea-supported_swing_modes"
                          }
                        }
                      ]
                    },
                    "supported_presets": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/climate-midea-supported_presets"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/climate-midea-supported_presets"
                          }
                        }
                      ]
                    },
                    "custom_presets": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/climate-midea-custom_presets"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/climate-midea-custom_presets"
                          }
                        }
                      ]
                    },
                    "custom_fan_modes": {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/climate-midea-custom_fan_modes"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/climate-midea-custom_fan_modes"
                          }
                        }
                      ]
                    },
                    "outdoor_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_usage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity_setpoint": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mitsubishi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pid" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "default_target_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "control_parameters": {
                      "$ref": "#/definitions/climate-pid-control_parameters"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "default_target_temperature",
                    "control_parameters"
                  ]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tcl112" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "thermostat" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "idle_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "cool_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "supplemental_cooling_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "dry_action": { "$ref": "#/definitions/simple_automation" },
                    "fan_only_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "heat_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "supplemental_heating_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "auto_mode": { "$ref": "#/definitions/simple_automation" },
                    "cool_mode": { "$ref": "#/definitions/simple_automation" },
                    "dry_mode": { "$ref": "#/definitions/simple_automation" },
                    "fan_only_mode": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "heat_mode": { "$ref": "#/definitions/simple_automation" },
                    "off_mode": { "$ref": "#/definitions/simple_automation" },
                    "fan_mode_on_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_off_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_auto_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_low_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_medium_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_high_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_middle_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_focus_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "fan_mode_diffuse_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "swing_both_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "swing_horizontal_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "swing_off_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "swing_vertical_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "target_temperature_change_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "default_mode": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "OFF"
                    },
                    "default_target_temperature_high": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "default_target_temperature_low": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "set_point_minimum_differential": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.5
                    },
                    "cool_deadband": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.5
                    },
                    "cool_overrun": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.5
                    },
                    "heat_deadband": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.5
                    },
                    "heat_overrun": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.5
                    },
                    "max_cooling_run_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "max_heating_run_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_cooling_off_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_cooling_run_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_fan_mode_switching_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_fanning_off_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_fanning_run_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_heating_off_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_heating_run_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "min_idle_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "supplemental_cooling_delta": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "supplemental_heating_delta": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "fan_only_action_uses_fan_mode_timer": {
                      "type": "boolean",
                      "default": false
                    },
                    "fan_only_cooling": { "type": "boolean", "default": false },
                    "fan_with_cooling": { "type": "boolean", "default": false },
                    "fan_with_heating": { "type": "boolean", "default": false },
                    "startup_delay": { "type": "boolean", "default": false },
                    "away_config": {
                      "$ref": "#/definitions/climate-thermostat-away_config"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["idle_action", "min_idle_time"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "toshiba" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true },
                    "model": {
                      "enum": [
                        "GENERIC",
                        "RAC-PT1411HWRU-C",
                        "RAC-PT1411HWRU-F"
                      ]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_heat": { "type": "boolean", "default": true },
                    "supports_cool": { "type": "boolean", "default": false },
                    "switch_datapoint": { "type": "number" },
                    "active_state_datapoint": { "type": "number" },
                    "active_state_heating_value": {
                      "type": "number",
                      "default": 1
                    },
                    "active_state_cooling_value": { "type": "number" },
                    "heating_state_pin": {
                      "$ref": "#/definitions/PIN.INPUT_INTERNAL"
                    },
                    "cooling_state_pin": {
                      "$ref": "#/definitions/PIN.INPUT_INTERNAL"
                    },
                    "target_temperature_datapoint": { "type": "number" },
                    "current_temperature_datapoint": { "type": "number" },
                    "temperature_multiplier": { "type": "number" },
                    "current_temperature_multiplier": { "type": "number" },
                    "target_temperature_multiplier": { "type": "number" },
                    "eco_datapoint": { "type": "number" },
                    "eco_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "whirlpool" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true },
                    "model": { "enum": ["DG11J1-3A", "DG11J1-91"] }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "yashima" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/climate.CLIMATE_SCHEMA" },
                {
                  "properties": {
                    "supports_cool": { "type": "boolean", "default": true },
                    "supports_heat": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "cover": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/cover.COVER_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "am43" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "pin": { "type": "number", "default": 8888 },
                    "invert_position": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "current_based" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "stop_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_moving_current_threshold": { "type": "number" },
                    "open_obstacle_current_threshold": { "type": "number" },
                    "open_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "close_moving_current_threshold": { "type": "number" },
                    "close_obstacle_current_threshold": { "type": "number" },
                    "close_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "close_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "obstacle_rollback": { "type": "string", "default": "10%" },
                    "max_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "malfunction_detection": {
                      "type": "boolean",
                      "default": true
                    },
                    "malfunction_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "start_sensing_delay": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "500ms"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "stop_action",
                    "open_moving_current_threshold",
                    "open_action",
                    "open_duration",
                    "close_moving_current_threshold",
                    "close_action",
                    "close_duration"
                  ]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "covers": {
                  "anyOf": [
                    { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/definitions/cover.COVER_SCHEMA" }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "covers"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "endstop" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "stop_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "close_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "close_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "max_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "stop_action",
                    "open_action",
                    "open_duration",
                    "close_action",
                    "close_duration"
                  ]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "optimistic": { "type": "boolean", "default": false },
                    "assumed_state": { "type": "boolean", "default": false },
                    "has_position": { "type": "boolean", "default": false },
                    "open_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "close_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "stop_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "tilt_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "tilt_lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "position_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "restore_mode": {
                      "enum": ["NO_RESTORE", "RESTORE", "RESTORE_AND_CALL"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "time_based" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "stop_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "open_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "close_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "close_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "has_built_in_endstop": {
                      "type": "boolean",
                      "default": false
                    },
                    "assumed_state": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "stop_action",
                    "open_action",
                    "open_duration",
                    "close_action",
                    "close_duration"
                  ]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/cover.COVER_SCHEMA" },
                {
                  "properties": {
                    "position_datapoint": { "type": "number" },
                    "min_value": { "type": "number", "default": 0 },
                    "max_value": { "type": "number", "default": 100 },
                    "invert_position": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"],
                  "required_": ["position_datapoint"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "display": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": {
              "properties": { "platform": { "const": "addressable_light" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "width": { "type": "number" },
                    "height": { "type": "number" },
                    "update_interval": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "16ms"
                    },
                    "pixel_mapper": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["width", "height"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ili9341" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": { "enum": ["M5STACK", "TFT_2.4"] },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "led_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model", "dc_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "inkplate6" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "greyscale": { "type": "boolean", "default": false },
                    "partial_updating": { "type": "boolean", "default": true },
                    "full_update_every": { "type": "number", "default": 10 },
                    "ckv_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "gmod_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "gpio0_enable_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "oe_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "powerup_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "sph_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "spv_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "vcom_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "wakeup_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "cl_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "le_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "display_data_0_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_1_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_2_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_3_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_4_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_5_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_6_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "display_data_7_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "address": { "type": "string", "default": "72" }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "ckv_pin",
                    "gmod_pin",
                    "gpio0_enable_pin",
                    "oe_pin",
                    "powerup_pin",
                    "sph_pin",
                    "spv_pin",
                    "vcom_pin",
                    "wakeup_pin"
                  ]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "lcd_gpio" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "dimensions": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "data_pins": {
                      "type": "array",
                      "items": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                    },
                    "enable_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "rs_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "rw_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["dimensions"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "lcd_pcf8574" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "dimensions": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "address": { "type": "string", "default": "63" }
                  },
                  "type": ["object", "null"],
                  "required_": ["dimensions"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max7219" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "num_chips": { "type": "number", "default": 1 },
                    "intensity": { "type": "number", "default": 15 },
                    "reverse_enable": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max7219digit" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "num_chips": { "type": "number", "default": 4 },
                    "intensity": { "type": "number", "default": 15 },
                    "rotate_chip": { "enum": ["0", "90", "180", "270"] },
                    "scroll_mode": { "enum": ["CONTINUOUS", "STOP"] },
                    "scroll_enable": { "type": "boolean", "default": true },
                    "scroll_speed": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "250ms"
                    },
                    "scroll_delay": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "1000ms"
                    },
                    "scroll_dwell": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "1000ms"
                    },
                    "reverse_enable": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "nextion" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "tft_url": { "type": "string" },
                    "brightness": { "type": "string", "default": "1.0" },
                    "on_setup": { "$ref": "#/definitions/simple_automation" },
                    "on_sleep": { "$ref": "#/definitions/simple_automation" },
                    "on_wake": { "$ref": "#/definitions/simple_automation" },
                    "touch_sleep_timeout": { "type": "number" },
                    "wake_up_page": { "type": "number" },
                    "auto_wake_on_touch": { "type": "boolean", "default": true }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pcd8544" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "cs_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "contrast": { "type": "number", "default": 127 }
                  },
                  "type": ["object", "null"],
                  "required_": ["dc_pin", "reset_pin", "cs_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1306_i2c" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": {
                      "enum": [
                        "SSD1306_128X32",
                        "SSD1306_128X64",
                        "SSD1306_96X16",
                        "SSD1306_64X48",
                        "SH1106_128X32",
                        "SH1106_128X64",
                        "SH1106_96X16",
                        "SH1106_64X48",
                        "SSD1305_128X32",
                        "SSD1305_128X64"
                      ]
                    },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "contrast": { "type": "string", "default": "1.0" },
                    "external_vcc": { "type": "boolean" },
                    "flip_x": { "type": "boolean", "default": true },
                    "flip_y": { "type": "boolean", "default": true },
                    "offset_x": { "type": "number", "default": 0 },
                    "offset_y": { "type": "number", "default": 0 },
                    "invert": { "type": "boolean", "default": false },
                    "address": { "type": "string", "default": "60" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1306_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": {
                      "enum": [
                        "SSD1306_128X32",
                        "SSD1306_128X64",
                        "SSD1306_96X16",
                        "SSD1306_64X48",
                        "SH1106_128X32",
                        "SH1106_128X64",
                        "SH1106_96X16",
                        "SH1106_64X48",
                        "SSD1305_128X32",
                        "SSD1305_128X64"
                      ]
                    },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "contrast": { "type": "string", "default": "1.0" },
                    "external_vcc": { "type": "boolean" },
                    "flip_x": { "type": "boolean", "default": true },
                    "flip_y": { "type": "boolean", "default": true },
                    "offset_x": { "type": "number", "default": 0 },
                    "offset_y": { "type": "number", "default": 0 },
                    "invert": { "type": "boolean", "default": false },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1322_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": { "enum": ["SSD1322_256X64"] },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "external_vcc": { "type": "boolean" },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1325_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": {
                      "enum": [
                        "SSD1325_128X32",
                        "SSD1325_128X64",
                        "SSD1325_96X16",
                        "SSD1325_64X48",
                        "SSD1327_128X128"
                      ]
                    },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "external_vcc": { "type": "boolean" },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1327_i2c" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": { "enum": ["SSD1327_128X128"] },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "address": { "type": "string", "default": "61" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1327_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": { "enum": ["SSD1327_128X128"] },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1331_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ssd1351_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": { "enum": ["SSD1351_128X96", "SSD1351_128X128"] },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "st7735" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "model": {
                      "enum": [
                        "INITR_GREENTAB",
                        "INITR_REDTAB",
                        "INITR_BLACKTAB",
                        "INITR_MINI160X80",
                        "INITR_18BLACKTAB",
                        "INITR_18REDTAB"
                      ]
                    },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "device_width": { "type": "number" },
                    "device_height": { "type": "number" },
                    "col_start": { "type": "number" },
                    "row_start": { "type": "number" },
                    "eight_bit_color": { "type": "boolean", "default": false },
                    "use_bgr": { "type": "boolean", "default": false },
                    "invert_colors": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"],
                  "required_": ["model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "st7789v" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "cs_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "backlight_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "brightness": { "type": "string", "default": "1.0" }
                  },
                  "type": ["object", "null"],
                  "required_": ["reset_pin", "dc_pin", "cs_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "st7920" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "width": { "type": "number" },
                    "height": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["width", "height"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tm1637" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.BASIC_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "intensity": {
                      "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
                    },
                    "clk_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "dio_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["clk_pin", "dio_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "waveshare_epaper" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/display.FULL_DISPLAY_SCHEMA" },
                {
                  "properties": {
                    "dc_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "model": {
                      "enum": [
                        "1.54in",
                        "1.54inv2",
                        "2.13in",
                        "2.13in-ttgo",
                        "2.13in-ttgo-b1",
                        "2.13in-ttgo-b73",
                        "2.13in-ttgo-b74",
                        "2.90in",
                        "2.90inv2",
                        "2.70in",
                        "2.90in-b",
                        "4.20in",
                        "4.20in-bv2",
                        "5.83in",
                        "7.50in",
                        "7.50in-bc",
                        "7.50inv2",
                        "2.13in-ttgo-dke"
                      ]
                    },
                    "reset_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "busy_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "full_update_every": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["dc_pin", "model"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          }
        ]
      }
    },
    "fan": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/fan.FAN_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "binary" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/fan.FAN_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hbridge" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/fan.FAN_SCHEMA" },
                {
                  "properties": {
                    "decay_mode": { "enum": ["SLOW", "FAST"] },
                    "speed_count": { "type": "number", "default": 100 }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "speed" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/fan.FAN_SCHEMA" },
                {
                  "properties": {
                    "speed_count": { "type": "number", "default": 100 }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/fan.FAN_SCHEMA" },
                {
                  "properties": {
                    "oscillation_datapoint": { "type": "number" },
                    "speed_datapoint": { "type": "number" },
                    "switch_datapoint": { "type": "number" },
                    "direction_datapoint": { "type": "number" },
                    "speed_count": { "type": "number", "default": 3 }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "light": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/light.LIGHT_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "binary" } } },
            "then": { "$ref": "#/definitions/light.BINARY_LIGHT_SCHEMA" }
          },
          {
            "if": {
              "properties": { "platform": { "const": "color_temperature" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "cold_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "warm_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "cold_white_color_temperature",
                    "warm_white_color_temperature"
                  ]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "lights": {
                  "anyOf": [
                    { "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA" },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA"
                      }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "lights"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "cwww" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "cold_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "warm_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "constant_brightness": {
                      "type": "boolean",
                      "default": false
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "fastled_clockless" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "num_leds": { "type": "number" },
                    "rgb_order": {
                      "enum": ["RGB", "RBG", "GRB", "GBR", "BRG", "BGR"]
                    },
                    "max_refresh_rate": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "chipset": {
                      "enum": [
                        "NEOPIXEL",
                        "TM1829",
                        "TM1809",
                        "TM1804",
                        "TM1803",
                        "UCS1903",
                        "UCS1903B",
                        "UCS1904",
                        "UCS2903",
                        "WS2812",
                        "WS2852",
                        "WS2812B",
                        "SK6812",
                        "SK6822",
                        "APA106",
                        "PL9823",
                        "WS2811",
                        "WS2813",
                        "APA104",
                        "WS2811_400",
                        "GW6205",
                        "GW6205_400",
                        "LPD1886",
                        "LPD1886_8BIT",
                        "SM16703"
                      ]
                    },
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["num_leds"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "fastled_spi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "num_leds": { "type": "number" },
                    "rgb_order": {
                      "enum": ["RGB", "RBG", "GRB", "GBR", "BRG", "BGR"]
                    },
                    "max_refresh_rate": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    },
                    "chipset": {
                      "enum": [
                        "LPD8806",
                        "WS2801",
                        "WS2803",
                        "SM16716",
                        "P9813",
                        "APA102",
                        "SK9822",
                        "DOTSTAR"
                      ]
                    },
                    "data_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "clock_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "data_rate": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["num_leds"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hbridge" } } },
            "then": {
              "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA"
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "monochromatic" } }
            },
            "then": {
              "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA"
            }
          },
          {
            "if": { "properties": { "platform": { "const": "neopixelbus" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "type": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "GRB"
                    },
                    "variant": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "800KBPS"
                    },
                    "method": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "invert": { "type": "boolean", "default": "no" },
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "clock_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "data_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "num_leds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["num_leds"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "partition" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.ADDRESSABLE_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "segments": {
                      "anyOf": [
                        {
                          "properties": {
                            "from": { "type": "number" },
                            "to": { "type": "number" },
                            "reversed": { "type": "boolean", "default": false }
                          },
                          "type": ["object", "null"],
                          "required_": ["from", "to"],
                          "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA"
                        },
                        {
                          "type": "array",
                          "items": {
                            "properties": {
                              "from": { "type": "number" },
                              "to": { "type": "number" },
                              "reversed": {
                                "type": "boolean",
                                "default": false
                              }
                            },
                            "type": ["object", "null"],
                            "required_": ["from", "to"],
                            "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA"
                          }
                        }
                      ]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["segments"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rgb" } } },
            "then": {
              "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA"
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rgbct" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "cold_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "warm_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "color_interlock": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "cold_white_color_temperature",
                    "warm_white_color_temperature"
                  ]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rgbw" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "color_interlock": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "rgbww" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "cold_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "warm_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "constant_brightness": {
                      "type": "boolean",
                      "default": false
                    },
                    "color_interlock": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "status_led" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BINARY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/light.BRIGHTNESS_ONLY_LIGHT_SCHEMA" },
                {
                  "properties": {
                    "dimmer_datapoint": { "type": "number" },
                    "min_value_datapoint": { "type": "number" },
                    "switch_datapoint": { "type": "number" },
                    "rgb_datapoint": { "type": "number" },
                    "hsv_datapoint": { "type": "number" },
                    "color_interlock": { "type": "boolean", "default": false },
                    "color_temperature_datapoint": { "type": "number" },
                    "color_temperature_invert": {
                      "type": "boolean",
                      "default": false
                    },
                    "min_value": { "type": "number" },
                    "max_value": { "type": "number" },
                    "color_temperature_max_value": { "type": "number" },
                    "cold_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "warm_white_color_temperature": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "gamma_correct": { "type": "number", "default": 1.0 },
                    "default_transition_length": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "0s"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "number": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/number.NUMBER_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/number.NUMBER_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "number" },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "bitmask": { "type": "string", "default": "4294967295" },
                    "value_type": {
                      "enum": [
                        "RAW",
                        "U_WORD",
                        "S_WORD",
                        "U_DWORD",
                        "U_DWORD_R",
                        "S_DWORD",
                        "S_DWORD_R",
                        "U_QWORD",
                        "U_QWORDU_R",
                        "S_QWORD",
                        "U_QWORD_R",
                        "FP32",
                        "FP32_R"
                      ]
                    },
                    "register_count": { "type": "number", "default": 0 },
                    "skip_updates": { "type": "number", "default": 0 },
                    "force_new_range": { "type": "boolean", "default": false },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "write_lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "max_value": { "type": "number", "default": 16777215.0 },
                    "min_value": { "type": "number", "default": -16777215.0 },
                    "step": { "type": "number", "default": 1 },
                    "multiply": { "type": "number", "default": 1.0 }
                  },
                  "type": ["object", "null"],
                  "required_": ["address"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/number.NUMBER_SCHEMA" },
                {
                  "properties": {
                    "max_value": { "type": "number" },
                    "min_value": { "type": "number" },
                    "step": { "type": "number" },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "optimistic": { "type": "boolean", "default": false },
                    "set_action": { "$ref": "#/definitions/simple_automation" },
                    "initial_value": { "type": "number" },
                    "restore_value": { "type": "boolean" }
                  },
                  "type": ["object", "null"],
                  "required_": ["max_value", "min_value", "step"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          }
        ]
      }
    },
    "output": {
      "type": "array",
      "items": {
        "allOf": [
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "ac_dimmer" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "gate_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "zero_cross_pin": {
                      "$ref": "#/definitions/PIN.INPUT_INTERNAL"
                    },
                    "init_with_half_cycle": {
                      "type": "boolean",
                      "default": true
                    },
                    "method": {
                      "enum": ["LEADING_PULSE", "LEADING", "TRAILING"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["gate_pin", "zero_cross_pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "allOf": [
                {
                  "type": "object",
                  "properties": { "type": { "type": "string" } }
                },
                {
                  "if": { "properties": { "type": { "const": "binary" } } },
                  "then": { "$ref": "#/definitions/output-custom-binary" }
                },
                {
                  "if": { "properties": { "type": { "const": "float" } } },
                  "then": { "$ref": "#/definitions/output-custom-float" }
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "esp32_dac" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "esp8266_pwm" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "frequency": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "1kHz"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "gpio" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.BINARY_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ledc" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "frequency": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "1kHz"
                    },
                    "channel": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mcp4725" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "96" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "number" },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "value_type": {
                      "enum": [
                        "RAW",
                        "U_WORD",
                        "S_WORD",
                        "U_DWORD",
                        "U_DWORD_R",
                        "S_DWORD",
                        "S_DWORD_R",
                        "U_QWORD",
                        "U_QWORDU_R",
                        "S_QWORD",
                        "U_QWORD_R",
                        "FP32",
                        "FP32_R"
                      ]
                    },
                    "write_lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "multiply": { "type": "number", "default": 1.0 }
                  },
                  "type": ["object", "null"],
                  "required_": ["address"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "my9231" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pca9685" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pipsolar" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "battery_recharge_voltage": {
                      "$ref": "#/definitions/output-pipsolar-battery_recharge_voltage"
                    },
                    "battery_under_voltage": {
                      "$ref": "#/definitions/output-pipsolar-battery_under_voltage"
                    },
                    "battery_float_voltage": {
                      "$ref": "#/definitions/output-pipsolar-battery_float_voltage"
                    },
                    "battery_type": {
                      "$ref": "#/definitions/output-pipsolar-battery_type"
                    },
                    "current_max_ac_charging_current": {
                      "$ref": "#/definitions/output-pipsolar-current_max_ac_charging_current"
                    },
                    "current_max_charging_current": {
                      "$ref": "#/definitions/output-pipsolar-current_max_charging_current"
                    },
                    "output_source_priority": {
                      "$ref": "#/definitions/output-pipsolar-output_source_priority"
                    },
                    "charger_source_priority": {
                      "$ref": "#/definitions/output-pipsolar-charger_source_priority"
                    },
                    "battery_redischarge_voltage": {
                      "$ref": "#/definitions/output-pipsolar-battery_redischarge_voltage"
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "slow_pwm" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "period": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin", "period"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sm16716" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sm2135" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sx1509" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "pin": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                {
                  "type": "object",
                  "properties": { "type": { "type": "string" } }
                },
                {
                  "if": { "properties": { "type": { "const": "binary" } } },
                  "then": { "$ref": "#/definitions/output-template-binary" }
                },
                {
                  "if": { "properties": { "type": { "const": "float" } } },
                  "then": { "$ref": "#/definitions/output-template-float" }
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tlc59208f" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tlc5947" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/output.FLOAT_OUTPUT_SCHEMA" },
                {
                  "properties": { "channel": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["channel"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "select": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/select.SELECT_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/select.SELECT_SCHEMA" },
                {
                  "properties": {
                    "options": {
                      "anyOf": [
                        { "$ref": "#/definitions/esphome-libraries" },
                        {
                          "type": "array",
                          "items": { "$ref": "#/definitions/esphome-libraries" }
                        }
                      ]
                    },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "optimistic": { "type": "boolean", "default": false },
                    "set_action": { "$ref": "#/definitions/simple_automation" },
                    "initial_option": { "type": "string" },
                    "restore_value": { "type": "boolean" }
                  },
                  "type": ["object", "null"],
                  "required_": ["options"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          }
        ]
      }
    },
    "sensor": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "adc" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "attenuation": {
                      "properties": {},
                      "type": ["object", "null"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ade7953" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "irq_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current_a": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_b": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "active_power_a": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "active_power_b": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "56" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ads1115" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "multiplexer": {
                      "enum": [
                        "A0_A1",
                        "A0_A3",
                        "A1_A3",
                        "A2_A3",
                        "A0_GND",
                        "A1_GND",
                        "A2_GND",
                        "A3_GND"
                      ]
                    },
                    "gain": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["multiplexer", "gain"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "aht10" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "56" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "airthings_wave_mini" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "tvoc": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "airthings_wave_plus" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "radon": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "radon_long_term": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "tvoc": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "am2320" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "92" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "am43" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "apds9960" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "type": {
                      "enum": ["CLEAR", "RED", "GREEN", "BLUE", "PROXIMITY"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["type"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "as3935" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "distance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "lightning_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "atc_mithermometer" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "atm90e32" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "phase_a": {
                      "$ref": "#/definitions/sensor-atm90e32-phase_a"
                    },
                    "phase_b": {
                      "$ref": "#/definitions/sensor-atm90e32-phase_a"
                    },
                    "phase_c": {
                      "$ref": "#/definitions/sensor-atm90e32-phase_a"
                    },
                    "frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "chip_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "line_frequency": { "enum": ["50HZ", "60HZ"] },
                    "current_phases": { "enum": ["2", "3"] },
                    "gain_pga": { "enum": ["1X", "2X", "4X"] }
                  },
                  "type": ["object", "null"],
                  "required_": ["line_frequency"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bh1750" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "resolution": { "enum": [4.0, 1.0, 0.5] },
                    "measurement_duration": { "type": "number", "default": 69 },
                    "address": { "type": "string", "default": "35" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "binary_sensor_map" } }
            },
            "then": {
              "allOf": [
                {
                  "type": "object",
                  "properties": { "type": { "type": "string" } }
                },
                {
                  "if": { "properties": { "type": { "const": "group" } } },
                  "then": {
                    "$ref": "#/definitions/sensor-binary_sensor_map-group"
                  }
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ble_client" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "service_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "characteristic_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "descriptor_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "notify": { "type": "boolean", "default": false },
                    "on_notify": { "$ref": "#/definitions/simple_automation" }
                  },
                  "type": ["object", "null"],
                  "required_": ["service_uuid", "characteristic_uuid"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ble_rssi" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "service_uuid": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bme280" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor-bme280-temperature"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor-bme280-pressure"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor-bme280-humidity"
                    },
                    "iir_filter": { "enum": ["OFF", "2X", "4X", "8X", "16X"] },
                    "address": { "type": "string", "default": "119" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bme680" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor-bme680-temperature"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor-bme680-pressure"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor-bme680-humidity"
                    },
                    "gas_resistance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "iir_filter": {
                      "enum": [
                        "OFF",
                        "1X",
                        "3X",
                        "7X",
                        "15X",
                        "31X",
                        "63X",
                        "127X"
                      ]
                    },
                    "heater": {
                      "properties": {
                        "temperature": { "type": "number", "default": 320 },
                        "duration": {
                          "properties": {
                            "days": { "type": "number" },
                            "hours": { "type": "number" },
                            "minutes": { "type": "number" },
                            "seconds": { "type": "number" },
                            "milliseconds": { "type": "number" },
                            "microseconds": { "type": "number" }
                          },
                          "type": ["object", "null"],
                          "default": "150ms"
                        }
                      },
                      "type": ["object", "null"]
                    },
                    "address": { "type": "string", "default": "118" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bme680_bsec" } } },
            "then": {
              "properties": {
                "temperature": {
                  "$ref": "#/definitions/sensor-bme680_bsec-temperature"
                },
                "pressure": {
                  "$ref": "#/definitions/sensor-bme680_bsec-pressure"
                },
                "humidity": {
                  "$ref": "#/definitions/sensor-bme680_bsec-humidity"
                },
                "gas_resistance": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "iaq": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                "iaq_accuracy": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "co2_equivalent": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "breath_voc_equivalent": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                }
              },
              "type": ["object", "null"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bmp085" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "119" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bmp280" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor-bmp280-temperature"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor-bmp280-pressure"
                    },
                    "iir_filter": { "enum": ["OFF", "2X", "4X", "8X", "16X"] },
                    "address": { "type": "string", "default": "119" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "b_parasite" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "moisture": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ccs811" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "eco2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "tvoc": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "version": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "baseline": { "type": "string" },
                    "address": { "type": "string", "default": "90" }
                  },
                  "type": ["object", "null"],
                  "required_": ["eco2", "tvoc"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "cs5460a" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "samples": { "type": "number", "default": 4000 },
                    "phase_offset": { "type": "number", "default": 0 },
                    "pga_gain": { "enum": ["10X", "50X"] },
                    "current_gain": { "type": "number", "default": 0.001 },
                    "voltage_gain": { "type": "number", "default": 0.001 },
                    "current_hpf": { "type": "boolean", "default": true },
                    "voltage_hpf": { "type": "boolean", "default": true },
                    "pulse_energy": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 10.0
                    },
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "cse7766" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ct_clamp" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "sample_duration": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "200ms"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "sensors": {
                  "anyOf": [
                    { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "sensors"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "dallas" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "string" },
                    "index": { "type": "number" },
                    "resolution": { "type": "number", "default": 12 }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "daly_bms" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "max_cell_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "max_cell_voltage_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "min_cell_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "min_cell_voltage_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "max_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "max_temperature_probe_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "min_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "min_temperature_probe_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "remaining_capacity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "cells_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "temperature_1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "temperature_2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "dht" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "model": {
                      "enum": [
                        "AUTO_DETECT",
                        "DHT11",
                        "DHT22",
                        "AM2302",
                        "RHT03",
                        "SI7021",
                        "DHT22_TYPE2"
                      ]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "dht12" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "92" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "dsmr" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "energy_delivered_lux": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_delivered_tariff1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_delivered_tariff2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_returned_lux": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_returned_tariff1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_returned_tariff2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "total_imported_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "total_exported_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_delivered": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_returned": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_delivered": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_returned": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_threshold": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_switch_position": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_failures": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_long_failures": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_sags_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_sags_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_sags_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_swells_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_swells_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "electricity_swells_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_delivered_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_delivered_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_delivered_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_returned_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_returned_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_returned_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_delivered_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_delivered_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_delivered_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_returned_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_returned_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power_returned_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "voltage_l1": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "voltage_l2": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "voltage_l3": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "gas_delivered": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "gas_delivered_be": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "duty_cycle" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "esp32_hall" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ezo" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": { "address": { "type": "string" } },
                  "type": ["object", "null"],
                  "required_": ["address"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "fingerprint_grow" } }
            },
            "then": {
              "properties": {
                "fingerprint_count": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "status": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                "capacity": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                "security_level": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "last_finger_id": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                },
                "last_confidence": {
                  "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                }
              },
              "type": ["object", "null"]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "havells_solar" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "phase_a": {
                      "$ref": "#/definitions/sensor-havells_solar-phase_a"
                    },
                    "phase_b": {
                      "$ref": "#/definitions/sensor-havells_solar-phase_a"
                    },
                    "phase_c": {
                      "$ref": "#/definitions/sensor-havells_solar-phase_a"
                    },
                    "pv1": { "$ref": "#/definitions/sensor-havells_solar-pv1" },
                    "pv2": { "$ref": "#/definitions/sensor-havells_solar-pv1" },
                    "frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "active_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "energy_production_day": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "total_energy_production": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "total_generation_time": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "today_generation_time": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "inverter_module_temp": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "inverter_inner_temp": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "inverter_bus_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "insulation_of_pv_n_to_ground": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "gfci_value": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "dci_of_r": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "dci_of_s": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "dci_of_t": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "1" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hdc1080" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hlw8012" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "sel_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "cf_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "cf1_pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "energy": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current_resistor": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.001
                    },
                    "voltage_divider": { "type": "number", "default": 2351 },
                    "model": { "enum": ["HLW8012", "CSE7759", "BL0937"] },
                    "change_mode_every": { "type": "number", "default": 8 },
                    "initial_mode": { "enum": ["current", "voltage"] }
                  },
                  "type": ["object", "null"],
                  "required_": ["sel_pin", "cf_pin", "cf1_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hm3301" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "pm_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "aqi": { "$ref": "#/definitions/sensor-hm3301-aqi" },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hmc5883l" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "address": { "type": "string" },
                    "oversampling": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "1x"
                    },
                    "range": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "130\u00b5T"
                    },
                    "field_strength_x": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "field_strength_y": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "field_strength_z": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "heading": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "homeassistant" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "entity_id": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "attribute": { "type": "string" }
                  },
                  "type": ["object", "null"],
                  "required_": ["entity_id"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "hrxl_maxsonar_wr" } }
            },
            "then": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
          },
          {
            "if": { "properties": { "platform": { "const": "htu21d" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"],
                  "required_": ["temperature", "humidity"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "hx711" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "dout_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "clk_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "gain": { "enum": [128, 32, 64] }
                  },
                  "type": ["object", "null"],
                  "required_": ["dout_pin", "clk_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ina219" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bus_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "shunt_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "shunt_resistance": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.1
                    },
                    "max_voltage": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 32.0
                    },
                    "max_current": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 3.2
                    },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ina226" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bus_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "shunt_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "shunt_resistance": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0.1
                    },
                    "max_current": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 3.2
                    },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ina3221" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "channel_1": {
                      "$ref": "#/definitions/sensor-ina3221-channel_1"
                    },
                    "channel_2": {
                      "$ref": "#/definitions/sensor-ina3221-channel_1"
                    },
                    "channel_3": {
                      "$ref": "#/definitions/sensor-ina3221-channel_1"
                    },
                    "address": { "type": "string", "default": "64" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "inkbird_ibsth1_mini" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "external_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "integration" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "time_unit": { "enum": ["ms", "s", "min", "h", "d"] },
                    "integration_method": {
                      "enum": ["trapezoid", "left", "right"]
                    },
                    "restore": { "type": "boolean", "default": false },
                    "min_save_interval": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "0s"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["time_unit"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ltr390" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "light": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "ambient_light": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "uv_index": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "uv": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "gain": { "enum": ["X1", "X3", "X6", "X9", "X18"] },
                    "resolution": { "enum": [20, 19, 18, 17, 16, 13] },
                    "window_correction_factor": {
                      "type": "number",
                      "default": 1.0
                    },
                    "address": { "type": "string", "default": "83" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max31855" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "reference_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max31856" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "mains_filter": { "enum": ["50HZ", "60HZ"] }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max31865" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "reference_resistance": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "rtd_nominal_resistance": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mains_filter": { "enum": ["50HZ", "60HZ"] },
                    "rtd_wires": { "type": "number", "default": 4 }
                  },
                  "type": ["object", "null"],
                  "required_": [
                    "reference_resistance",
                    "rtd_nominal_resistance"
                  ]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "max6675" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                { "$ref": "#/definitions/spi_bus" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mcp3008" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "number": { "type": "number" },
                    "reference_voltage": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "3.3V"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["number"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mcp9808" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "24" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mhz19" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "automatic_baseline_calibration": { "type": "boolean" }
                  },
                  "type": ["object", "null"],
                  "required_": ["co2"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "number" },
                    "register_type": {
                      "enum": ["coil", "discrete_input", "holding", "read"]
                    },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "bitmask": { "type": "string", "default": "4294967295" },
                    "value_type": {
                      "enum": [
                        "RAW",
                        "U_WORD",
                        "S_WORD",
                        "U_DWORD",
                        "U_DWORD_R",
                        "S_DWORD",
                        "S_DWORD_R",
                        "U_QWORD",
                        "U_QWORDU_R",
                        "S_QWORD",
                        "U_QWORD_R",
                        "FP32",
                        "FP32_R"
                      ]
                    },
                    "register_count": { "type": "number", "default": 0 },
                    "skip_updates": { "type": "number", "default": 0 },
                    "force_new_range": { "type": "boolean", "default": false },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["address", "register_type"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "mpu6050" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "accel_x": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "accel_y": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "accel_z": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "gyro_x": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "gyro_y": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "gyro_z": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "104" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "mqtt_subscribe" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "topic": { "type": "string" },
                    "qos": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["topic"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ms5611" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "119" }
                  },
                  "type": ["object", "null"],
                  "required_": ["temperature", "pressure"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "nextion" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "precision": { "type": "number", "default": 0 },
                    "wave_channel_id": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "component_id": { "type": "number" },
                    "wave_max_length": { "type": "number", "default": 255 },
                    "wave_max_value": { "type": "number", "default": 100 },
                    "waveform_send_last_value": {
                      "type": "boolean",
                      "default": true
                    },
                    "background_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "foreground_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "visible": { "type": "boolean", "default": true },
                    "component_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "variable_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "font_id": { "type": "number" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ntc" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "calibration": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["calibration"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pid" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "type": {
                      "enum": [
                        "RESULT",
                        "ERROR",
                        "PROPORTIONAL",
                        "INTEGRAL",
                        "DERIVATIVE",
                        "HEAT",
                        "COOL",
                        "KP",
                        "KI",
                        "KD"
                      ]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["type"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pipsolar" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "grid_rating_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "grid_rating_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_rating_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_rating_frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_rating_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_rating_apparent_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_rating_active_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_rating_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_recharge_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_under_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_bulk_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_float_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_type": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_max_ac_charging_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "current_max_charging_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "input_voltage_range": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "output_source_priority": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "charger_source_priority": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "parallel_max_num": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "machine_type": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "topology": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "output_mode": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_redischarge_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pv_ok_condition_for_parallel": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pv_power_balance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "grid_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "grid_frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_apparent_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "ac_output_active_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "output_load_percent": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "bus_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_charging_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_capacity_percent": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "inverter_heat_sink_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pv_input_current_for_battery": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pv_input_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage_scc": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_discharge_current": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage_offset_for_fans_on": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "eeprom_version": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pv_charging_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pm1006" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pmsa003i" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "standard_units": { "type": "boolean", "default": true },
                    "pm_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_0_3": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_0_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_5_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_10_0": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "18" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pmsx003" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "type": { "enum": ["PMSX003", "PMS5003T", "PMS5003ST"] },
                    "pm_1_0_std": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_2_5_std": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_10_0_std": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_0_3um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_0_5um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_1_0um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_2_5um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_5_0um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_10_0um": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "formaldehyde": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["type"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "pulse_counter" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "count_mode": {
                      "properties": {
                        "rising_edge": {
                          "enum": ["DISABLE", "INCREMENT", "DECREMENT"]
                        },
                        "falling_edge": {
                          "enum": ["DISABLE", "INCREMENT", "DECREMENT"]
                        }
                      },
                      "type": ["object", "null"],
                      "required_": ["rising_edge", "falling_edge"],
                      "default": {
                        "rising_edge": "INCREMENT",
                        "falling_edge": "DISABLE"
                      }
                    },
                    "internal_filter": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "13us"
                    },
                    "total": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pulse_meter" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "internal_filter": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "13us"
                    },
                    "timeout": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "5min"
                    },
                    "total": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pulse_width" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "pvvx_mithermometer" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pzem004t" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "energy": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pzemac" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "energy": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "power_factor": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "1" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pzemdc" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "address": { "type": "string", "default": "1" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "qmc5883l" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "address": { "type": "string" },
                    "range": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "200\u00b5T"
                    },
                    "oversampling": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "512x"
                    },
                    "field_strength_x": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "field_strength_y": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "field_strength_z": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "heading": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "resistance" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "configuration": { "enum": ["DOWNSTREAM", "UPSTREAM"] },
                    "resistor": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "reference_voltage": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "3.3V"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["configuration", "resistor"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "rotary_encoder" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "pin_a": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "pin_b": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "pin_reset": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "resolution": { "enum": [1, 2, 4] },
                    "min_value": { "type": "number" },
                    "max_value": { "type": "number" },
                    "on_clockwise": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "on_anticlockwise": {
                      "$ref": "#/definitions/simple_automation"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin_a", "pin_b"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ruuvitag" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pressure": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "acceleration": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "acceleration_x": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "acceleration_y": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "acceleration_z": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_voltage": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "tx_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "movement_counter": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "measurement_sequence_number": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "scd30" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "automatic_self_calibration": {
                      "type": "boolean",
                      "default": true
                    },
                    "altitude_compensation": { "type": "number" },
                    "ambient_pressure_compensation": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0
                    },
                    "temperature_offset": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "address": { "type": "string", "default": "97" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "scd4x" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "automatic_self_calibration": {
                      "type": "boolean",
                      "default": true
                    },
                    "altitude_compensation": {
                      "type": "number",
                      "default": "0m"
                    },
                    "ambient_pressure_compensation": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature_offset": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "4\u00b0C"
                    },
                    "address": { "type": "string", "default": "98" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sdm_meter" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "phase_a": {
                      "$ref": "#/definitions/sensor-sdm_meter-phase_a"
                    },
                    "phase_b": {
                      "$ref": "#/definitions/sensor-sdm_meter-phase_a"
                    },
                    "phase_c": {
                      "$ref": "#/definitions/sensor-sdm_meter-phase_a"
                    },
                    "frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "import_active_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "export_active_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "import_reactive_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "export_reactive_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "1" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sdp3x" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "33" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sds011" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "rx_only": { "type": "boolean", "default": false },
                    "update_interval": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "selec_meter" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "total_active_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "import_active_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "export_active_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "total_reactive_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "import_reactive_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "export_reactive_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "apparent_energy": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "active_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "reactive_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "apparent_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "voltage": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "current": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "power_factor": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "frequency": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "maximum_demand_active_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "maximum_demand_reactive_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "maximum_demand_apparent_power": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "1" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "senseair" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"],
                  "required_": ["co2"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sgp30" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "eco2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "tvoc": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "eco2_baseline": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "tvoc_baseline": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "store_baseline": { "type": "boolean", "default": true },
                    "baseline": {
                      "$ref": "#/definitions/sensor-sgp30-baseline"
                    },
                    "compensation": {
                      "$ref": "#/definitions/sensor-sgp30-compensation"
                    },
                    "address": { "type": "string", "default": "88" }
                  },
                  "type": ["object", "null"],
                  "required_": ["eco2", "tvoc"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sgp40" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "store_baseline": { "type": "boolean", "default": true },
                    "voc_baseline": { "type": "string" },
                    "compensation": {
                      "$ref": "#/definitions/sensor-sgp30-compensation"
                    },
                    "address": { "type": "string", "default": "89" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sht3xd" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "68" }
                  },
                  "type": ["object", "null"],
                  "required_": ["temperature", "humidity"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sht4x" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "precision": { "enum": ["High", "Med", "Low"] },
                    "heater_power": { "enum": ["High", "Med", "Low"] },
                    "heater_time": { "enum": ["Long", "Short"] },
                    "heater_max_duty": { "type": "number", "default": 0.0 },
                    "address": { "type": "string", "default": "68" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "shtcx" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "address": { "type": "string", "default": "112" }
                  },
                  "type": ["object", "null"],
                  "required_": ["temperature", "humidity"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sm300d2" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "formaldehyde": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "tvoc": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sps30" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "pm_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_4_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pm_10_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_0_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_1_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_2_5": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_4_0": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "pmc_10_0": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pm_size": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "address": { "type": "string", "default": "105" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sts3x" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "74" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sun" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "type": { "enum": ["elevation", "azimuth"] }
                  },
                  "type": ["object", "null"],
                  "required_": ["type"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "t6615" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"],
                  "required_": ["co2"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tcs34725" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "red_channel": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "green_channel": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "blue_channel": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "clear_channel": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "color_temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "integration_time": {
                      "enum": [
                        "2.4ms",
                        "24ms",
                        "50ms",
                        "101ms",
                        "120ms",
                        "154ms",
                        "180ms",
                        "199ms",
                        "240ms",
                        "300ms",
                        "360ms",
                        "401ms",
                        "420ms",
                        "480ms",
                        "499ms",
                        "540ms",
                        "600ms",
                        "614ms"
                      ]
                    },
                    "gain": { "enum": ["1X", "4X", "16X", "60X"] },
                    "glass_attenuation_factor": {
                      "type": "number",
                      "default": 1.0
                    },
                    "address": { "type": "string", "default": "41" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "teleinfo" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": { "tag_name": { "type": "string" } },
                  "type": ["object", "null"],
                  "required_": ["tag_name"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tmp102" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "72" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tmp117" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "72" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tof10120" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "82" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "total_daily_energy" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "min_save_interval": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "0s"
                    },
                    "method": { "enum": ["trapezoid", "left", "right"] }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tsl2561" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "integration_time": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "402ms"
                    },
                    "gain": { "enum": ["1X", "16X"] },
                    "is_cs_package": { "type": "boolean", "default": false },
                    "address": { "type": "string", "default": "57" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tsl2591" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "infrared": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "visible": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "full_spectrum": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "calculated_lux": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "integration_time": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "100ms"
                    },
                    "name": { "type": "string", "default": "TLS2591" },
                    "gain": {
                      "enum": [
                        "1X",
                        "LOW",
                        "25X",
                        "MED",
                        "MEDIUM",
                        "400X",
                        "HIGH",
                        "9500X",
                        "MAX",
                        "MAXIMUM"
                      ]
                    },
                    "power_save_mode": { "type": "boolean", "default": true },
                    "device_factor": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 53.0
                    },
                    "glass_attenuation_factor": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 7.7
                    },
                    "address": { "type": "string", "default": "41" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": { "sensor_datapoint": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["sensor_datapoint"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tx20" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "wind_speed": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "wind_direction_degrees": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "ultrasonic" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "trigger_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "echo_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "timeout": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "2m"
                    },
                    "pulse_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "10us"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["trigger_pin", "echo_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "uptime" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "vl53l0x" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                {
                  "properties": {
                    "signal_rate_limit": { "type": "number", "default": 0.25 },
                    "long_range": { "type": "boolean", "default": false },
                    "timeout": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "10ms"
                    },
                    "enable_pin": {
                      "$ref": "#/definitions/PIN.OUTPUT_INTERNAL"
                    },
                    "address": { "type": "string", "default": "41" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "wifi_signal" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "xiaomi_cgd1" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["bindkey", "mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "xiaomi_cgdk2" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["bindkey", "mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "xiaomi_cgg1" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_gcls002" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "moisture": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "conductivity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_hhccjcy01" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "moisture": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "illuminance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "conductivity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_hhccpot002" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "moisture": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "conductivity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_jqjcy01ym" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "formaldehyde": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_lywsd02" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_lywsd03mmc" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["bindkey", "mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_lywsdcgq" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_mhoc401" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "bindkey": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "battery_level": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["bindkey", "mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "xiaomi_miscale" } }
            },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "mac_address": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "weight": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "impedance": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["mac_address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "zyaura" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "clock_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "data_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    "co2": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" },
                    "temperature": {
                      "$ref": "#/definitions/sensor.SENSOR_SCHEMA"
                    },
                    "humidity": { "$ref": "#/definitions/sensor.SENSOR_SCHEMA" }
                  },
                  "type": ["object", "null"],
                  "required_": ["clock_pin", "data_pin"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          }
        ]
      }
    },
    "stepper": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/stepper.STEPPER_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "a4988" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/stepper.STEPPER_SCHEMA" },
                {
                  "properties": {
                    "step_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "dir_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "sleep_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
                  },
                  "type": ["object", "null"],
                  "required_": ["step_pin", "dir_pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "uln2003" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/stepper.STEPPER_SCHEMA" },
                {
                  "properties": {
                    "pin_a": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "pin_b": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "pin_c": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "pin_d": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "sleep_when_done": { "type": "boolean", "default": false },
                    "step_mode": {
                      "enum": ["FULL_STEP", "HALF_STEP", "WAVE_DRIVE"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin_a", "pin_b", "pin_c", "pin_d"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "switch": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "ble_client" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "switches": {
                  "anyOf": [
                    { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/definitions/switch.SWITCH_SCHEMA" }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "switches"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "gpio" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                {
                  "properties": {
                    "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
                    "restore_mode": {
                      "enum": [
                        "RESTORE_DEFAULT_OFF",
                        "RESTORE_DEFAULT_ON",
                        "ALWAYS_OFF",
                        "ALWAYS_ON",
                        "RESTORE_INVERTED_DEFAULT_OFF",
                        "RESTORE_INVERTED_DEFAULT_ON"
                      ]
                    },
                    "interlock": {
                      "anyOf": [
                        { "$ref": "#/definitions/switch-gpio-interlock" },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/switch-gpio-interlock"
                          }
                        }
                      ]
                    },
                    "interlock_wait_time": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"],
                      "default": "0ms"
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["pin"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                {
                  "properties": {
                    "register_type": {
                      "enum": ["coil", "discrete_input", "holding", "read"]
                    },
                    "address": { "type": "number" },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "bitmask": { "type": "string", "default": "1" },
                    "force_new_range": { "type": "boolean", "default": false },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["register_type", "address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "nextion" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "background_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "foreground_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "visible": { "type": "boolean", "default": true },
                    "component_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "variable_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "font_id": { "type": "number" },
                    "foreground_pressed_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "background_pressed_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "output" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pipsolar" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "output_source_priority_utility": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    },
                    "output_source_priority_solar": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    },
                    "output_source_priority_battery": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    },
                    "input_voltage_range": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    },
                    "pv_ok_condition_for_parallel": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    },
                    "pv_power_balance": {
                      "$ref": "#/definitions/switch-pipsolar-output_source_priority_utility"
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "restart" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "safe_mode" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "shutdown" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                {
                  "properties": {
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "optimistic": { "type": "boolean", "default": false },
                    "assumed_state": { "type": "boolean", "default": false },
                    "turn_off_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "turn_on_action": {
                      "$ref": "#/definitions/simple_automation"
                    },
                    "restore_state": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "tuya" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                {
                  "properties": { "switch_datapoint": { "type": "number" } },
                  "type": ["object", "null"],
                  "required_": ["switch_datapoint"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "uart" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/switch.SWITCH_SCHEMA" },
                {
                  "properties": {
                    "data": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "send_every": {
                      "properties": {
                        "days": { "type": "number" },
                        "hours": { "type": "number" },
                        "minutes": { "type": "number" },
                        "seconds": { "type": "number" },
                        "milliseconds": { "type": "number" },
                        "microseconds": { "type": "number" }
                      },
                      "type": ["object", "null"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["data"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          }
        ]
      }
    },
    "text_sensor": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "ble_scanner" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "bme680_bsec" } } },
            "then": {
              "properties": {
                "iaq_accuracy": {
                  "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                }
              },
              "type": ["object", "null"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "custom" } } },
            "then": {
              "properties": {
                "lambda": {
                  "type": ["null", "object", "string", "array", "number"]
                },
                "text_sensors": {
                  "anyOf": [
                    { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                      }
                    }
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["lambda", "text_sensors"]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "daly_bms" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "status": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "dsmr" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "identification": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "p1_version": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "p1_version_be": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "timestamp": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "electricity_tariff": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "electricity_failure_log": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "message_short": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "message_long": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "gas_equipment_id": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "thermal_equipment_id": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "water_equipment_id": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "sub_equipment_id": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "gas_delivered_text": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "homeassistant" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "entity_id": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "attribute": { "type": "string" }
                  },
                  "type": ["object", "null"],
                  "required_": ["entity_id"]
                }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "modbus_controller" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "register_type": {
                      "enum": ["coil", "discrete_input", "holding", "read"]
                    },
                    "address": { "type": "number" },
                    "offset": { "type": "number", "default": 0 },
                    "byte_offset": { "type": "number" },
                    "register_count": { "type": "number", "default": 0 },
                    "response_size": { "type": "number", "default": 2 },
                    "raw_encode": { "enum": ["NONE", "HEXBYTES", "COMMA"] },
                    "skip_updates": { "type": "number", "default": 0 },
                    "force_new_range": { "type": "boolean", "default": false },
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["register_type", "address"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": {
              "properties": { "platform": { "const": "mqtt_subscribe" } }
            },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "topic": { "type": "string" },
                    "qos": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": 0
                    }
                  },
                  "type": ["object", "null"],
                  "required_": ["topic"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "nextion" } } },
            "then": {
              "allOf": [
                {
                  "properties": {
                    "background_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "foreground_color": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "visible": { "type": "boolean", "default": true },
                    "component_name": {
                      "type": ["null", "object", "string", "array", "number"]
                    },
                    "font_id": { "type": "number" }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "pipsolar" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
                {
                  "properties": {
                    "device_mode": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qpigs": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qpiri": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qmod": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qflag": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qpiws": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qt": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    },
                    "last_qmn": {
                      "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "sun" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "type": { "enum": ["sunset", "sunrise"] },
                    "elevation": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": -0.83333
                    },
                    "format": { "type": "string", "default": "%X" }
                  },
                  "type": ["object", "null"],
                  "required_": ["type"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "teleinfo" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": { "tag_name": { "type": "string" } },
                  "type": ["object", "null"],
                  "required_": ["tag_name"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "template" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "lambda": {
                      "type": ["null", "object", "string", "array", "number"]
                    }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/POLLING_COMPONENT" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "version" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA" },
                {
                  "properties": {
                    "icon": {
                      "type": ["null", "object", "string", "array", "number"],
                      "default": "mdi:new-box"
                    },
                    "hide_timestamp": { "type": "boolean", "default": false }
                  },
                  "type": ["object", "null"]
                },
                { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "wifi_info" } } },
            "then": {
              "properties": {
                "ip_address": {
                  "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                },
                "scan_results": {
                  "$ref": "#/definitions/text_sensor-wifi_info-scan_results"
                },
                "ssid": {
                  "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                },
                "bssid": {
                  "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                },
                "mac_address": {
                  "$ref": "#/definitions/text_sensor.TEXT_SENSOR_SCHEMA"
                }
              },
              "type": ["object", "null"]
            }
          }
        ]
      }
    },
    "time": {
      "type": "array",
      "items": {
        "allOf": [
          { "$ref": "#/definitions/time.TIME_SCHEMA" },
          {
            "type": "object",
            "properties": { "platform": { "type": "string" } }
          },
          {
            "if": { "properties": { "platform": { "const": "ds1307" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/time.TIME_SCHEMA" },
                {
                  "properties": {
                    "address": { "type": "string", "default": "104" }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          },
          {
            "if": { "properties": { "platform": { "const": "gps" } } },
            "then": { "$ref": "#/definitions/time.TIME_SCHEMA" }
          },
          {
            "if": {
              "properties": { "platform": { "const": "homeassistant" } }
            },
            "then": { "$ref": "#/definitions/time.TIME_SCHEMA" }
          },
          {
            "if": { "properties": { "platform": { "const": "sntp" } } },
            "then": {
              "allOf": [
                { "$ref": "#/definitions/time.TIME_SCHEMA" },
                {
                  "properties": {
                    "servers": {
                      "anyOf": [
                        { "$ref": "#/definitions/time-sntp-servers" },
                        {
                          "type": "array",
                          "items": { "$ref": "#/definitions/time-sntp-servers" }
                        }
                      ]
                    }
                  },
                  "type": ["object", "null"]
                }
              ]
            }
          }
        ]
      }
    },
    "adalight": {},
    "ads1115": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/ads1115" } },
        { "$ref": "#/definitions/ads1115" }
      ]
    },
    "airthings_ble": { "properties": {}, "type": ["object", "null"] },
    "animation": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/animation" } },
        { "$ref": "#/definitions/animation" }
      ]
    },
    "apds9960": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/apds9960" } },
        { "$ref": "#/definitions/apds9960" }
      ]
    },
    "api": {
      "allOf": [
        {
          "properties": {
            "port": { "type": "number", "default": 6053 },
            "password": { "type": "string", "default": "" },
            "reboot_timeout": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "15min"
            },
            "services": { "$ref": "#/definitions/api-services" },
            "encryption": { "$ref": "#/definitions/api-encryption" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "as3935_i2c": {
      "allOf": [
        {
          "properties": {
            "irq_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "indoor": { "type": "boolean", "default": true },
            "noise_level": { "type": "number", "default": 2 },
            "watchdog_threshold": { "type": "number", "default": 2 },
            "spike_rejection": { "type": "number", "default": 2 },
            "lightning_threshold": { "enum": [1, 5, 9, 16] },
            "mask_disturber": { "type": "boolean", "default": false },
            "div_ratio": { "enum": [0, 16, 32, 64, 128] },
            "capacitance": { "type": "number", "default": 0 },
            "address": { "type": "string", "default": "3" }
          },
          "type": ["object", "null"],
          "required_": ["irq_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "as3935_spi": {
      "allOf": [
        {
          "properties": {
            "irq_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "indoor": { "type": "boolean", "default": true },
            "noise_level": { "type": "number", "default": 2 },
            "watchdog_threshold": { "type": "number", "default": 2 },
            "spike_rejection": { "type": "number", "default": 2 },
            "lightning_threshold": { "enum": [1, 5, 9, 16] },
            "mask_disturber": { "type": "boolean", "default": false },
            "div_ratio": { "enum": [0, 16, 32, 64, 128] },
            "capacitance": { "type": "number", "default": 0 }
          },
          "type": ["object", "null"],
          "required_": ["irq_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "async_tcp": { "type": ["null", "object", "string", "array", "number"] },
    "ble_client": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/ble_client" } },
        { "$ref": "#/definitions/ble_client" }
      ]
    },
    "bme680_bsec": {
      "allOf": [
        {
          "properties": {
            "temperature_offset": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 0
            },
            "iaq_mode": { "enum": ["STATIC", "MOBILE"] },
            "sample_rate": { "enum": ["LP", "ULP"] },
            "state_save_interval": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "6hours"
            },
            "address": { "type": "string", "default": "118" }
          },
          "type": ["object", "null"]
        }
      ]
    },
    "captive_portal": { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
    "color": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/color" } },
        { "$ref": "#/definitions/color" }
      ]
    },
    "custom_component": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/custom_component" }
        },
        { "$ref": "#/definitions/custom_component" }
      ]
    },
    "dallas": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/dallas" } },
        { "$ref": "#/definitions/dallas" }
      ]
    },
    "daly_bms": { "$ref": "#/definitions/POLLING_COMPONENT" },
    "dashboard_import": {
      "properties": {
        "package_import_url": {
          "type": ["null", "object", "string", "array", "number"]
        }
      },
      "type": ["object", "null"],
      "required_": ["package_import_url"]
    },
    "debug": { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
    "deep_sleep": {
      "allOf": [
        {
          "properties": {
            "run_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"]
            },
            "sleep_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"]
            },
            "wakeup_pin": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
            "wakeup_pin_mode": { "properties": {}, "type": ["object", "null"] },
            "esp32_ext1_wakeup": {
              "properties": {
                "pins": {
                  "anyOf": [
                    { "$ref": "#/definitions/PIN.INPUT_INTERNAL" },
                    {
                      "type": "array",
                      "items": { "$ref": "#/definitions/PIN.INPUT_INTERNAL" }
                    }
                  ]
                },
                "mode": { "enum": ["ALL_LOW", "ANY_HIGH"] }
              },
              "type": ["object", "null"],
              "required_": ["pins", "mode"]
            },
            "touch_wakeup": { "type": "boolean" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "demo": {
      "properties": {
        "binary_sensors": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-binary_sensors[]" },
          "default": [
            { "name": "Demo Basement Floor Wet", "device_class": "moisture" },
            { "name": "Demo Movement Backyard", "device_class": "motion" }
          ]
        },
        "climates": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-climates[]" },
          "default": [
            { "name": "Demo Heatpump", "type": 1 },
            { "name": "Demo HVAC", "type": 2 },
            { "name": "Demo Ecobee", "type": 3 }
          ]
        },
        "covers": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-covers[]" },
          "default": [
            { "name": "Demo Kitchen Window", "type": 1 },
            { "name": "Demo Garage Door", "type": 2, "device_class": "garage" },
            { "name": "Demo Living Room Window", "type": 3 },
            { "name": "Demo Hall Window", "type": 4, "device_class": "window" }
          ]
        },
        "fans": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-fans[]" },
          "default": [
            { "name": "Demo Living Room Fan", "type": 1 },
            { "name": "Demo Ceiling Fan", "type": 2 },
            { "name": "Demo Percentage Limited Fan", "type": 3 },
            { "name": "Demo Percentage Full Fan", "type": 4 }
          ]
        },
        "lights": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-lights[]" },
          "default": [
            { "name": "Demo Binary Light", "type": 1 },
            { "name": "Demo Brightness Light", "type": 2 },
            { "name": "Demo RGB Light", "type": 3 },
            { "name": "Demo RGBW Light", "type": 4 },
            { "name": "Demo RGBWW Light", "type": 5 },
            { "name": "Demo CWWW Light", "type": 6 },
            { "name": "Demo RGBW interlock Light", "type": 7 }
          ]
        },
        "numbers": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-numbers[]" },
          "default": [
            {
              "name": "Demo Number 0-100",
              "type": 1,
              "min_value": 0,
              "max_value": 100,
              "step": 1
            },
            {
              "name": "Demo Number -50-50",
              "type": 2,
              "min_value": -50,
              "max_value": 50,
              "step": 5
            },
            {
              "name": "Demo Number 40-60",
              "type": 3,
              "min_value": 40,
              "max_value": 60,
              "step": 0.2
            }
          ]
        },
        "sensors": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-sensors[]" },
          "default": [
            { "name": "Demo Plain Sensor" },
            {
              "name": "Demo Temperature Sensor",
              "unit_of_measurement": "\u00b0C",
              "icon": "mdi:thermometer",
              "accuracy_decimals": 1,
              "device_class": "temperature",
              "state_class": "measurement"
            },
            {
              "name": "Demo Temperature Sensor",
              "unit_of_measurement": "\u00b0C",
              "icon": "mdi:thermometer",
              "accuracy_decimals": 1,
              "device_class": "temperature",
              "state_class": "measurement"
            },
            {
              "name": "Demo Force Update Sensor",
              "unit_of_measurement": "%",
              "accuracy_decimals": 0,
              "device_class": "humidity",
              "state_class": "measurement",
              "force_update": true
            },
            {
              "name": "Demo Energy Sensor",
              "unit_of_measurement": "Wh",
              "accuracy_decimals": 0,
              "device_class": "energy",
              "state_class": "total_increasing"
            }
          ]
        },
        "switches": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-switches[]" },
          "default": [
            { "name": "Demo Switch 1" },
            {
              "name": "Demo Switch 2",
              "inverted": true,
              "icon": "mdi:bluetooth"
            }
          ]
        },
        "text_sensors": {
          "type": "array",
          "items": { "$ref": "#/definitions/demo-text_sensors[]" },
          "default": [
            { "name": "Demo Text Sensor 1" },
            { "name": "Demo Text Sensor 2", "icon": "mdi:blur" }
          ]
        }
      },
      "type": ["object", "null"]
    },
    "dfplayer": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/dfplayer" } },
        { "$ref": "#/definitions/dfplayer" }
      ]
    },
    "dsmr": {
      "properties": {
        "decryption_key": {
          "type": ["null", "object", "string", "array", "number"]
        },
        "crc_check": { "type": "boolean", "default": true },
        "gas_mbus_id": { "type": "number", "default": 1 }
      },
      "type": ["object", "null"]
    },
    "e131": {
      "properties": { "method": { "enum": ["UNICAST", "MULTICAST"] } },
      "type": ["object", "null"]
    },
    "esp32": {
      "properties": {
        "board": { "type": "string" },
        "variant": {
          "enum": ["ESP32", "ESP32S2", "ESP32S3", "ESP32C3", "ESP32H2"]
        },
        "framework": {
          "allOf": [
            {
              "type": "object",
              "properties": { "type": { "type": "string" } }
            },
            {
              "if": { "properties": { "type": { "const": "esp-idf" } } },
              "then": { "$ref": "#/definitions/esp32-framework-esp-idf" }
            },
            {
              "if": { "properties": { "type": { "const": "arduino" } } },
              "then": { "$ref": "#/definitions/esp32-framework-arduino" }
            }
          ]
        }
      },
      "type": ["object", "null"],
      "required_": ["board"]
    },
    "esp32_ble": { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
    "esp32_ble_beacon": {
      "allOf": [
        {
          "properties": {
            "type": { "enum": ["IBEACON"] },
            "uuid": { "type": ["null", "object", "string", "array", "number"] },
            "major": { "type": "number", "default": 10167 },
            "minor": { "type": "number", "default": 61958 }
          },
          "type": ["object", "null"],
          "required_": ["type", "uuid"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp32_ble_server": {
      "allOf": [
        {
          "properties": {
            "manufacturer": { "type": "string", "default": "ESPHome" },
            "model": { "type": "string" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp32_ble_tracker": {
      "allOf": [
        {
          "properties": {
            "scan_parameters": {
              "properties": {
                "duration": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "5min"
                },
                "interval": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "320ms"
                },
                "window": {
                  "properties": {
                    "days": { "type": "number" },
                    "hours": { "type": "number" },
                    "minutes": { "type": "number" },
                    "seconds": { "type": "number" },
                    "milliseconds": { "type": "number" },
                    "microseconds": { "type": "number" }
                  },
                  "type": ["object", "null"],
                  "default": "30ms"
                },
                "active": { "type": "boolean", "default": true }
              },
              "type": ["object", "null"],
              "default": {}
            },
            "on_ble_advertise": {
              "$ref": "#/definitions/esp32_ble_tracker-on_ble_advertise"
            },
            "on_ble_service_data_advertise": {
              "$ref": "#/definitions/esp32_ble_tracker-on_ble_service_data_advertise"
            },
            "on_ble_manufacturer_data_advertise": {
              "$ref": "#/definitions/esp32_ble_tracker-on_ble_manufacturer_data_advertise"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp32_camera": {
      "allOf": [
        {
          "properties": {
            "name": { "type": "string" },
            "disabled_by_default": { "type": "boolean", "default": false },
            "data_pins": {
              "type": "array",
              "items": { "$ref": "#/definitions/esp32_camera-data_pins[]" }
            },
            "vsync_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "href_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "pixel_clock_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "external_clock": {
              "$ref": "#/definitions/esp32_camera-external_clock"
            },
            "i2c_pins": { "$ref": "#/definitions/esp32_camera-i2c_pins" },
            "reset_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "power_down_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "max_framerate": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "10 fps"
            },
            "idle_framerate": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "0.1 fps"
            },
            "resolution": {
              "enum": [
                "160X120",
                "QQVGA",
                "176X144",
                "QCIF",
                "240X176",
                "HQVGA",
                "320X240",
                "QVGA",
                "400X296",
                "CIF",
                "640X480",
                "VGA",
                "800X600",
                "SVGA",
                "1024X768",
                "XGA",
                "1280X1024",
                "SXGA",
                "1600X1200",
                "UXGA"
              ]
            },
            "jpeg_quality": { "type": "number", "default": 10 },
            "contrast": { "type": "number", "default": 0 },
            "brightness": { "type": "number", "default": 0 },
            "saturation": { "type": "number", "default": 0 },
            "vertical_flip": { "type": "boolean", "default": true },
            "horizontal_mirror": { "type": "boolean", "default": true },
            "test_pattern": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"],
          "required_": [
            "name",
            "data_pins",
            "vsync_pin",
            "href_pin",
            "pixel_clock_pin",
            "external_clock",
            "i2c_pins"
          ]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp32_improv": {
      "allOf": [
        {
          "properties": {
            "identify_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "10s"
            },
            "authorized_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "1min"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp32_touch": {
      "allOf": [
        {
          "properties": {
            "setup_mode": { "type": "boolean", "default": false },
            "iir_filter": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "0ms"
            },
            "sleep_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "27306us"
            },
            "measurement_duration": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "8192us"
            },
            "low_voltage_reference": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "0.5V"
            },
            "high_voltage_reference": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "2.7V"
            },
            "voltage_attenuation": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "0V"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "esp8266": {
      "properties": {
        "board": { "type": "string" },
        "framework": {
          "properties": {
            "version": { "type": "string", "default": "recommended" },
            "source": { "type": "string" },
            "platform_version": { "type": "string" }
          },
          "type": ["object", "null"],
          "default": {}
        },
        "restore_from_flash": { "type": "boolean", "default": false },
        "board_flash_mode": { "enum": ["qio", "qout", "dio", "dout"] }
      },
      "type": ["object", "null"],
      "required_": ["board"]
    },
    "ethernet": {
      "allOf": [
        {
          "properties": {
            "type": { "enum": ["LAN8720", "TLK110"] },
            "mdc_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "mdio_pin": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "clk_mode": {
              "enum": ["GPIO0_IN", "GPIO0_OUT", "GPIO16_OUT", "GPIO17_OUT"]
            },
            "phy_addr": { "type": "number", "default": 0 },
            "power_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
            "manual_ip": { "$ref": "#/definitions/ethernet-manual_ip" },
            "domain": {
              "type": ["null", "object", "string", "array", "number"],
              "default": ".local"
            },
            "use_address": { "type": "string" }
          },
          "type": ["object", "null"],
          "required_": ["type", "mdc_pin", "mdio_pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "exposure_notifications": {
      "properties": {
        "on_exposure_notification": {
          "$ref": "#/definitions/simple_automation"
        }
      },
      "type": ["object", "null"],
      "required_": ["on_exposure_notification"]
    },
    "external_components": {
      "anyOf": [
        { "$ref": "#/definitions/external_components" },
        {
          "type": "array",
          "items": { "$ref": "#/definitions/external_components" }
        }
      ]
    },
    "fingerprint_grow": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/fingerprint_grow" }
        },
        { "$ref": "#/definitions/fingerprint_grow" }
      ]
    },
    "font": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/font" } },
        { "$ref": "#/definitions/font" }
      ]
    },
    "globals": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/globals" } },
        { "$ref": "#/definitions/globals" }
      ]
    },
    "gps": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/gps" } },
        { "$ref": "#/definitions/gps" }
      ]
    },
    "graph": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/graph" } },
        { "$ref": "#/definitions/graph" }
      ]
    },
    "http_request": {
      "allOf": [
        {
          "properties": {
            "useragent": { "type": "string", "default": "ESPHome" },
            "timeout": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "5s"
            },
            "esp8266_disable_ssl_support": { "type": "boolean" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "i2c": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/i2c" } },
        { "$ref": "#/definitions/i2c" }
      ]
    },
    "image": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/image" } },
        { "$ref": "#/definitions/image" }
      ]
    },
    "interval": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/interval" } },
        { "$ref": "#/definitions/interval" }
      ]
    },
    "json": { "type": ["null", "object", "string", "array", "number"] },
    "logger": {
      "allOf": [
        {
          "properties": {
            "baud_rate": { "type": "number", "default": 115200 },
            "tx_buffer_size": {
              "type": ["null", "object", "string", "array", "number"],
              "default": 512
            },
            "deassert_rts_dtr": { "type": "boolean", "default": false },
            "hardware_uart": {
              "type": ["null", "object", "string", "array", "number"],
              "default": "UART0"
            },
            "level": {
              "enum": [
                "NONE",
                "ERROR",
                "WARN",
                "INFO",
                "DEBUG",
                "VERBOSE",
                "VERY_VERBOSE"
              ]
            },
            "logs": { "$ref": "#/definitions/logger-logs" },
            "on_message": { "$ref": "#/definitions/logger-on_message" },
            "esp8266_store_log_strings_in_flash": { "type": "boolean" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "mcp23008": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mcp23008" } },
        { "$ref": "#/definitions/mcp23008" }
      ]
    },
    "mcp23016": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mcp23016" } },
        { "$ref": "#/definitions/mcp23016" }
      ]
    },
    "mcp23017": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mcp23017" } },
        { "$ref": "#/definitions/mcp23017" }
      ]
    },
    "mcp23s08": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mcp23s08" } },
        { "$ref": "#/definitions/mcp23s08" }
      ]
    },
    "mcp23s17": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mcp23s17" } },
        { "$ref": "#/definitions/mcp23s17" }
      ]
    },
    "mcp3008": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/spi_bus" } },
        { "$ref": "#/definitions/spi_bus" }
      ]
    },
    "mdns": {
      "properties": { "disabled": { "type": "boolean", "default": false } },
      "type": ["object", "null"]
    },
    "modbus": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/modbus" } },
        { "$ref": "#/definitions/modbus" }
      ]
    },
    "modbus_controller": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/modbus_controller" }
        },
        { "$ref": "#/definitions/modbus_controller" }
      ]
    },
    "mpr121": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/mpr121" } },
        { "$ref": "#/definitions/mpr121" }
      ]
    },
    "mqtt": {
      "properties": {
        "broker": { "type": "string" },
        "port": { "type": "number", "default": 1883 },
        "username": { "type": "string", "default": "" },
        "password": { "type": "string", "default": "" },
        "client_id": { "type": "string" },
        "discovery": { "type": "boolean", "default": true },
        "discovery_retain": { "type": "boolean", "default": true },
        "discovery_prefix": { "type": "string", "default": "homeassistant" },
        "birth_message": {
          "allOf": [
            {
              "properties": {
                "topic": { "type": "string" },
                "qos": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                },
                "retain": { "type": "boolean", "default": true },
                "payload": { "type": "string" }
              },
              "type": ["object", "null"],
              "required_": ["topic"]
            }
          ]
        },
        "will_message": {
          "allOf": [
            {
              "properties": {
                "topic": { "type": "string" },
                "qos": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                },
                "retain": { "type": "boolean", "default": true },
                "payload": { "type": "string" }
              },
              "type": ["object", "null"],
              "required_": ["topic"]
            }
          ]
        },
        "shutdown_message": {
          "allOf": [
            {
              "properties": {
                "topic": { "type": "string" },
                "qos": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                },
                "retain": { "type": "boolean", "default": true },
                "payload": { "type": "string" }
              },
              "type": ["object", "null"],
              "required_": ["topic"]
            }
          ]
        },
        "topic_prefix": { "type": "string" },
        "log_topic": {
          "allOf": [
            {
              "properties": {
                "topic": { "type": "string" },
                "qos": {
                  "type": ["null", "object", "string", "array", "number"],
                  "default": 0
                },
                "retain": { "type": "boolean", "default": true },
                "level": {
                  "enum": [
                    "NONE",
                    "ERROR",
                    "WARN",
                    "INFO",
                    "DEBUG",
                    "VERBOSE",
                    "VERY_VERBOSE"
                  ]
                }
              },
              "type": ["object", "null"],
              "required_": ["topic"]
            }
          ]
        },
        "ssl_fingerprints": {
          "anyOf": [
            { "$ref": "#/definitions/mqtt-ssl_fingerprints" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/mqtt-ssl_fingerprints" }
            }
          ]
        },
        "keepalive": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "15s"
        },
        "reboot_timeout": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "15min"
        },
        "on_message": { "$ref": "#/definitions/mqtt-on_message" },
        "on_json_message": { "$ref": "#/definitions/mqtt-on_json_message" }
      },
      "type": ["object", "null"],
      "required_": ["broker"]
    },
    "my9231": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/my9231" } },
        { "$ref": "#/definitions/my9231" }
      ]
    },
    "ota": {
      "allOf": [
        {
          "properties": {
            "safe_mode": { "type": "boolean", "default": true },
            "port": { "type": "number" },
            "password": { "type": "string" },
            "reboot_timeout": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "5min"
            },
            "num_attempts": { "type": "number", "default": "10" },
            "on_state_change": { "$ref": "#/definitions/simple_automation" },
            "on_begin": { "$ref": "#/definitions/simple_automation" },
            "on_error": { "$ref": "#/definitions/simple_automation" },
            "on_progress": { "$ref": "#/definitions/simple_automation" },
            "on_end": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "packages": {
      "properties": {
        "<class 'str'>": {
          "properties": {
            "url": { "type": ["null", "object", "string", "array", "number"] },
            "file": { "type": ["null", "object", "string", "array", "number"] },
            "files": {
              "anyOf": [
                { "$ref": "#/definitions/packages-<class 'str'>-files" },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/packages-<class 'str'>-files"
                  }
                }
              ]
            },
            "ref": { "type": ["null", "object", "string", "array", "number"] },
            "refresh": {
              "$ref": "#/definitions/external_components-components"
            }
          },
          "type": ["object", "null"],
          "required_": ["url"]
        }
      },
      "type": ["object", "null"]
    },
    "pca9685": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/pca9685" } },
        { "$ref": "#/definitions/pca9685" }
      ]
    },
    "pcf8574": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/pcf8574" } },
        { "$ref": "#/definitions/pcf8574" }
      ]
    },
    "pipsolar": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/POLLING_COMPONENT" }
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "pn532": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/pn532" } },
        { "$ref": "#/definitions/pn532" }
      ]
    },
    "pn532_i2c": {
      "allOf": [
        {
          "properties": {
            "on_tag": { "$ref": "#/definitions/simple_automation" },
            "on_finished_write": { "$ref": "#/definitions/simple_automation" },
            "on_tag_removed": { "$ref": "#/definitions/simple_automation" },
            "address": { "type": "string", "default": "36" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "pn532_spi": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/pn532_spi" } },
        { "$ref": "#/definitions/pn532_spi" }
      ]
    },
    "power_supply": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/power_supply" } },
        { "$ref": "#/definitions/power_supply" }
      ]
    },
    "preferences": {
      "allOf": [
        {
          "properties": {
            "flash_write_interval": {
              "properties": {
                "days": { "type": "number" },
                "hours": { "type": "number" },
                "minutes": { "type": "number" },
                "seconds": { "type": "number" },
                "milliseconds": { "type": "number" },
                "microseconds": { "type": "number" }
              },
              "type": ["object", "null"],
              "default": "60s"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "prometheus": { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" },
    "rc522_i2c": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/rc522_i2c" } },
        { "$ref": "#/definitions/rc522_i2c" }
      ]
    },
    "rc522_spi": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/rc522_spi" } },
        { "$ref": "#/definitions/rc522_spi" }
      ]
    },
    "rdm6300": {
      "allOf": [
        {
          "properties": {
            "on_tag": { "$ref": "#/definitions/simple_automation" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "remote_receiver": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/remote_receiver" }
        },
        { "$ref": "#/definitions/remote_receiver" }
      ]
    },
    "remote_transmitter": {
      "anyOf": [
        {
          "type": "array",
          "items": { "$ref": "#/definitions/remote_transmitter" }
        },
        { "$ref": "#/definitions/remote_transmitter" }
      ]
    },
    "rf_bridge": {
      "allOf": [
        {
          "properties": {
            "on_code_received": { "$ref": "#/definitions/simple_automation" },
            "on_advanced_code_received": {
              "$ref": "#/definitions/simple_automation"
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "rtttl": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/rtttl" } },
        { "$ref": "#/definitions/rtttl" }
      ]
    },
    "ruuvi_ble": { "properties": {}, "type": ["object", "null"] },
    "script": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/script" } },
        { "$ref": "#/definitions/script" }
      ]
    },
    "servo": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/servo" } },
        { "$ref": "#/definitions/servo" }
      ]
    },
    "sim800l": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/sim800l" } },
        { "$ref": "#/definitions/sim800l" }
      ]
    },
    "sm16716": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/sm16716" } },
        { "$ref": "#/definitions/sm16716" }
      ]
    },
    "sm2135": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/sm2135" } },
        { "$ref": "#/definitions/sm2135" }
      ]
    },
    "sn74hc595": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/sn74hc595" } },
        { "$ref": "#/definitions/sn74hc595" }
      ]
    },
    "socket": {
      "properties": {
        "implementation": { "enum": ["lwip_tcp", "bsd_sockets"] }
      },
      "type": ["object", "null"]
    },
    "spi": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/spi" } },
        { "$ref": "#/definitions/spi" }
      ]
    },
    "status_led": {
      "allOf": [
        {
          "properties": {
            "pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
          },
          "type": ["object", "null"],
          "required_": ["pin"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "substitutions": { "properties": {}, "type": ["object", "null"] },
    "sun": {
      "properties": {
        "latitude": { "type": "number" },
        "longitude": { "type": "number" },
        "on_sunrise": { "$ref": "#/definitions/sun-on_sunrise" },
        "on_sunset": { "$ref": "#/definitions/sun-on_sunset" }
      },
      "type": ["object", "null"],
      "required_": ["latitude", "longitude"]
    },
    "sx1509": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/sx1509" } },
        { "$ref": "#/definitions/sx1509" }
      ]
    },
    "tca9548a": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/tca9548a" } },
        { "$ref": "#/definitions/tca9548a" }
      ]
    },
    "teleinfo": {
      "allOf": [
        {
          "properties": {
            "historical_mode": { "type": "boolean", "default": false }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/POLLING_COMPONENT" }
      ]
    },
    "tlc59208f": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/tlc59208f" } },
        { "$ref": "#/definitions/tlc59208f" }
      ]
    },
    "tlc5947": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/tlc5947" } },
        { "$ref": "#/definitions/tlc5947" }
      ]
    },
    "tm1651": {
      "properties": {
        "clk_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" },
        "dio_pin": { "$ref": "#/definitions/PIN.OUTPUT_INTERNAL" }
      },
      "type": ["object", "null"],
      "required_": ["clk_pin", "dio_pin"]
    },
    "ttp229_bsf": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/ttp229_bsf" } },
        { "$ref": "#/definitions/ttp229_bsf" }
      ]
    },
    "ttp229_lsf": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/ttp229_lsf" } },
        { "$ref": "#/definitions/ttp229_lsf" }
      ]
    },
    "tuya": {
      "allOf": [
        {
          "properties": {
            "ignore_mcu_update_on_datapoints": {
              "anyOf": [
                {
                  "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/REMOTE_BASE.RC_SWITCH_RAW_SCHEMA-protocol-sync[]"
                  }
                }
              ]
            }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "uart": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/uart" } },
        { "$ref": "#/definitions/uart" }
      ]
    },
    "web_server": {
      "allOf": [
        {
          "properties": {
            "port": { "type": "number", "default": 80 },
            "css_url": {
              "type": "string",
              "default": "https://esphome.io/_static/webserver-v1.min.css"
            },
            "css_include": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "js_url": {
              "type": "string",
              "default": "https://esphome.io/_static/webserver-v1.min.js"
            },
            "js_include": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "auth": { "$ref": "#/definitions/web_server-auth" }
          },
          "type": ["object", "null"]
        },
        { "$ref": "#/definitions/CONFIG.COMPONENT_SCHEMA" }
      ]
    },
    "web_server_base": { "properties": {}, "type": ["object", "null"] },
    "wifi": {
      "properties": {
        "networks": {
          "anyOf": [
            { "$ref": "#/definitions/wifi-networks" },
            {
              "type": "array",
              "items": { "$ref": "#/definitions/wifi-networks" }
            }
          ]
        },
        "ssid": { "type": "string" },
        "password": { "type": ["null", "object", "string", "array", "number"] },
        "manual_ip": { "$ref": "#/definitions/ethernet-manual_ip" },
        "eap": {
          "properties": {
            "identity": { "type": "string" },
            "username": { "type": "string" },
            "password": { "type": "string" },
            "certificate_authority": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "certificate": {
              "type": ["null", "object", "string", "array", "number"]
            },
            "key": { "type": ["null", "object", "string", "array", "number"] }
          },
          "type": ["object", "null"]
        },
        "ap": { "$ref": "#/definitions/wifi-ap" },
        "domain": {
          "type": ["null", "object", "string", "array", "number"],
          "default": ".local"
        },
        "reboot_timeout": {
          "properties": {
            "days": { "type": "number" },
            "hours": { "type": "number" },
            "minutes": { "type": "number" },
            "seconds": { "type": "number" },
            "milliseconds": { "type": "number" },
            "microseconds": { "type": "number" }
          },
          "type": ["object", "null"],
          "default": "15min"
        },
        "power_save_mode": { "enum": ["NONE", "LIGHT", "HIGH"] },
        "fast_connect": { "type": "boolean", "default": false },
        "use_address": { "type": "string" },
        "output_power": { "type": "number" }
      },
      "type": ["object", "null"]
    },
    "wled": { "type": ["null", "object", "string", "array", "number"] },
    "xiaomi_ble": { "properties": {}, "type": ["object", "null"] },
    "xpt2046": {
      "anyOf": [
        { "type": "array", "items": { "$ref": "#/definitions/xpt2046" } },
        { "$ref": "#/definitions/xpt2046" }
      ]
    }
  }
}
