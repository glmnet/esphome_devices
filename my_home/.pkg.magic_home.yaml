packages: 
  home: !include .pkg.home.yaml
  wifi: !include .pkg.wifi.yaml

esp8266:
  board: esp8285
  restore_from_flash: true
  
# Disable UART logging
logger:
  baud_rate: 0

light:
  - platform: rgb
    id: light_1
    name: $friendly_name
    red: pwm_r
    green: pwm_g
    blue: pwm_b
    restore_mode: RESTORE_DEFAULT_OFF 

    effects:
      # - lambda:
      #     name: RedGreenColorWheel
      #     update_interval: 15ms
      #     lambda: color_wheel(id(light_1));

      - lambda:
          name: RedGreenFade
          update_interval: 4s
          lambda: |-
            static int state = 0;
            auto call = id(light_1).turn_on();
            // Transtion of 1000ms = 1s
            call.set_transition_length(4000);
            if (state == 0) {
              call.set_rgb(1.0, 0.0, 0.0);
            } else if (state == 1) {
              call.set_rgb(0.0, 1.0, 0.0);
            } else if (state == 2) {
              call.set_rgb(0.0, 0.0, 1.0);
            } else {
              call.set_rgb(1.0, 0.0, 0.0);
            }
            call.perform();
            state += 1;
            if (state == 2) // repeat only the red and green from christmas
              state = 0;

output:
  - platform: esp8266_pwm
    pin: GPIO12
    frequency: 1000 Hz
    id: pwm_g

  - platform: esp8266_pwm
    pin: GPIO5
    frequency: 1000 Hz
    id: pwm_r

  - platform: esp8266_pwm
    pin: GPIO13
    frequency: 1000 Hz
    id: pwm_b

  # - platform: esp8266_pwm
  #   pin: GPIO15
  #   frequency: 1000 Hz
  #   id: pwm_w
