substitutions:
  # Capacidad del tanque
  tanque_lleno_l: "550"
  # Litros cuando el flotador activa
  tanque_flotador_cargando: "375"
  # Litros cuando el flotador desactiva
  tanque_flotador_descargando: "40"

esphome:
  name: eh-planta-alta
  platform: ESP8266
  board: nodemcu

  includes:
    - arduino_port_expander.h
  on_boot:
    switch.turn_on: auto_pressure_pump_with_light
  on_loop:
    then:
      # set the common neutral wire relay for patio lights
      if:
        condition:
          or:
            - light.is_on: luz_patio_este
            - light.is_on: luz_patio_oeste
            - light.is_on: luz_patio_proyectores_sureste
        then:
          output.turn_on: gpio_relay_5
        else:
          output.turn_off: gpio_relay_5

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_pass
      #bssid: !secret bssid_mikrotik
  fast_connect: true

# Enable logging
logger:
  baud_rate: 0 # disable log by hardware UART
  level: VERBOSE
  logs:
    i2c: DEBUG
    uart: DEBUG
    sim800l: DEBUG

# Enable Home Assistant API
api:
  services:
    - service: send_sms
      variables:
        recipient: string
        message: string
      then:
        - sim800l.send_sms:
            recipient: !lambda "return recipient;"
            message: !lambda "return message;"
    - service: dial
      variables:
        recipient: string
      then:
        sim800l.dial:
          recipient: !lambda "return recipient;"

ota:

i2c:
  id: i2ccomponent

uart:
  baud_rate: 9600
  tx_pin: TX
  rx_pin: RX
  data_bits: 8
  parity: NONE
  stop_bits: 1

sim800l:
  on_sms_received:
    - logger.log:
        format: "Received '%s' from %s"
        args: ["message.c_str()", "sender.c_str()"]
    - lambda: |-
        id(sms_sender).publish_state(sender);
        id(sms_message).publish_state(message);

text_sensor:
  - platform: template
    id: sms_sender
    name: "Sms Sender"
  - platform: template
    id: sms_message
    name: "Sms Message"

custom_component:
  - id: ape1 # bornes verdes
    lambda: |-
      auto ape_component = new ArduinoPortExpander(i2ccomponent, 0x08);
      return {ape_component};
  - id: ape2 # sim 800 side
    lambda: |-
      auto ape_component = new ArduinoPortExpander(i2ccomponent, 0x09);
      return {ape_component};

binary_sensor:
  - platform: status
    name: "Planta Alta Status"
    on_press:
      then:
        - script.execute: api_just_connected
    on_release:
      if:
        condition:
          for:
            time: 1min
            condition:
              not:
                api.connected:
        then:
          - sim800l.send_sms:
              recipient: !secret glm_phone_number
              message: "Conexion a Home Assistant perdida"

  - platform: homeassistant
    name: "Switch Escalera 1 from HA"
    entity_id: binary_sensor.switch_escalera_1
    on_state:
      then:
        if:
          condition:
            not:
              script.is_running: api_just_connected
          then:
            - light.toggle: luz_escalera

  - platform: homeassistant
    # water pump used to raise water from low tank to upper
    entity_id: switch.bomba_tanque
    id: bomba_tanque

  - platform: custom
    lambda: |-
      return {ape_binary_sensor(id(ape2), 6),
              ape_binary_sensor(id(ape2), 8),
              ape_binary_sensor(id(ape2), 4),
              ape_binary_sensor(id(ape2), 7),
              ape_binary_sensor(id(ape2), 3),
              ape_binary_sensor(id(ape2), 9),
              ape_binary_sensor(id(ape2), 5),
              ape_binary_sensor(id(ape2), 2),
              ape_binary_sensor(id(ape2), 11),
              ape_binary_sensor(id(ape2), 10),
              ape_binary_sensor(id(ape1), 8),
              ape_binary_sensor(id(ape1), 9)};
    binary_sensors:
      - name: "Switch Escalera 1"
        internal: true
        filters:
          - delayed_on_off: 100ms
        on_state:
          then:
            - light.toggle: luz_escalera
      - name: "Switch Escalera Hall"
      - name: "Switch Ante Baño 1"
        internal: true
        filters:
          - delayed_on_off: 100ms
        on_state:
          then:
            - light.toggle: luz_ante_banio_pa
      - name: "Switch Ante Baño 2"
        internal: true
        filters:
          - delayed_on_off: 100ms
        on_state:
          then:
            - light.toggle: luz_ante_banio_pa
      - name: "Switch Baño"
        filters:
          - delayed_on_off: 100ms
        internal: true
        on_state:
          then:
            - light.toggle: luz_banio_pa
      - name: "Movimiento Baño"
        device_class: motion
        filters:
          - delayed_on_off: 100ms
      - name: "Movimiento Hall"
        device_class: motion
        filters:
          - delayed_on_off: 100ms
      - name: "Ventana Baño"
        device_class: window
        filters:
          - delayed_on_off: 100ms
      - name: "Tanque Agua Arriba Flotador Pide"
        id: tanque_arriba_flotador
        filters:
          - invert:
          - delayed_on_off: 2s
        on_press:
          - sensor.template.publish:
              id: tank_liters
              state: ${tanque_flotador_descargando}
        on_release:
          - sensor.template.publish:
              id: tank_liters
              state: ${tanque_flotador_cargando}

      - name: "Tanque Agua Arriba Lleno"
        id: top_tank_full
        filters:
          - invert:
          - delayed_on_off: 15s
        on_press:
          - sensor.template.publish:
              id: tank_liters
              state: ${tanque_lleno_l}
      - name: "Tanque agua arriba flujo en salida"
        id: water_flowing_down
        filters:
          delayed_on_off: 100ms
        on_release:
          if:
            condition:
              switch.is_on: pressure_pump
            then:
              switch.turn_off: pressure_pump

      - name: "Tuberia casa presurizada"

output:
  - platform: custom
    type: binary
    lambda: |- # LTR all relays
      return {ape_binary_output(id(ape1), 2), // Baño
              ape_binary_output(id(ape1), 3), // Escalera
              ape_binary_output(id(ape1), 4), // Ante Baño
              ape_binary_output(id(ape1), 5), //
              ape_binary_output(id(ape1), 10), // Comun Luz Patio
              ape_binary_output(id(ape1), 11), // Luz Patio Este
              ape_binary_output(id(ape1), 12), // Luz Patio Oeste
              ape_binary_output(id(ape1), 6), // Luz Patio SurEste
              ape_binary_output(id(ape2), 13)}; // Pressure pump
    outputs:
      - id: gpio_relay_1
        inverted: true
      - id: gpio_relay_2
        inverted: true
      - id: gpio_relay_3
        inverted: true
      - id: gpio_relay_4
        inverted: true
      - id: gpio_relay_5
        inverted: true
      - id: gpio_relay_6
        inverted: true
      - id: gpio_relay_7
        inverted: true
      - id: gpio_relay_8
        inverted: true
      - id: gpio_pressure_pump

light:
  - platform: binary
    id: luz_banio_pa
    name: "Luz baño Planta alta"
    output: gpio_relay_1
  - platform: binary
    id: luz_escalera
    name: "Luz Escalera"
    output: gpio_relay_2
  - platform: binary
    id: luz_ante_banio_pa
    name: "Luz Ante baño Planta alta"
    output: gpio_relay_3
  - platform: binary
    id: luz_hall_pa
    name: "Luz Hall Planta alta"
    output: gpio_relay_4

  - platform: binary
    id: luz_patio_este
    name: "Luz Patio Este"
    output: gpio_relay_6
  - platform: binary
    id: luz_patio_oeste
    name: "Luz Patio Oeste"
    output: gpio_relay_7
  - platform: binary
    id: luz_patio_proyectores_sureste
    name: "Patio Proyectores Sureste"
    output: gpio_relay_8

script:
  - id: api_just_connected
    then:
      - delay: 40s

switch:
  - platform: restart
    name: "Planta Alta Restart"
  - platform: output
    output: gpio_pressure_pump
    name: Bomba Presurizadora
    id: pressure_pump

  - platform: template
    restore_state: false
    optimistic: true
    name: Presurizadora Automatico
    id: auto_pressure_pump_manual
    on_turn_off:
      - switch.turn_off: pressure_pump

  - platform: template
    name: Presurizadora con luz baño
    optimistic: true
    id: auto_pressure_pump_with_light

interval:
  - interval: 1s
    then:
      - if:
          condition:
            binary_sensor.is_on: top_tank_full
          then:
            lambda: |-
              float new_level = id(tank_liters).state;
              if (isnan(new_level))
                id(tank_liters).publish_state(${tanque_lleno_l});
      - if:
          condition:
            binary_sensor.is_on: bomba_tanque
          # about 500 liters of water are pumped on 22 minutes so
          # about 0.38 liters every second are pumped into the tank
          then:
            - lambda: |-
                float new_level = id(tank_liters).state;
                if (isnan(new_level))
                  new_level = id(tanque_arriba_flotador).state ? 40.0 : ${tanque_flotador_cargando};

                new_level += 0.38;
                if (new_level > ${tanque_lleno_l})
                  new_level = ${tanque_lleno_l};
                if (new_level > ${tanque_flotador_cargando} && id(tanque_arriba_flotador).state)
                  new_level = ${tanque_flotador_cargando};
                id(tank_liters).publish_state(new_level);
      - if:
          condition:
            binary_sensor.is_on: water_flowing_down
          then:
            - lambda: |-
                float new_level = id(tank_liters).state;
                if (isnan(new_level))
                  new_level = id(tanque_arriba_flotador).state ? 40.0 : 450.00;

                if (id(pressure_pump).state)
                  new_level -= 0.16;
                else
                  new_level -= 0.07;

                if (new_level < 40 && !id(tanque_arriba_flotador).state)
                  new_level = 40;

                if (new_level < 0)
                  new_level = 0;

                id(tank_liters).publish_state(new_level);
      - if:
          condition:
            - switch.is_off: pressure_pump
            - or:
                - switch.is_on: auto_pressure_pump_manual
                - and:
                    - switch.is_on: auto_pressure_pump_with_light
                    - light.is_on: luz_banio_pa
            - for:
                time: 5s
                condition:
                  - binary_sensor.is_on: water_flowing_down
          then:
            switch.turn_on: pressure_pump

  - interval: 100ms
    then:
      - if:
          condition:
            for:
              time: 15s
              condition:
                - not:
                    binary_sensor.is_on: water_flowing_down
                - switch.is_on: pressure_pump
          then:
            - switch.turn_off: pressure_pump
            - logger.log:
                level: WARN
                format: Apagando bomba, no hay flujo de agua

sensor:
  - platform: template
    id: tank_liters
    on_value:
      - sensor.template.publish:
          id: tank_level
          # tank max is 550 liters, convert to %
          state: !lambda "return x/5.5;"
    unit_of_measurement: litre
  - platform: template
    name: Nivel Tanque Arriba
    id: tank_level
    unit_of_measurement: "%"
#
#
# IO Table
## MW / UW Marked Wire / Unmarked Wire

# MW - White 0V
# MW - Red +12V

# APE2 06 Ribbon 3 Black - # MW - Yellow - Int Escalera 1
# APE2 08 Ribbon 3 Purple - # UW - White - Int Escalera 2
# APE2 04 Ribbon 3 Blue - # UW - Yellow - Int Ante Baño 1
# APE2 07 Ribbon 3 Green - # UW - Red - Int Ante Baño 2
# APE2 03 Ribbon 3 Yellow - # UW - Blue Int Baño
# APE2 09 Ribbon 3 White - # MW - Blue - PIR Baño
# APE2 05 Ribbon 3 Gray - # MW - Marron - PIR Hall
# APE2 02 Ribbon 3 Red - # UW - Marron - Alarma Ventana Hall
# APE2 12 Ribbon 3 Brown -
# APE2 13 Ribbon 3 Orange - Pressure pump

# APE2 11 Ribbon 2 White - Tanque 1 - Azul - Flotador
# APE2 10 Ribbon 2 Purple - Tanque 2 - Verde - Reed switch lleno - Normally open

# APE1 07 Ribbon 2 Green -
# APE1 08 Ribbon 2 Orange - Tanque 4 - Naranja - Red - Water flow Sensor
# APE1 09 Ribbon 2 Brown - Tanque 5 - Blanco Naranja - Blue - Pipe pressurized

# APE1 A0 Ribbon 1 Black - Tanque 6 - Marron
# APE1 A1 Ribbon 1 Purple - Tanque 7 - Blanco - Marron
# APE1 A2 Ribbon 1 Green
# APE1 13 Ribbon 1 White
