substitutions:
  devicename: test1

esphome:
  name: test1
  platform: ESP32
  board: nodemcu-32s
  on_boot:
    priority: 150.0
    then:
      - lambda: >-
          ESP_LOGD("main", "ON BOOT!");
  on_shutdown:
    then:
      - lambda: >-
          ESP_LOGD("main", "ON SHUTDOWN!");
  on_loop:
    then:
      - lambda: >-
          ESP_LOGV("main", "ON LOOP!");

  build_path: build/test1

packages:
  wifi: !include test_packages/test_packages_package_wifi.yaml
  pkg_test: !include test_packages/test_packages_package1.yaml

wifi:
  networks:
    - ssid: "MySSID"
      password: "password1"
    - ssid: "MySSID2"
      password: ""
      channel: 14
      bssid: "A1:63:95:47:D3:1D"
  manual_ip:
    static_ip: 192.168.178.230
    gateway: 192.168.178.1
    subnet: 255.255.255.0
    dns1: 1.1.1.1
    dns2: 1.2.2.1
  domain: .local
  reboot_timeout: 120s
  power_save_mode: none

http_request:
  useragent: esphome/device
  timeout: 10s

mqtt:
  broker: "192.168.178.84"
  port: 1883
  username: "debug"
  password: "debug"
  client_id: someclient
  discovery: True
  discovery_retain: False
  discovery_prefix: discovery
  topic_prefix: helloworld
  log_topic:
    topic: helloworld/hi
    level: INFO
  birth_message:
  will_message:
  shutdown_message:
    topic: topic/to/send/to
    payload: hi
    qos: 2
    retain: True
  keepalive: 60s
  reboot_timeout: 60s
  on_message:
    - topic: my/custom/topic
      qos: 0
      then:
        - lambda: >-
            ESP_LOGD("main", "Got message %s", x.c_str());
  on_json_message:
    topic: the/topic
    then:
      - if:
          condition:
            - wifi.connected:
            - mqtt.connected:
          then:
            - http_request.get:
                url: https://esphome.io
                headers:
                  Content-Type: application/json
                verify_ssl: false
            - http_request.post:
                url: https://esphome.io
                verify_ssl: false
                json:
                  key: !lambda |-
                    'return "lala";'
                  greeting: "Hello World"
            - http_request.send:
                method: PUT
                url: https://esphome.io
                headers:
                  Content-Type: application/json
                body: "Some data"
                verify_ssl: false
