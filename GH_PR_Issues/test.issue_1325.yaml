esphome:
  name: test_esp32
  platform: ESP32
  board: nodemcu-32s
  platformio_options:
    upload_speed: 921600

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass


logger:
  baud_rate: 0
  level: DEBUG


ota:


uart:
  rx_pin: RX
  tx_pin: TX
  baud_rate: 9600
  id: pms


dfplayer:
  id: my_df_player
  on_finished_playback:
    then:
      logger.log: 'Somebody press play!'

binary_sensor:
- platform: template
  name: "dfplayer_is_playing"
  lambda: 'return id(my_df_player).is_playing();'


api:
  services:
  - service: dfplayer_next
    then:
      - dfplayer.play_next:
  - service: dfplayer_previous
    then:
      - dfplayer.play_previous:
  - service: dfplayer_play
    variables:
      file: int
    then:
      - dfplayer.play: !lambda 'return file;'
  - service: dfplayer_play_loop
    variables:
      file: int
      loop_: bool
    then:
      - dfplayer.play:
          file: !lambda 'return file;'
          loop: !lambda 'return loop_;'
  - service: dfplayer_play_folder
    variables:
      folder: int
      file: int
    then:
      - dfplayer.play_folder:
          folder: !lambda 'return folder;'
          file: !lambda 'return file;'

  - service: dfplayer_play_loo_folder
    variables:
      folder: int
    then:
      - dfplayer.play_folder:
          folder: !lambda 'return folder;'
          loop: True

  - service: dfplayer_set_device
    variables:
      device: int
    then:
      - dfplayer.set_device:
          device: TF_CARD
  # - service: dfplayer_set_device_str
  #   variables:
  #     device: string
  #   then:
  #     - dfplayer.set_device:
  #         device: !lambda 'return (device == "USB")? dfplayer::USB : dfplayer::TF_CARD;'

  - service: dfplayer_set_volume
    variables:
      volume: int
    then:
      - dfplayer.set_volume: !lambda 'return volume;'
  - service: dfplayer_set_eq
    variables:
      preset: int
    then:
      - dfplayer.set_eq: !lambda 'return static_cast<dfplayer::EqPreset>(preset);'

  - service: dfplayer_sleep
    then:
      - dfplayer.sleep

  - service: dfplayer_reset
    then:
      - dfplayer.reset

  - service: dfplayer_start
    then:
      - dfplayer.start

  - service: dfplayer_pause
    then:
      - dfplayer.pause

  - service: dfplayer_stop
    then:
      - dfplayer.stop

  - service: dfplayer_random
    then:
      - dfplayer.random